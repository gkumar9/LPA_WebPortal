{"version":3,"sources":["Assets/login.png","UI/Header/headerlogin.js","firebaseApp.js","UI/Login/index.js","UI/Header/index.js","Assets/url.js","UI/Ques/difficulty.js","UI/Ques/QuesEnglish.js","UI/Ques/QuesHindi.js","UI/Ques/index.js","UI/Dashboard/leftpanelQAtab.js","UI/Dashboard/QAtab.js","UI/Dashboard/leftpanelExamtab.js","UI/Dashboard/Examtab.js","UI/Dashboard/index.js","UI/Exam/leftpanelexam.js","UI/Exam/rightpanelexam.js","UI/Exam/index.js","UI/Editques/difficulty.js","UI/Editques/editcomponent.js","UI/Editques/index.js","UI/QuesPreview/404.js","UI/QuesPreview/pdf.js","UI/QuesPreview/doc.js","UI/QuesPreview/index.js","UI/Editexam/leftpanelexam.js","UI/Editexam/rightpanelexam.js","UI/Editexam/editcomponentexam.js","UI/Editexam/index.js","Navigation.js","App.js","serviceWorker.js","index.js","Assets/Logo.png"],"names":["module","exports","HeaderLogin","Navbar","expand","style","borderBottom","Brand","href","src","Logo","className","alt","Nav","justify","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoginForm","Submit","event","preventDefault","currentTarget","checkValidity","stopPropagation","setState","validated","props","handleSubmit","state","Form","noValidate","this","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","email","onChange","handleChange","Feedback","password","Button","variant","marginTop","Component","Login","loading","auth","signInWithEmailAndPassword","then","user","res","console","log","history","push","catch","error","key","e","target","onAuthStateChanged","authenticated","Fragment","Container","fluid","width","margin","Row","Col","lg","fontWeight","fontSize","LoginImage","message","withRouter","Header","Link","eventKey","onSelect","signOut","Base_url","URL","fetchSubject","fetchChapter","fetchTopic","fetchSubTopic","createQuestion","createQuestionNewVersion","searchquestion","searchexam","fetchExam","fetchSubjectForExam","addnewExam","geteditques","updateExistingQuestionVersion","getexamcontent","updatetest","Radio","coffeeTypes","options","map","loan","isCurrent","difficulty","name","handleDifficultyRadio","React","QuesEnglish","addoptionfn","currentCharCode","letterchartcode","String","fromCharCode","currentArrayOfOption","listOfOptions","content","weightage","deleteOption","index","pop","handleChangeTags","tags","callApiForChapter","selectedSubjectID","axios","method","url","data","authToken","headers","status","listOfChapter","list","selectedChapterID","length","subjectSection","sectionId","callApiForTopic","alert","listOfTopic","selectedTopicID","listOfSubTopic","selectedSubTopicID","subjectTopic","topicId","callApiForSubTopic","subjectSubtopic","subtopicId","handleSubjectChange","listOfSubject","selectedIndex","subject","subjectId","handleChapterChange","handleTopicChange","handleSubTopicChange","handleQuestionEditor","questionData","handleExplanationEditor","explanationData","handleOptioncontentchange","handleOptionWeightageChange","parseInt","saveEnglishdata","difficultyvalue","questionId","version","language","solution","handleSelect","padding","RightpanelEnglish","QuestionComp","item","as","column","sm","borderRadius","background","bind","float","color","onClick","onBeforeLoad","CKEDITOR","disableAutoInline","config","height","editor","getData","varirant","borderColor","ExplanationComp","textAlign","undefined","LeftPanel","currentvaluesubject","filter","subjectName","currentvaluechapter","sectionName","currentvaluetopic","title","currentvaluesubtopic","size","onInit","QuesHindi","saveHindidata","RightpanelHindi","MyBack","styled","Back","Ques","activetab","boxShadow","to","border","marginLeft","Tabs","activeKey","Tab","LeftPanelQAtab","handleLanguageChange","selectedlanguage","listOfLanguage","handlesearchWithFilter","searchResultListLength","clearSearchFromFilters","QAtab","handleAddToBucket","listOfsearchselected","onAddpreviewdata","id","handleSelectAllCheck","checked","tempsearchlist","searchSelectAll","OnPreviewClick","localStorage","setItem","JSON","stringify","listOfselectedPreview","selectedLanguage","pathname","isLoading","templist","obj","temppreviewlist","question","handleSearchboxChange","searchbox","searchResultList","selected","componentDidMount","handleInputChangeCheckboxlistsearch","templistOfselectedPreview","getItem","parse","paddingLeft","paddingRight","paddingTop","Check","label","overflow","Card","Body","Title","inline","level","textTransform","Text","marginBottom","replace","objj","LeftPanelExamtab","currentvalueexam","listOfExam","exam","examId","selectedExamID","handleExamChange","selectedType","handleTypeChange","listOfType","Examtab","testId","callApiForSubject","response","tempsubjectlist","i","j","selectedSubjectId","toLowerCase","year","letterSpacing","Dashboard","setKey","Content","Pane","LeftPanelExam","selectedTypeYear","handleTypeYearChange","startDate","handleStartDateChange","dateFormat","endDate","handleEndDateChange","noGutters","hour","onHourChange","plaintext","readOnly","defaultValue","minute","onMinuteChange","RightExamPanel","testnameEnglish","handleEnglishTestNameChange","testnameHindi","handleHindiTestNameChange","testInstructionEnglish","handleEnglishInstructionChange","testInstructionHindi","handleHindiInstructionChange","listOfSection","deleteSection","versions","object","handleSectionnameChange","marksPerQuestion","handleMarksperQuesChange","negativeMarksPerQuestion","handleNegativeMarksPerQuesChange","handleSectionDescriptionChange","questions","itemquestion","indexquestion","handlSectionQuestionValueChange","deleteSectionQuestion","addSectionQuestions","addSection","Exam","tempsectionlist","date","saveExamdata","toISOString","sections","testInstructions","instructions","time","parseFloat","Number","Date","EditComponent","fetchedData","questionVersions","savedata","questionVersionId","disabled","Editques","match","params","Error404","viewBox","d","points","bodyRef","createRef","createPdf","current","ref","children","Doc","html","savePDF","paperSize","fileName","PreviewQues","isData","location","document","getElementById","setAttribute","ShowData","deleteQuestion","editabledata","splice","obbj","optionitem","optionindex","testSectionVersions","ExamEditComponent","testVersionId","englishtestVersionId","hinditestVersionId","minutes","toString","split","hours","testVersions","testSections","EditExam","test","ProtectedRoute","createBrowserHistory","basename","process","component","path","exact","render","Navigation","App","currentUser","getIdToken","idToken","interceptors","request","use","Promise","resolve","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,mC,6bCwB5BC,MAlBf,WAEE,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,MAAO,CAAEC,aAAc,sBACzC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KACjB,yBACEC,IAAKC,IACLC,UAAU,0CACVC,IAAI,0BAGR,kBAACC,EAAA,EAAD,CAAKF,UAAU,YACf,kBAACE,EAAA,EAAD,CAAKC,SAAO,M,0BCNlBC,IAASC,cATY,CACjBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAIIR,QAAf,ECNMS,G,mBACJ,aAAe,IAAD,8BACZ,+CAGFC,OAAS,SAAAC,GACPA,EAAMC,kBAEuB,IADhBD,EAAME,cACVC,kBACPH,EAAMC,iBACND,EAAMI,mBAER,EAAKC,SAAS,CAAEC,WAAW,IAC3B,EAAKC,MAAMC,gBAVX,EAAKC,MAAQ,CAAEH,WAAW,GAFd,E,sEAgBZ,OACE,yBAAKrB,UAAU,aACb,kBAACyB,EAAA,EAAD,CACEC,YAAU,EACVL,UAAWM,KAAKH,MAAMH,UACtBO,SAAUD,KAAKb,QAEf,kBAACW,EAAA,EAAKI,MAAN,CAAYC,UAAU,sBACpB,kBAACL,EAAA,EAAKM,MAAN,sBACA,kBAACN,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,YAAY,mBACZC,MAAOT,KAAKL,MAAMe,MAClBC,SAAUX,KAAKL,MAAMiB,aAAa,WAEpC,kBAACd,EAAA,EAAKO,QAAQQ,SAAd,qBAEF,kBAACf,EAAA,EAAKI,MAAN,CAAYC,UAAU,sBACpB,kBAACL,EAAA,EAAKM,MAAN,iBACA,kBAACN,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRC,KAAK,WACLE,MAAOT,KAAKL,MAAMmB,SAClBH,SAAUX,KAAKL,MAAMiB,aAAa,cAEpC,kBAACd,EAAA,EAAKO,QAAQQ,SAAd,qBAGF,kBAACE,EAAA,EAAD,CAAQR,KAAK,SAASS,QAAQ,8BAA8BjD,MAAO,CAACkD,UAAU,UAA9E,e,GA9CcC,cAsDlBC,E,YACJ,aAAe,IAAD,8BACZ,+CAcFvB,aAAe,WAAO,IAAD,EACS,EAAKC,MAAzBa,EADW,EACXA,MAAOI,EADI,EACJA,SACf,EAAKrB,SAAS,CAAE2B,QAAS,oBACzB3C,EACG4C,OACAC,2BAA2BZ,EAAOI,GAClCS,MAAK,SAACC,EAAMC,GACXC,QAAQC,IAAI,eAAeH,EAAKC,GAChC,EAAK9B,MAAMiC,QAAQC,KAAK,QAEzBC,OAAM,SAAAC,GACL,EAAKtC,SAAS,CAAEsC,MAAOA,EAAOX,QAAS,WA1B/B,EA8BdR,aAAe,SAAAoB,GAAG,OAAI,SAAAC,GACpB,EAAKxC,SAAL,eAAiBuC,EAAMC,EAAEC,OAAOzB,UA7BhC,EAAKZ,MAAQ,CACXa,MAAO,GACPI,SAAU,GACViB,MAAO,KACPX,SAAQ,GANE,E,iFASO,IAAD,OAClB3C,EAAS4C,OAAOc,oBAAmB,SAAAC,GACjCA,EAAgB,EAAKzC,MAAMiC,QAAQC,KAAK,KAAOH,QAAQC,IAAI,0B,+BAuB7D,OACE,kBAAC,IAAMU,SAAP,KACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACxE,MAAO,CAAEyE,MAAO,OAAQC,OAAQ,SAC/C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,4BAAQ7E,MAAO,CAAE8E,WAAY,MAAOC,SAAU,SAA9C,yBAGA,yBACE3E,IAAK4E,IACL1E,UAAU,oCACVC,IAAI,WAIR,kBAACqE,EAAA,EAAD,KACG3C,KAAKH,MAAMkC,MACV,kBAACO,EAAA,EAAD,KACE,6BACE,4BAAKtC,KAAKH,MAAMkC,MAAMiB,WAGxB,KACJ,kBAAC,EAAD,CACEtC,MAAOV,KAAKH,MAAMa,MAClBI,SAAUd,KAAKH,MAAMiB,SACrBF,aAAcZ,KAAKY,aACnBhB,aAAcI,KAAKJ,eAEpBI,KAAKH,MAAMuB,QACV,kBAACkB,EAAA,EAAD,KACE,6BACE,4BAAKtC,KAAKH,MAAMuB,WAGlB,MAEN,kBAACuB,EAAA,EAAD,CAAKC,GAAG,a,GAzEA1B,aAiFL+B,cAAW9B,G,kBC1GX+B,MA/Bf,WAEE,OACE,kBAACrF,EAAA,EAAD,CAAQC,OAAO,KAAKC,MAAO,CAAEC,aAAc,sBACzC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KACjB,yBACEC,IAAKC,IACLC,UAAU,0CACVC,IAAI,0BAGR,kBAACC,EAAA,EAAD,CAAKF,UAAU,YACf,kBAACE,EAAA,EAAD,CAAKC,SAAO,GACV,kBAACD,EAAA,EAAI4E,KAAL,CAAUjF,KAAK,KAAf,gBACA,kBAACK,EAAA,EAAI4E,KAAL,CACEC,SAAU,EACVC,SAAU,WACR5E,EACG4C,OACAiC,UACA/B,MAAK,SAAAE,GACJC,QAAQC,IAAI,uBAPpB,c,oECpBJ4B,EAAW,2BAmBAC,EAlBL,CACRC,aAAcF,EAAW,iBACzBG,aAAcH,EAAW,yBACzBI,WAAYJ,EAAW,uBACvBK,cAAeL,EAAW,0BAC1BM,eAAgBN,EAAW,0BAC3BO,yBAA0BP,EAAW,gCACrCQ,eAAgBR,EAAW,sBAC3BS,WAAYT,EAAW,kBACvBU,UAAWV,EAAW,cACtBW,oBAAqBX,EAAW,6BAChCY,WAAWZ,EAAS,oBACpBa,YAAYb,EAAS,yBACrBc,8BAA8Bd,EAAS,wCACvCe,eAAef,EAAS,qBACxBgB,WAAWhB,EAAS,oB,iBCdDiB,G,mBACnB,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KACDE,MAAQ,CACX4E,YAAa,CAAC,IAAK,KAAM,QAHV,E,sEAMT,IAAD,OACDC,EAAU1E,KAAKH,MAAM4E,YAAYE,KAAI,SAACC,EAAM5C,GAChD,IAAM6C,EAAY,EAAKlF,MAAMmF,aAAeF,EAC5C,OACE,yBAAK5C,IAAKA,EAAK3D,UAAU,YACvB,6BACE,2BACEA,UACEwG,EACI,gDACA,qBAGN,2BAEExG,UAAU,kBACVkC,KAAK,QACLwE,KAAK,cAELtE,MAAOmE,EACPjE,SAAU,EAAKhB,MAAMqF,wBAEtBJ,QAMX,OACE,yBAAKvG,UAAU,oBACb,yBAAKA,UAAU,OAAOqG,Q,GArCKO,IAAM/D,YCWnCgE,G,kBACJ,WAAYvF,GAAQ,IAAD,8BACjB,4CAAMA,KAsBRwF,YAAc,WACZ,IAAIC,EAAkB,EAAKvF,MAAMwF,gBAC7BN,EAAO,UAAYO,OAAOC,aAAaH,GACvCI,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqB3D,KAAK,CAAEkD,KAAMA,EAAMW,QAAS,GAAIC,UAAW,OAChE,EAAKlG,SAAS,CACZgG,cAAeD,EACfH,gBAAiBD,EAAkB,KA9BpB,EAiCnBQ,aAAe,SAAAC,GACb,IAAIT,EAAkB,EAAKvF,MAAMwF,gBAC7BG,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBM,IAAID,GACzB,EAAKpG,SAAS,CACZgG,cAAeD,EACfH,gBAAiBD,EAAkB,KAvCpB,EA0CnBJ,sBAAwB,SAAA/C,GACtBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEqF,WAAY7C,EAAEC,OAAOzB,SA5CpB,EA8CnBsF,iBAAmB,SAAAC,GACjB,EAAKvG,SAAS,CAAEuG,UA/CC,EAkFnBC,kBAAoB,WACmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIE,aAAe,EAAK7D,MAAMqG,kBAAoB,WACvDI,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,WACE,EAAKC,qBAITC,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,kEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OA3HP,EA+HnBL,gBAAkB,WACqB,KAAjC,EAAKnH,MAAM+G,kBACbT,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIG,WAAa,EAAK9D,MAAM+G,kBAAoB,WACrDN,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEyH,YAAazF,EAAI6E,KAAKA,KAAKK,KAC3BQ,gBACE1F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGW,aAAaC,QACnC,KAER,WACE,EAAKC,wBAITP,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,iEAEF,EAAKlC,SAAS,CACZyH,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OAvKP,EA2KnBG,mBAAqB,WACgB,KAA/B,EAAK3H,MAAMsH,gBACbhB,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAII,cAAgB,EAAK/D,MAAMsH,gBAAkB,WACtDb,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SAAS,CACZ2H,eAAgB3F,EAAI6E,KAAKA,KAAKK,KAC9BU,mBACE5F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGc,gBAAgBC,WACtC,KAGRT,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IAAI,6DACZ,EAAKlC,SAAS,CAAE2H,eAAgB,GAAIC,mBAAoB,OAxMzC,EA2MnBM,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEF,EAAKI,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBArNQ,EAyNnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,WACE,EAAKC,sBAlOQ,EAsOnBiB,kBAAoB,SAAAhG,GAClBA,EAAE5C,iBACF,EAAKI,SACH,CACE0H,gBAAiB,EAAKtH,MAAMqH,YAAYjF,EAAEC,OAAOwC,QAAQmD,eACtDP,aAAaC,UAElB,WACE,EAAKC,yBA9OQ,EAkPnBU,qBAAuB,SAAAjG,GACrBA,EAAE5C,iBACF,EAAKI,SAAS,CACZ4H,mBAAoB,EAAKxH,MAAMuH,eAC7BnF,EAAEC,OAAOwC,QAAQmD,eACjBJ,gBAAgBC,cAvPH,EA0PnBS,qBAAuB,SAAA7B,GACrB,EAAK7G,SAAS,CAAE2I,aAAc9B,KA3Pb,EA6PnB+B,wBAA0B,SAAA/B,GACxB,EAAK7G,SAAS,CAAE6I,gBAAiBhC,KA9PhB,EAgQnBiC,0BAA4B,SAAC1C,EAAOS,GAGlC5E,QAAQC,IAAIkE,EAAOS,GACnB,IAAId,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBK,GAAOH,QAAUY,EACtC,EAAK7G,SAAS,CACZgG,cAAeD,KAvQA,EA0QnBgD,4BAA8B,SAAC3C,EAAO5D,GACpCA,EAAE5C,iBAEF,IAAImG,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBK,GAAOF,UAAY8C,SAASxG,EAAEC,OAAOzB,OAC1D,EAAKhB,SAAS,CACZgG,cAAeD,KAhRA,EAmRnBkD,gBAAkB,WAChB,IAAIC,EACJ,OAAQ,EAAK9I,MAAMiF,YACjB,IAAK,IACH6D,EAAkB,OAClB,MACF,IAAK,KACHA,EAAkB,OAClB,MACF,IAAK,MACHA,EAAkB,UAKtBxC,IAAM,CACJC,OAAQ,OACRC,IAC4B,KAA1B,EAAK1G,MAAMiJ,WACPpF,EAAIK,eACJL,EAAIM,yBACVwC,KAAM,CACJC,UAAW,SACXzB,WAAY6D,EACZC,WAAY,EAAKjJ,MAAMiJ,WACvB7B,UAAW,EAAKlH,MAAM+G,kBACtBmB,UAAW,EAAKlI,MAAMqG,kBACtBwB,WAAY,EAAK7H,MAAMwH,mBACvBrB,KAAM,EAAKnG,MAAMmG,KACjBuB,QAAS,EAAK1H,MAAMsH,gBACpB5G,KAAM,gBACNsI,QAAS,CACPnD,QAAS,EAAK7F,MAAMuI,aACpBU,SAAU,UACVpE,QAAS,EAAK7E,MAAM4F,cAEpBsD,SAAU,EAAKlJ,MAAMyI,kBAGzB9B,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,SACN/E,QAAQC,IAAIF,EAAI6E,KAAKA,MAErBW,MAAM,WAAYxF,EAAI6E,KAAKA,MAC3B,EAAK3G,MAAMiB,aAAaa,EAAI6E,KAAKA,KAAKsC,YACtC,EAAKjJ,MAAMqJ,mBAGdlH,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAtUhB,EAAKpC,MAAQ,CACX+H,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,GACpBrB,KAAM,GACNlB,WAAY,GACZsD,aAAc,GACdE,gBAAiB,GACjB7C,cAAe,CACb,CAAEV,KAAM,WAAYW,QAAS,GAAIC,UAAW,MAC5C,CAAEZ,KAAM,WAAYW,QAAS,GAAIC,UAAW,OAE9CN,gBAAiB,IAnBF,E,iFAiDE,IAAD,OAClB3D,QAAQC,IAAI,MACZwE,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIC,aAAe,UACxB6C,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEmI,cAAenG,EAAI6E,KAAKA,KAAKK,KAC7BT,kBACEzE,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGmB,QAAQC,UAC9B,KAER,WACE,EAAK9B,uBAITgB,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,Q,+BA6PhB,OACE,yBAAKlE,MAAO,CAAEkL,QAAS,SAAUxG,OAAQ,UACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yBACE7E,MAAO,CACLyE,MAAO,UAIX,kBAAC,EAAD,CACEoF,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BQ,YAAalH,KAAKH,MAAMqH,YACxBE,eAAgBpH,KAAKH,MAAMuH,eAC3BO,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BC,kBAAmBjI,KAAKiI,kBACxBC,qBAAsBlI,KAAKkI,qBAC3BhC,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BO,gBAAiBnH,KAAKH,MAAMsH,gBAC5BE,mBAAoBrH,KAAKH,MAAMwH,mBAC/BrB,KAAMhG,KAAKH,MAAMmG,KACjBD,iBAAkB/F,KAAK+F,iBACvBjB,WAAY9E,KAAKH,MAAMiF,WACvBE,sBAAuBhF,KAAKgF,yBAGhC,kBAACrC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,KACE,6BACE,kBAAC,EAAD,CACEwF,qBAAsBnI,KAAKmI,qBAC3BC,aAAcpI,KAAKH,MAAMuI,aACzBC,wBAAyBrI,KAAKqI,wBAC9BC,gBAAiBtI,KAAKH,MAAMyI,gBAC5B7C,cAAezF,KAAKH,MAAM4F,cAC1BJ,gBAAiBrF,KAAKH,MAAMwF,gBAC5BkD,0BAA2BvI,KAAKuI,0BAChCC,4BAA6BxI,KAAKwI,4BAClCrD,YAAanF,KAAKmF,YAClBS,aAAc5F,KAAK4F,aACnB8C,gBAAiB1I,KAAK0I,oBAI5B,kBAAC/F,EAAA,EAAD,CAAKC,GAAG,Y,GA5XQ1B,cAkYpBgI,E,iLACM,IAAD,OAEP,OACE,kBAACpJ,EAAA,EAAD,KACE,kBAACqJ,EAAD,CAEEhB,qBAAsBnI,KAAKL,MAAMwI,qBACjCC,aAAcpI,KAAKL,MAAMyI,eAE1BpI,KAAKL,MAAM8F,eACVzF,KAAKL,MAAM8F,cAAcd,KAAI,SAACyE,EAAMvD,GAClC,OACE,kBAAC,IAAMxD,SAAP,CAAgBL,IAAK6D,GACnB,kBAAC/F,EAAA,EAAKI,MAAN,CAAYmJ,GAAI3G,IAAK3E,MAAO,CAAEkD,UAAW,QACvC,kBAACnB,EAAA,EAAKM,MAAN,CAAYkJ,QAAM,EAACC,GAAG,IAAIxL,MAAO,CAAE8E,WAAY,QAC5CuG,EAAKrE,MAER,kBAACpC,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,IAAKC,WAAY,aACxClJ,KAAK,SACLE,MAAO2I,EAAKzD,WAAa,EACzBhF,SAAU,EAAKhB,MAAM6I,4BAA4BkB,KAC/C,EACA7D,GAEFrF,YAAY,eAGf,EAAKb,MAAM8F,cAAcoB,SAAWhB,EAAQ,GAC3C,kBAAClD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEhD,MAAO,CAAE4L,MAAO,QAASC,MAAO,QAChC5I,QAAQ,OACR6I,QAAS,EAAKlK,MAAMiG,aAAa8D,KAAK,EAAM7D,IAH9C,cAUN,yBAAK9H,MAAO,CAAE0E,OAAQ,YACpB,kBAAC,IAAD,CAKEqH,aAAc,SAAAC,GAAQ,OACnBA,EAASC,mBAAoB,GAEhCC,OAAQ,CACNC,OAAQ,IAGV5D,KAAM8C,EAAK1D,QACX/E,SAAU,SAAAvB,GACR,IAAMkH,EAAOlH,EAAM+K,OAAOC,UAC1B,EAAKzK,MAAM4I,0BAA0B1C,EAAOS,WAO1D,kBAAC5D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,OACR,kBAACD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACE8I,QAAS7J,KAAKL,MAAMwF,YACpBkF,SAAS,OACTtM,MAAO,CACL+E,SAAU,QACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,IACdG,MAAO,UAGR,IAZH,kBAiBJ,yBAAK5L,MAAO,CAAE0E,OAAQ,UACpB,kBAAC8H,EAAD,CACElC,wBAAyBrI,KAAKL,MAAM0I,wBACpCC,gBAAiBtI,KAAKL,MAAM2I,mBAIhC,yBAAKvK,MAAO,CAAE0E,OAAQ,QAAS+H,UAAW,WACxC,kBAACzJ,EAAA,EAAD,CACEhD,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,UACbrB,QAAS,cACTnG,SAAU,QACVD,WAAY,OAEdgH,QAAS7J,KAAKL,MAAM+I,iBAEO,KAA1B1I,KAAKL,MAAMiJ,iBAA+C6B,IAA1BzK,KAAKL,MAAMiJ,WACxC,+BACA,uB,GA1GgB1H,aAkH1BwJ,E,iLACM,IAAD,OACHC,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GACFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GACJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GACFkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAEJ,IAAIC,EAAoBhL,KAAKL,MAAMuH,YAAY0D,QAC7C,SAAAxB,GAAI,OAAIA,EAAK9B,aAAaC,UAAY,EAAK5H,MAAMwH,mBACjD,GACF6D,EAAoBA,EAAoBA,EAAkBC,MAAQ,GAClE,IAAIC,EAAuBlL,KAAKL,MAAMyH,eAAewD,QACnD,SAAAxB,GAAI,OAAIA,EAAK3B,gBAAgBC,aAAe,EAAK/H,MAAM0H,sBACvD,GAIF,OAHA6D,EAAuBA,EACnBA,EAAqBD,MACrB,GAEF,kBAACnL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBACrBlH,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,kBAMlB,kBAAC/K,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAMlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,SAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOuK,EACPrK,SAAUX,KAAKL,MAAMsI,mBAEpBjI,KAAKL,MAAMuH,aACVlH,KAAKL,MAAMuH,YAAYvC,KAAI,SAACyE,EAAMvD,GAChC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,aAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOyK,EACPvK,SAAUX,KAAKL,MAAMuI,sBAEpBlI,KAAKL,MAAMyH,gBACVpH,KAAKL,MAAMyH,eAAezC,KAAI,SAACyE,EAAMvD,GACnC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,6BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC,IAAD,CACEpC,MAAOT,KAAKL,MAAMqG,KAClBrF,SAAUX,KAAKL,MAAMoG,oBAGzB,kBAACjG,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,cAOA,6BACA,kBAAC,EAAD,CACEiC,WAAY9E,KAAKL,MAAMmF,WACvBE,sBAAuBhF,KAAKL,MAAMqF,8B,GAxJtB9D,aAgKxB,SAASiI,EAAT,GAA+D,IAAvCf,EAAsC,EAAtCA,aAAcD,EAAwB,EAAxBA,qBACpC,OACE,kBAACrI,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,YAOA,yBACE9E,MAAO,CACL0E,OAAQ,YAGV,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GACxDC,OAAQ,CACNC,OAAQ,IAGV5D,KAAM8B,EAKNzH,SAAU,SAACvB,EAAO+K,GAChB,IAAM7D,EAAOlH,EAAM+K,OAAOC,UAE1BjC,EAAqB7B,QAkBjC,SAASiE,EAAT,GAAwE,IAA7CjC,EAA4C,EAA5CA,gBAAiBD,EAA2B,EAA3BA,wBAC1C,OACE,kBAACvI,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,eAOA,yBACE9E,MAAO,CACL0E,OAAQ,YAGV,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GAClDC,OAAQ,CACNC,OAAQ,IAGhB5D,KAAMgC,EACN8C,OAAQ,SAAAjB,KAIRxJ,SAAU,SAACvB,EAAO+K,GAChB,IAAM7D,EAAOlH,EAAM+K,OAAOC,UAC1B/B,EAAwB/B,QAarBpB,Q,QC7uBTmG,G,YACJ,WAAY1L,GAAQ,IAAD,8BACjB,4CAAMA,KAqBRwF,YAAc,WACZ,IAAIC,EAAkB,EAAKvF,MAAMwF,gBAC7BN,EAAO,UAAYO,OAAOC,aAAaH,GACvCI,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqB3D,KAAK,CAAEkD,KAAMA,EAAMW,QAAS,GAAIC,UAAW,OAChE,EAAKlG,SAAS,CACZgG,cAAeD,EACfH,gBAAiBD,EAAkB,KA7BpB,EAgCnBQ,aAAe,SAAAC,GACb,IAAIT,EAAkB,EAAKvF,MAAMwF,gBAC7BG,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBM,IAAID,GACzB,EAAKpG,SAAS,CACZgG,cAAeD,EACfH,gBAAiBD,EAAkB,KAtCpB,EAyCnBJ,sBAAwB,SAAA/C,GACtBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEqF,WAAY7C,EAAEC,OAAOzB,SA3CpB,EA6CnBsF,iBAAmB,SAAAC,GACjB,EAAKvG,SAAS,CAAEuG,UA9CC,EAgFnBC,kBAAoB,WACmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIE,aAAe,EAAK7D,MAAMqG,kBAAoB,SACvDI,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,WACE,EAAKC,qBAITC,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,gEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OAzHP,EA6HnBL,gBAAkB,WACqB,KAAjC,EAAKnH,MAAM+G,kBACbT,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIG,WAAa,EAAK9D,MAAM+G,kBAAoB,SACrDN,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEyH,YAAazF,EAAI6E,KAAKA,KAAKK,KAC3BQ,gBACE1F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGW,aAAaC,QACnC,KAER,WACE,EAAKC,wBAITP,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,+DAEF,EAAKlC,SAAS,CACZyH,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OArKP,EAyKnBG,mBAAqB,WACgB,KAA/B,EAAK3H,MAAMsH,gBACbhB,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAII,cAAgB,EAAK/D,MAAMsH,gBAAkB,SACtDb,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SAAS,CACZ2H,eAAgB3F,EAAI6E,KAAKA,KAAKK,KAC9BU,mBACE5F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGc,gBAAgBC,WACtC,KAGRT,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IAAI,2DACZ,EAAKlC,SAAS,CAAE2H,eAAgB,GAAIC,mBAAoB,OAtMzC,EAyMnBM,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEF,EAAKI,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBAnNQ,EAuNnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,WACE,EAAKC,sBAhOQ,EAoOnBiB,kBAAoB,SAAAhG,GAClBA,EAAE5C,iBACF,EAAKI,SACH,CACE0H,gBAAiB,EAAKtH,MAAMqH,YAAYjF,EAAEC,OAAOwC,QAAQmD,eACtDP,aAAaC,UAElB,WACE,EAAKC,yBA5OQ,EAgPnBU,qBAAuB,SAAAjG,GACrBA,EAAE5C,iBACF,EAAKI,SAAS,CACZ4H,mBAAoB,EAAKxH,MAAMuH,eAC7BnF,EAAEC,OAAOwC,QAAQmD,eACjBJ,gBAAgBC,cArPH,EAwPnBS,qBAAuB,SAAA7B,GACrB,EAAK7G,SAAS,CAAE2I,aAAc9B,KAzPb,EA2PnB+B,wBAA0B,SAAA/B,GACxB,EAAK7G,SAAS,CAAE6I,gBAAiBhC,KA5PhB,EA8PnBiC,0BAA4B,SAAC1C,EAAOS,GAIlC,IAAId,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBK,GAAOH,QAAUY,EACtC,EAAK7G,SAAS,CACZgG,cAAeD,KArQA,EAwQnBgD,4BAA8B,SAAC3C,EAAO5D,GACpCA,EAAE5C,iBAEF,IAAImG,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBK,GAAOF,UAAY8C,SAASxG,EAAEC,OAAOzB,OAC1D,EAAKhB,SAAS,CACZgG,cAAeD,KA9QA,EAiRnB8F,cAAgB,WAEd,IAAI3C,EACJ,OAFAjH,QAAQC,IAAI,cAAe,EAAKhC,MAAMiJ,YAE9B,EAAK/I,MAAMiF,YACjB,IAAK,IACH6D,EAAkB,OAClB,MACF,IAAK,KACHA,EAAkB,OAClB,MACF,IAAK,MACHA,EAAkB,UAKtBxC,IAAM,CACJC,OAAQ,OACRC,IAC4B,KAA1B,EAAK1G,MAAMiJ,WACPpF,EAAIK,eACJL,EAAIM,yBACVwC,KAAM,CACJC,UAAW,SACXzB,WAAY6D,EACZC,WAAY,EAAKjJ,MAAMiJ,WACvB7B,UAAW,EAAKlH,MAAM+G,kBACtBmB,UAAW,EAAKlI,MAAMqG,kBACtBwB,WAAY,EAAK7H,MAAMwH,mBACvBrB,KAAM,EAAKnG,MAAMmG,KACjBuB,QAAS,EAAK1H,MAAMsH,gBACpB5G,KAAM,gBACNsI,QAAS,CACPnD,QAAS,EAAK7F,MAAMuI,aACpBU,SAAU,QACVpE,QAAS,EAAK7E,MAAM4F,cAEpBsD,SAAU,EAAKlJ,MAAMyI,kBAGzB9B,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,EAAI6E,KAAKA,MACF,MAAf7E,EAAIgF,QACNQ,MAAM,WAAWxF,EAAI6E,KAAKA,MACI,KAA1B,EAAK3G,MAAMiJ,aAEb,EAAKjJ,MAAMiB,aAAa8I,KAAxB,eAAmCjI,EAAI6E,KAAKA,KAAKsC,YACjD,EAAKjJ,MAAMqJ,iBAGbtH,QAAQC,IAAI,uBAMfG,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OA5UhB,EAAKpC,MAAQ,CACX+H,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,GACpBrB,KAAM,GACNlB,WAAY,GACZsD,aAAc,GACdE,gBAAiB,GACjB7C,cAAe,CACb,CAAEV,KAAM,WAAYW,QAAS,GAAIC,UAAW,MAC5C,CAAEZ,KAAM,WAAYW,QAAS,GAAIC,UAAW,OAE9CN,gBAAiB,IAnBF,E,iFAgDE,IAAD,OAClBc,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIC,aAAe,QACxB6C,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEmI,cAAenG,EAAI6E,KAAKA,KAAKK,KAC7BT,kBACEzE,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGmB,QAAQC,UAC9B,KAER,WACE,EAAK9B,uBAITgB,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,Q,+BAqQhB,OACE,yBAAKlE,MAAO,CAAEkL,QAAS,SAAUxG,OAAQ,UACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yBACE7E,MAAO,CACLyE,MAAO,UAIX,kBAAC,GAAD,CACEoF,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BQ,YAAalH,KAAKH,MAAMqH,YACxBE,eAAgBpH,KAAKH,MAAMuH,eAC3BO,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BC,kBAAmBjI,KAAKiI,kBACxBC,qBAAsBlI,KAAKkI,qBAC3BhC,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BO,gBAAiBnH,KAAKH,MAAMsH,gBAC5BE,mBAAoBrH,KAAKH,MAAMwH,mBAC/BrB,KAAMhG,KAAKH,MAAMmG,KACjBD,iBAAkB/F,KAAK+F,iBACvBjB,WAAY9E,KAAKH,MAAMiF,WACvBE,sBAAuBhF,KAAKgF,yBAGhC,kBAACrC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,KACE,6BACE,kBAAC,GAAD,CACEwF,qBAAsBnI,KAAKmI,qBAC3BC,aAAcpI,KAAKH,MAAMuI,aACzBC,wBAAyBrI,KAAKqI,wBAC9BC,gBAAiBtI,KAAKH,MAAMyI,gBAC5B7C,cAAezF,KAAKH,MAAM4F,cAC1BJ,gBAAiBrF,KAAKH,MAAMwF,gBAC5BkD,0BAA2BvI,KAAKuI,0BAChCC,4BAA6BxI,KAAKwI,4BAClCrD,YAAanF,KAAKmF,YAClBS,aAAc5F,KAAK4F,aACnB0F,cAAetL,KAAKsL,kBAI1B,kBAAC3I,EAAA,EAAD,CAAKC,GAAG,Y,GAlYM1B,aAwYlBqK,G,iLACM,IAAD,OACP,OACE,kBAACzL,EAAA,EAAD,KACE,kBAAC,GAAD,CAEEqI,qBAAsBnI,KAAKL,MAAMwI,qBACjCC,aAAcpI,KAAKL,MAAMyI,eAE1BpI,KAAKL,MAAM8F,eACVzF,KAAKL,MAAM8F,cAAcd,KAAI,SAACyE,EAAMvD,GAClC,OACE,kBAAC,IAAMxD,SAAP,CAAgBL,IAAK6D,GACnB,kBAAC/F,EAAA,EAAKI,MAAN,CAAYmJ,GAAI3G,IAAK3E,MAAO,CAAEkD,UAAW,QACvC,kBAACnB,EAAA,EAAKM,MAAN,CAAYkJ,QAAM,EAACC,GAAG,IAAIxL,MAAO,CAAE8E,WAAY,QAC5CuG,EAAKrE,MAER,kBAACpC,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,IAAKC,WAAY,aACxClJ,KAAK,SACLE,MAAO2I,EAAKzD,WAAa,EACzBhF,SAAU,EAAKhB,MAAM6I,4BAA4BkB,KAC/C,EACA7D,GAEFrF,YAAY,eAGf,EAAKb,MAAM8F,cAAcoB,SAAWhB,EAAQ,GAC3C,kBAAClD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEhD,MAAO,CAAE4L,MAAO,QAASC,MAAO,QAChC5I,QAAQ,OACR6I,QAAS,EAAKlK,MAAMiG,aAAa8D,KAAK,EAAM7D,IAH9C,cAUN,yBAAK9H,MAAO,CAAE0E,OAAQ,YACpB,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GAC5DC,OAAQ,CACNC,OAAQ,IAGN5D,KAAM8C,EAAK1D,QACX/E,SAAU,SAACvB,GACT,IAAMkH,EAAOlH,EAAM+K,OAAOC,UAC1B,EAAKzK,MAAM4I,0BAA0B1C,EAAOS,WAO1D,kBAAC5D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,OACR,kBAACD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACE8I,QAAS7J,KAAKL,MAAMwF,YACpBkF,SAAS,OACTtM,MAAO,CACL+E,SAAU,QACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,IACdG,MAAO,UAGR,IAZH,kBAiBJ,yBAAK5L,MAAO,CAAE0E,OAAQ,UACpB,kBAAC,GAAD,CACE4F,wBAAyBrI,KAAKL,MAAM0I,wBACpCC,gBAAiBtI,KAAKL,MAAM2I,mBAIhC,yBAAKvK,MAAO,CAAE0E,OAAQ,QAAS+H,UAAW,WACxC,kBAACzJ,EAAA,EAAD,CACEhD,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,UACbrB,QAAS,cACTnG,SAAU,QACVD,WAAY,OAEdgH,QAAS7J,KAAKL,MAAM2L,eAEO,KAA1BtL,KAAKL,MAAMiJ,iBAA+C6B,IAA1BzK,KAAKL,MAAMiJ,WACxC,iCACA,uB,GAnGc1H,aA2GxBwJ,G,iLACM,IAAD,OACHC,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GACFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GACJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GACFkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAEJ,IAAIC,EAAoBhL,KAAKL,MAAMuH,YAAY0D,QAC7C,SAAAxB,GAAI,OAAIA,EAAK9B,aAAaC,UAAY,EAAK5H,MAAMwH,mBACjD,GACF6D,EAAoBA,EAAoBA,EAAkBC,MAAQ,GAClE,IAAIC,EAAuBlL,KAAKL,MAAMyH,eAAewD,QACnD,SAAAxB,GAAI,OAAIA,EAAK3B,gBAAgBC,aAAe,EAAK/H,MAAM0H,sBACvD,GAIF,OAHA6D,EAAuBA,EACnBA,EAAqBD,MACrB,GAEF,kBAACnL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBACrBlH,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,kBAMlB,kBAAC/K,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAMlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,SAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOuK,EACPrK,SAAUX,KAAKL,MAAMsI,mBAEpBjI,KAAKL,MAAMuH,aACVlH,KAAKL,MAAMuH,YAAYvC,KAAI,SAACyE,EAAMvD,GAChC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,aAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOyK,EACPvK,SAAUX,KAAKL,MAAMuI,sBAEpBlI,KAAKL,MAAMyH,gBACVpH,KAAKL,MAAMyH,eAAezC,KAAI,SAACyE,EAAMvD,GACnC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC,IAAD,CACEpC,MAAOT,KAAKL,MAAMqG,KAClBrF,SAAUX,KAAKL,MAAMoG,oBAGzB,kBAACjG,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,cAOA,6BACA,kBAAC,EAAD,CACEiC,WAAY9E,KAAKL,MAAMmF,WACvBE,sBAAuBhF,KAAKL,MAAMqF,8B,GAxJtB9D,aAgKxB,SAASiI,GAAT,GAA+D,IAAvCf,EAAsC,EAAtCA,aAAcD,EAAwB,EAAxBA,qBACpC,OACE,kBAACrI,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,YAOA,yBACE9E,MAAO,CACL0E,OAAQ,YAGV,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GAClDC,OAAQ,CACNC,OAAQ,IAGhB5D,KAAM8B,EAKNzH,SAAU,SAACvB,GACT,IAAMkH,EAAOlH,EAAM+K,OAAOC,UAE1BjC,EAAqB7B,QAkBjC,SAASiE,GAAT,GAAwE,IAA7CjC,EAA4C,EAA5CA,gBAAiBD,EAA2B,EAA3BA,wBAC1C,OACE,kBAACvI,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,eAOA,yBACE9E,MAAO,CACL0E,OAAQ,YAGV,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GAClDC,OAAQ,CACNC,OAAQ,IAGhB5D,KAAMgC,EACN8C,OAAQ,SAAAjB,KAIRxJ,SAAU,SAACvB,EAAO+K,GAChB,IAAM7D,EAAOlH,EAAM+K,OAAOC,UAC1B/B,EAAwB/B,QAarB+E,U,SC7uBTG,GAASC,YAAOC,IAAPD,CAAa,CAC1B7B,MAAO,UACP3I,UAAW,SACXuB,MAAO,QAsFMmJ,G,YAnFb,WAAYhM,GAAQ,IAAD,8BACjB,4CAAMA,KAMRqJ,aAAe,WAEK,MADF,EAAKnJ,MAAM+L,UAEzB,EAAKnM,SAAS,CAAEmM,UAAW,MAE3B,EAAKnM,SAAS,CAAEmM,UAAW,OAZZ,EAenBhL,aAAe,SAAA0F,GACb5E,QAAQC,IAAI,2BAA4B2E,GACxC,EAAK7G,SAAS,CAAEmJ,WAAYtC,KAf5B,EAAKzG,MAAQ,CACX+I,WAAY,GACZgD,UAAW,KAJI,E,sEAoBjB,OACE,kBAAC,IAAMvJ,SAAP,KACE,kBAAC,EAAD,MACA,yBACEtE,MAAO,CACL8N,UAAW,wBACXrJ,MAAO,OACP0H,OAAQ,QACRjB,QAAS,YAGX,kBAAC,KAAD,CAAM6C,GAAG,IAAI5J,OAAO,SAClB,kBAACnB,EAAA,EAAD,CACEC,QAAQ,QACRjD,MAAO,CAAE0L,WAAY,cAAesC,OAAQ,gBAE5C,kBAACP,GAAD,MACA,0BACEzN,MAAO,CACLiO,WAAY,MACZlJ,SAAU,QACV8G,MAAO,YAJX,wBAYN,kBAACtH,EAAA,EAAD,CACEC,OAAK,EACLxE,MAAO,CACLyE,MAAO,OACPiH,WAAY,UACZR,QAAS,gBAGX,kBAACgD,EAAA,EAAD,CACE5N,UAAU,WACV2C,QAAQ,OACRkL,UAAWlM,KAAKH,MAAM+L,UACtBvI,SAAUrD,KAAKgJ,cAEf,kBAACmD,EAAA,EAAD,CAAK/I,SAAU,EAAG6H,MAAM,WACtB,kBAAC,EAAD,CACErC,WAAY5I,KAAKH,MAAM+I,WACvBhI,aAAcZ,KAAKY,aACnBoI,aAAchJ,KAAKgJ,gBAGvB,kBAACmD,EAAA,EAAD,CAAK/I,SAAU,EAAG6H,MAAM,SACtB,kBAAC,GAAD,CACErC,WAAY5I,KAAKH,MAAM+I,WACvBhI,aAAcZ,KAAKY,aACnBoI,aAAchJ,KAAKgJ,uB,GA3EhB9H,a,wEC+MJkL,I,wLAxNH,IAAD,OACHzB,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GAEFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GAEJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GACFkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAEJ,IAAIC,EAAoBhL,KAAKL,MAAMuH,YAAY0D,QAC7C,SAAAxB,GAAI,OAAIA,EAAK9B,aAAaC,UAAY,EAAK5H,MAAMwH,mBACjD,GACF6D,EAAoBA,EAAoBA,EAAkBC,MAAQ,GAClE,IAAIC,EAAuBlL,KAAKL,MAAMyH,eAAewD,QACnD,SAAAxB,GAAI,OAAIA,EAAK3B,gBAAgBC,aAAe,EAAK/H,MAAM0H,sBACvD,GAKF,OAJA6D,EAAuBA,EACnBA,EAAqBD,MACrB,GAGF,kBAACnL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,YAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAM0M,qBAAqB3C,KAAK1J,MAC/CS,MAAOT,KAAKL,MAAM2M,kBAEjBtM,KAAKL,MAAM4M,gBACVvM,KAAKL,MAAM4M,eAAe5H,KAAI,SAACyE,EAAMvD,GACnC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,GACxBA,QAMb,kBAACtJ,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBAAoB+B,KAAK1J,MAC9CS,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,gBAIZ,4BAAQ7I,IAAI,GAAGvB,MAAM,IAArB,YAGN,kBAACX,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAMlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,SAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOuK,EACPrK,SAAUX,KAAKL,MAAMsI,mBAEpBjI,KAAKL,MAAMuH,aACVlH,KAAKL,MAAMuH,YAAYvC,KAAI,SAACyE,EAAMvD,GAChC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,aAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOyK,EACPvK,SAAUX,KAAKL,MAAMuI,sBAEpBlI,KAAKL,MAAMyH,gBACVpH,KAAKL,MAAMyH,eAAezC,KAAI,SAACyE,EAAMvD,GACnC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAiClB,oCACE,kBAAClK,EAAA,EAAD,CACEoK,KAAK,KACLtB,QAAS7J,KAAKL,MAAM6M,uBACpBzO,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,gBANjB,uBAWCtK,KAAKL,MAAM8M,uBAAyB,GACnC,kBAAC1L,EAAA,EAAD,CACEoK,KAAK,KACLtB,QAAS7J,KAAKL,MAAM+M,uBACpB3O,MAAO,CACLiO,WAAY,MACZxC,aAAc,IACdC,WAAY,UACZa,YAAa,gBAPjB,sB,GAtMiBpJ,c,qBCSvByL,I,mBACJ,WAAYhN,GAAQ,IAAD,8BACjB,4CAAMA,KAoBRiN,kBAAoB,WACW,EAAK/M,MAAMgN,qBAAqBjC,QAC3D,SAAAxB,GAAI,OAAoB,IAAhBA,EAAK3C,UAEQ9B,KAAK,SAAAyE,GAC1B1H,QAAQC,IAAIyH,GACZ,EAAK0D,iBAAiB1D,EAAK2D,QA3BZ,EA8BnBC,qBAAuB,SAAA/K,GACrB,GAAIA,EAAEC,OAAO+K,QAAS,CACpB,IAAIC,EAAiB,EAAKrN,MAAMgN,qBAAqBlI,KAAI,SAAAyE,GAEvD,OADAA,EAAK3C,QAAS,EACP2C,KAET,EAAK3J,SAAS,CACZ0N,gBAAiBlL,EAAEC,OAAO+K,QAC1BJ,qBAAsBK,QAEnB,CACL,IAAIA,EAAiB,EAAKrN,MAAMgN,qBAAqBlI,KAAI,SAAAyE,GAEvD,OADAA,EAAK3C,QAAS,EACP2C,KAET,EAAK3J,SAAS,CACZ0N,gBAAiBlL,EAAEC,OAAO+K,QAC1BJ,qBAAsBK,MA/CT,EAoDnBE,eAAiB,WACfC,aAAaC,QACX,cACAC,KAAKC,UAAU,EAAK3N,MAAM4N,wBAE5BJ,aAAaC,QAAQ,kBAAmB,EAAKzN,MAAM6N,kBACnD,EAAK/N,MAAMiC,QAAQC,KAAK,CACtB8L,SAAU,eACV9N,MAAO,CACLyG,KAAM,EAAKzG,MAAM4N,0BA7DJ,EAkEnBX,iBAAmB,SAAAC,GACjB,EAAKtN,SAAS,CAAEmO,WAAW,IAAQ,WAIjC,GAHsB,EAAK/N,MAAM4N,sBAAsB7C,QACrD,SAAAxB,GAAI,OAAIA,EAAKR,aAAemE,KAEVlG,OAAS,EAAG,CAE9B,IAAIgH,EAAW,EAAKhO,MAAM4N,sBAC1BI,EAAWA,EAASjD,QAAO,SAAAkD,GAAG,OAAIA,EAAIlF,aAAemE,KACrDrL,QAAQC,IAAIkM,GACZ,EAAKpO,SACH,CACEgO,sBAAuBI,EACvBD,WAAW,IAEb,WACEP,aAAaC,QAAQ,cAAeC,KAAKC,UAAUK,YAKvD1H,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIY,YAAc2I,EACvBzG,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACJ,GAAmB,MAAfA,EAAIgF,OAAgB,CACtB,IAAIsH,EAAkB,EAAKlO,MAAM4N,sBACjCM,EAAgBlM,KAAKJ,EAAI6E,KAAKA,KAAK0H,UAGnC,EAAKvO,SACH,CACEgO,sBAAuBM,EAEvBH,WAAW,IAEb,WACEP,aAAaC,QAAQ,cAAeC,KAAKC,UAAUO,YAIvD,EAAKtO,SAAS,CAAEmO,WAAW,IAAS,WAClC3G,MAAM,wBAIXnF,OAAM,SAAAG,GACL,EAAKxC,SAAS,CAAEmO,WAAW,IAAS,WAClC3G,MAAM,yBAvHC,EA6HnBgH,sBAAwB,SAAAhM,GACtBA,EAAE5C,iBACFqC,QAAQC,IAAIM,EAAEC,OAAOzB,OACrB,EAAKhB,SAAS,CAAEyO,UAAWjM,EAAEC,OAAOzB,QACb,KAAnBwB,EAAEC,OAAOzB,MACX0F,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIO,eAAiB,IAC1BuC,KAAM,CACJC,UAAW,SACXuC,SAAU,EAAKjJ,MAAM6N,iBACrB9E,WAAY3G,EAAEC,OAAOzB,MACrBsG,UAAW,EAAKlH,MAAM+G,kBAAkB,EAAK/G,MAAM+G,kBAAkB,KACrEmB,UAAW,EAAKlI,MAAMqG,kBAAkB,EAAKrG,MAAMqG,kBAAkB,KACrEwB,WAAY,EAAK7H,MAAMwH,mBAAmB,EAAKxH,MAAMwH,mBAAmB,KACxEE,QAAS,EAAK1H,MAAMsH,gBAAgB,EAAKtH,MAAMsH,gBAAgB,MAEjEX,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GAEN,GAAmB,MAAfA,EAAIgF,OAAgB,CACtB,IAAIoH,EAAWpM,EAAI6E,KAAKA,KAAKK,KAAKhC,KAAI,SAAAyE,GAIpC,OAHqB,EAAKvJ,MAAM4N,sBAAsB7C,QACpD,SAAAkD,GAAG,OAAIA,EAAIlF,aAAeQ,EAAKR,cAEd/B,OAAS,EACnB,CAAEkG,GAAI3D,EAAKR,WAAYnC,QAAQ,GAE/B,CAAEsG,GAAI3D,EAAKR,WAAYnC,QAAQ,MAI1C,EAAKhH,SAAS,CACZ0O,iBAAkB1M,EAAI6E,KAAKA,KAAKK,KAChCkG,qBAAsBgB,QAK5B,EAAKpO,SAAS,CAAE0O,iBAAkB,GAAItB,qBAAsB,MAtK7C,EAyKnBL,uBAAyB,WACvBrG,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIO,eAAiB,IAC1BuC,KAAM,CACJC,UAAW,SACXuC,SAAU,EAAKjJ,MAAM6N,iBACrB9E,WAAY,EAAK/I,MAAMuO,SACvBrH,UAAW,EAAKlH,MAAM+G,kBACtBmB,UAAW,EAAKlI,MAAMqG,kBACtBwB,WAAY,EAAK7H,MAAMwH,mBACvBE,QAAS,EAAK1H,MAAMsH,iBAEtBX,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GAEN,GAAmB,MAAfA,EAAIgF,OAAgB,CACtB,IAAIoH,EAAWpM,EAAI6E,KAAKA,KAAKK,KAAKhC,KAAI,SAAAyE,GAIpC,OAHqB,EAAKvJ,MAAM4N,sBAAsB7C,QACpD,SAAAkD,GAAG,OAAIA,EAAIlF,aAAeQ,EAAKR,cAEd/B,OAAS,EACnB,CAAEkG,GAAI3D,EAAKR,WAAYnC,QAAQ,GAE/B,CAAEsG,GAAI3D,EAAKR,WAAYnC,QAAQ,MAI1C,EAAKhH,SAAS,CACZ0O,iBAAkB1M,EAAI6E,KAAKA,KAAKK,KAChCkG,qBAAsBgB,SAzMX,EA8MnBnB,uBAAyB,WACvB,EAAKjN,SAAS,CAGZyO,UAAW,GACXxH,cAAc,GACdE,kBAAkB,GAElBV,kBAAkB,GAClBgB,YAAY,GACZC,gBAAgB,GAChBC,eAAe,GACfC,mBAAmB,KACnB,WAAK,EAAKmF,6BA3NK,EA8NnBH,qBAAuB,SAAApK,GACrBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEiO,iBAAkBzL,EAAEC,OAAOzB,QAAS,WAClD,EAAK4N,wBAjOU,EAqTnBpI,kBAAoB,WAEmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAIE,aACJ,EAAK7D,MAAMqG,kBACX,IACA,EAAKrG,MAAM6N,iBACbpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,WACE,EAAKC,qBAITC,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,GACZgF,MAAMhF,GACN,EAAKxC,SAAS,CAAEmO,WAAW,QAG/BlM,QAAQC,IACN,kEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,GACpBuG,WAAW,MAtWE,EA0WnB5G,gBAAkB,WACqB,KAAjC,EAAKnH,MAAM+G,kBACbT,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAIG,WACJ,EAAK9D,MAAM+G,kBACX,IACA,EAAK/G,MAAM6N,iBACbpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEyH,YAAazF,EAAI6E,KAAKA,KAAKK,KAC3BQ,gBACE1F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGW,aAAaC,QACnC,KAER,WACE,EAAKC,wBAITP,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,GACZgF,MAAMhF,GACN,EAAKxC,SAAS,CAAEmO,WAAW,QAG/BlM,QAAQC,IACN,iEAEF,EAAKlC,SAAS,CACZyH,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OAxZP,EA4ZnBG,mBAAqB,WACgB,KAA/B,EAAK3H,MAAMsH,gBACbhB,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAII,cACJ,EAAK/D,MAAMsH,gBACX,IACA,EAAKtH,MAAM6N,iBACbpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SAAS,CACZ2H,eAAgB3F,EAAI6E,KAAKA,KAAKK,KAC9BU,mBACE5F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGc,gBAAgBC,WACtC,KAGRT,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,GACZgF,MAAMhF,GACN,EAAKxC,SAAS,CAAEmO,WAAW,QAG/BlM,QAAQC,IAAI,6DACZ,EAAKlC,SAAS,CAAE2H,eAAgB,GAAIC,mBAAoB,OA/bzC,EAkcnBM,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEqB,KAAnB4C,EAAEC,OAAOzB,MACX,EAAKhB,SACH,CACEyG,kBAAmB,KAErB,WACE,EAAKD,uBAIT,EAAKxG,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBAtdM,EA4dnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,WACE,EAAKC,sBAreQ,EAyenBiB,kBAAoB,SAAAhG,GAClBA,EAAE5C,iBACF,EAAKI,SACH,CACE0H,gBAAiB,EAAKtH,MAAMqH,YAAYjF,EAAEC,OAAOwC,QAAQmD,eACtDP,aAAaC,UAElB,WACE,EAAKC,yBAjfQ,EAqfnBU,qBAAuB,SAAAjG,GACrBA,EAAE5C,iBACF,EAAKI,SAAS,CACZ4H,mBAAoB,EAAKxH,MAAMuH,eAC7BnF,EAAEC,OAAOwC,QAAQmD,eACjBJ,gBAAgBC,cA1fH,EA6fnB4G,oCAAsC,SAACzI,EAAO5D,GAC5C,IAAIiL,EAAiB,EAAKrN,MAAMgN,qBAChCK,EAAerH,GAAOY,OAASxE,EAAEC,OAAO+K,QACxC,EAAKxN,SAAS,CAAEoN,qBAAsBK,KA9ftC,EAAKrN,MAAQ,CACX+H,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,GACpBqG,iBAAkB,UAClBnB,eAAgB,CAAC,UAAW,SAC5B2B,UAAW,GACXC,iBAAkB,GAClBV,sBAAuB,GACvBG,WAAW,EACXf,qBAAsB,GACtBM,iBAAiB,GAlBF,E,iFAoOE,IAAD,OACdoB,EACsC,OAAxClB,aAAamB,QAAQ,gBACmB,KAAxCnB,aAAamB,QAAQ,eACjBjB,KAAKkB,MAAMpB,aAAamB,QAAQ,gBAChC,GAENxO,KAAKP,SACH,CAAEmO,WAAW,EAAOH,sBAAuBc,IAC3C,WACEpI,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIC,aAAe,EAAK5D,MAAM6N,iBACnCpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEmI,cAAenG,EAAI6E,KAAKA,KAAKK,KAC7BT,kBAAkB,GAClB0H,WAAW,IAEb,WACEzH,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIO,eAAiB,IAC1BuC,KAAM,CACJC,UAAW,SACXuC,SAAU,EAAKjJ,MAAM6N,iBACrB9E,WAAY,KACZ7B,UAAW,KACXgB,UAAW,KACXL,WAAY,KACZH,QAAS,MAEXf,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GAEN,GAAmB,MAAfA,EAAIgF,OAAgB,CACtB,IAAIoH,EAAWpM,EAAI6E,KAAKA,KAAKK,KAAKhC,KAAI,SAAAyE,GAIpC,OAHqB,EAAKvJ,MAAM4N,sBAAsB7C,QACpD,SAAAkD,GAAG,OAAIA,EAAIlF,aAAeQ,EAAKR,cAEd/B,OAAS,EACnB,CAAEkG,GAAI3D,EAAKR,WAAYnC,QAAQ,GAE/B,CAAEsG,GAAI3D,EAAKR,WAAYnC,QAAQ,MAI1C,EAAKhH,SAAS,CACZ0O,iBAAkB1M,EAAI6E,KAAKA,KAAKK,KAChCkG,qBAAsBgB,QAI3B/L,OAAM,SAACG,GACNgF,MAAMhF,UAKZgF,MAAM,mBACN,EAAKxH,SAAS,CAAEmO,WAAW,QAG9B9L,OAAM,SAAAG,GACLP,QAAQC,IAAIM,GACZgF,MAAMhF,GACN,EAAKxC,SAAS,CAAEmO,WAAW,Y,+BAkN3B,IAAD,OACP,OACE,kBAAC,IAAMvL,SAAP,KACGrC,KAAKH,MAAM+N,UACV,gCACE,kBAAC,KAAD,CACErN,KAAK,WACLqJ,MAAM,UACNM,OAAQ,IACR1H,MAAO,OAKX,kBAACE,EAAA,EAAD,CAAK3E,MAAO,CAAEmM,OAAQ,SACpB,kBAACvH,EAAA,EAAD,CACEC,GAAG,IACH7E,MAAO,CACLkL,QAAS,UACTQ,WAAY,SAGd,kBAAC,GAAD,CACEgD,uBAAwBzM,KAAKH,MAAMsO,iBAAiBtH,OACpD2F,uBAAwBxM,KAAKwM,uBAC7BE,uBAAwB1M,KAAK0M,uBAC7B9E,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BQ,YAAalH,KAAKH,MAAMqH,YACxBE,eAAgBpH,KAAKH,MAAMuH,eAC3BO,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BC,kBAAmBjI,KAAKiI,kBACxBC,qBAAsBlI,KAAKkI,qBAC3BhC,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BO,gBAAiBnH,KAAKH,MAAMsH,gBAC5BE,mBAAoBrH,KAAKH,MAAMwH,mBAC/BkF,eAAgBvM,KAAKH,MAAM0M,eAC3BD,iBAAkBtM,KAAKH,MAAM6N,iBAC7BrB,qBAAsBrM,KAAKqM,wBAG/B,kBAAC1J,EAAA,EAAD,CACE5E,MAAO,CACL0L,WAAY,UAEZR,QAAS,YAGX,kBAACvG,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,YACpB,kBAACE,EAAA,EAAD,CAAKC,GAAG,OAEN,kBAAC,KAAD,CAAMkJ,GAAG,WAAW5J,OAAO,SACzB,kBAACnB,EAAA,EAAD,CACEhD,MAAO,CACL+E,SAAU,MACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,MAGf,IATH,oBAeJ,kBAAC7G,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACE8I,QAAS7J,KAAKoN,eACdrP,MAAO,CACL+E,SAAU,MACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,IACdG,MAAO,UAGR,IACD,kBAAC,KAAD,CAAMtL,UAAU,cAZlB,cAkCJ,kBAACqE,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,YACpB,kBAACE,EAAA,EAAD,CAAK5E,MAAO,CAAE2Q,YAAa,MAAOC,aAAc,QAC9C,kBAAC7O,EAAA,EAAD,CAAMzB,UAAU,cACd,kBAACyB,EAAA,EAAKI,MAAN,CAAYC,UAAU,mBACpB,kBAACL,EAAA,EAAKO,QAAN,CACEE,KAAK,OACLE,MAAOT,KAAKH,MAAMqO,UAClBvN,SAAUX,KAAKiO,sBACfzN,YAAY,iDACZzC,MAAO,CACLkL,QAAS,YACTO,aAAc,WAQzBxJ,KAAKH,MAAMsO,iBAAiBtH,OAAS,GACpC,kBAACnE,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,cACpB,kBAACE,EAAA,EAAD,CACE5E,MAAO,CAAE2Q,YAAa,QAASE,WAAY,SAC3ChM,GAAG,OAEH,kBAAC9C,EAAA,EAAK+O,MAAN,CACE9B,GAAG,gBACH+B,MAAM,aACN7B,QAASjN,KAAKH,MAAMsN,gBACpBxM,SAAUX,KAAKgN,wBAInB,kBAACrK,EAAA,EAAD,CAAK5E,MAAO,CAAE4Q,aAAc,QAC1B,kBAAC5N,EAAA,EAAD,CACE8I,QAAS7J,KAAK4M,kBACd5L,QAAQ,gBACRmK,KAAK,KACLpN,MAAO,CACL6L,MAAO,QACPU,YAAa,gBAGf,kBAAC,KAAD,CAAQjM,UAAU,cATpB,mBAYF,kBAACsE,EAAA,EAAD,CAAKC,GAAG,OAGZ,yBACE7E,MAAO,CAELgR,SAAU,SAGV9F,QAAS,UAGVjJ,KAAKH,MAAMsO,iBAAiBtH,OAAS,GACpC7G,KAAKH,MAAMsO,iBAAiBxJ,KAAI,SAACyE,EAAMvD,GACrC,OACE,kBAACnD,EAAA,EAAD,CACEV,IAAKoH,EAAKR,WACV7K,MAAO,CACL0E,OAAQ,cAIV,kBAACE,EAAA,EAAD,CACE5E,MAAO,CACL2Q,YAAa,MACbC,aAAc,QAGhB,kBAACK,GAAA,EAAD,CACEjR,MAAO,CACL0L,WAAY,cACZa,YAAa,gBAGf,kBAAC0E,GAAA,EAAKC,KAAN,CACElR,MAAO,CAAEkL,QAAS,IAAKxG,OAAQ,YAE/B,kBAACuM,GAAA,EAAKE,MAAN,CAAYnR,MAAO,CAAE+E,SAAU,WAC7B,kBAAChD,EAAA,EAAK+O,MAAN,CACEM,QAAM,EACN5O,KAAK,WACL0M,QACE,EAAKpN,MAAMgN,qBAAqBhH,GAC7BY,OAEL9F,SAAU,EAAK2N,oCAAoC5E,KACjD,EACA7D,KAIJ,8BACE,kCAAW,IACX,0BAAM9H,MAAO,CAAE6L,MAAO,YACnBR,EAAKR,aAGV,0BACE7K,MAAO,CACL4L,MAAO,QACP7G,SAAU,OACVD,WAAY,QAGd,qCACA,0BAAM9E,MAAO,CAAE6L,MAAO,YAAtB,cACc,IACI,SAAfR,EAAKgG,MACa,SAAfhG,EAAKgG,MACH,KACA,IACc,SAAfhG,EAAKgG,MACJ,KACA,OAhBV,IAmBE,0BACErR,MAAO,CACL6L,MAAO,YACPyF,cAAe,cAGhB,IACAjG,EAAK7I,QAKZ,kBAACyO,GAAA,EAAKM,KAAN,CAAWvR,MAAO,CAAEwR,aAAc,UAC/B,GACAnG,EAAK1D,QAAQ8J,QAAQ,kBAAmB,KAE3C,yBAAKzR,MAAO,CAAE4L,MAAO,UACnB,kBAAC5I,EAAA,EAAD,CACEkK,MACE,EAAKpL,MAAM4N,sBAAsB7C,QAC/B,SAAA6E,GAAI,OACFA,EAAK7G,aAAeQ,EAAKR,cAC3B/B,OAAS,EACP,kBACA,gBAENsE,KAAK,KACLpN,MACE,EAAK8B,MAAM4N,sBAAsB7C,QAC/B,SAAA6E,GAAI,OACFA,EAAK7G,aAAeQ,EAAKR,cAC3B/B,OAAS,EACP,CACE4C,WAAY,QACZD,aAAc,IACdP,QAAS,iBAEX,CACEO,aAAc,IACdP,QAAS,iBAGjBY,QAAS,EAAKiD,iBAAiBpD,KAC7B,EACAN,EAAKR,YAEP5H,QAAQ,WAEP,kBAAC,KAAD,CAAQ3C,UAAU,cAAgB,KAErC,kBAAC,KAAD,CACEyN,GAAE,oBAAe1C,EAAKR,YACtB1G,OAAO,SAEP,kBAACnB,EAAA,EAAD,CACEkK,MAAM,OACNE,KAAK,KACLpN,MAAO,CACLyL,aAAc,IACdwC,WAAY,MACZ/C,QAAS,iBAEXjI,QAAQ,aAIP,kBAAC,KAAD,CAAM3C,UAAU,cAAgB,cAU/C,Y,GAjzBF6C,cA0zBL+B,eAAW0J,ICloBX+C,G,iLAhMH,IAAD,OACHC,EAAmB3P,KAAKL,MAAMiQ,WAAWhF,QAC3C,SAAAxB,GAAI,OAAIA,EAAKyG,KAAKC,SAAW,EAAKnQ,MAAMoQ,kBACxC,GACFJ,EAAmBA,EAAmBA,EAAiB5K,KAAO,GAC9D,IAAI4F,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GACFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GACJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GAeF,OAdAkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAaF,kBAACjL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,YAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAM0M,qBACrB5L,MAAOT,KAAKL,MAAM2M,kBAEjBtM,KAAKL,MAAM4M,gBACVvM,KAAKL,MAAM4M,eAAe5H,KAAI,SAACyE,EAAMvD,GACnC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,GACxBA,QAMb,kBAACtJ,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMqQ,iBACrBvP,MAAOkP,GAGN3P,KAAKL,MAAMiQ,YACV5P,KAAKL,MAAMiQ,WAAWjL,KAAI,SAACyE,EAAMvD,GAC/B,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKrE,MAC7BqE,EAAKrE,SAIZ,4BAAQ/C,IAAI,GAAGvB,MAAM,IAArB,YAGN,kBAACX,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBACrBlH,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,kBAMlB,kBAAC/K,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAMlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOT,KAAKL,MAAMsQ,aAClBtP,SAAUX,KAAKL,MAAMuQ,kBAEpBlQ,KAAKL,MAAMwQ,YACVnQ,KAAKL,MAAMwQ,WAAWxL,KAAI,SAACyE,EAAMvD,GAC/B,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,GACxBA,QAMb,oCACE,kBAACrI,EAAA,EAAD,CACEoK,KAAK,KACLtB,QAAS7J,KAAKL,MAAM6M,uBACpBzO,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,gBANjB,uBAWCtK,KAAKL,MAAM8M,uBAAyB,GACnC,kBAAC1L,EAAA,EAAD,CACEoK,KAAK,KACLtB,QAAS7J,KAAKL,MAAM+M,uBACpB3O,MAAO,CACLiO,WAAY,MACZxC,aAAc,IACdC,WAAY,UACZa,YAAa,gBAPjB,sB,GA9KmBpJ,aC6jBhBkP,G,YAvjBb,WAAYzQ,GAAQ,IAAD,8BACjB,4CAAMA,KAsBR6M,uBAAyB,WACvBrG,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIQ,WAAa,IACtBsC,KAAM,CACJC,UAAW,SACXuC,SAAU,EAAKjJ,MAAM6N,iBACrBoC,OAAQ,EAAKjQ,MAAMkQ,eAAiB,EAAKlQ,MAAMkQ,eAAiB,KAChEM,OAAQ,EAAKxQ,MAAMqO,UACnBnH,UAAW,EAAKlH,MAAM+G,kBAClB,EAAK/G,MAAM+G,kBACX,KACJmB,UAAW,EAAKlI,MAAMqG,kBAClB,EAAKrG,MAAMqG,kBACX,KACJ3F,KAAM,EAAKV,MAAMoQ,aAAe,EAAKpQ,MAAMoQ,aAAe,MAE5DzJ,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GAEa,MAAfA,EAAIgF,QACN,EAAKhH,SAAS,CAAE0O,iBAAkB1M,EAAI6E,KAAKA,KAAKK,WA9CnC,EAkDnB+F,uBAAyB,WACvB,EAAKjN,SACH,CAGEyO,UAAW,GAEX6B,eAAgB,GAChBnI,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBqJ,aAAc,KAEhB,WACE,EAAKzD,6BAjEQ,EAqEnB0D,iBAAmB,SAAAjO,GACjBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEwQ,aAAchO,EAAEC,OAAOzB,QAAS,gBAvE/B,EA2EnBwN,sBAAwB,SAAAhM,GACtBA,EAAE5C,iBAEF,EAAKI,SAAS,CAAEyO,UAAWjM,EAAEC,OAAOzB,QACb,KAAnBwB,EAAEC,OAAOzB,MACX0F,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIQ,WAAa,IACtBsC,KAAM,CACJC,UAAW,SACXuC,SAAU,EAAKjJ,MAAM6N,iBACrBoC,OAAQ,EAAKjQ,MAAMkQ,eAAiB,EAAKlQ,MAAMkQ,eAAiB,KAChEM,OAAQpO,EAAEC,OAAOzB,MACjBsG,UAAW,EAAKlH,MAAM+G,kBAClB,EAAK/G,MAAM+G,kBACX,KACJmB,UAAW,EAAKlI,MAAMqG,kBAClB,EAAKrG,MAAMqG,kBACX,KACJ3F,KAAM,EAAKV,MAAMoQ,aAAe,EAAKpQ,MAAMoQ,aAAe,MAE5DzJ,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GAEa,MAAfA,EAAIgF,QACN,EAAKhH,SAAS,CAAE0O,iBAAkB1M,EAAI6E,KAAKA,KAAKK,UAIpD,EAAKlH,SAAS,CAAE0O,iBAAkB,MA1GnB,EA6GnB9B,qBAAuB,SAAApK,GACrBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEiO,iBAAkBzL,EAAEC,OAAOzB,QAAS,WAClD,EAAK4N,wBAhHU,EA6KnBiC,kBAAoB,WAClB5O,QAAQC,IAAI,EAAK9B,MAAMkQ,gBACW,KAA9B,EAAKlQ,MAAMkQ,eACb5J,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIU,oBAAsB,EAAKrE,MAAMkQ,eAC1CzJ,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACNN,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIC,aAAe,EAAK5D,MAAM6N,iBACnCpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAgP,GACN,GAAwB,MAApBA,EAAS9J,OAAgB,CAE3B,IADA,IAAI+J,EAAkB,GACbC,EAAI,EAAGA,EAAIhP,EAAI6E,KAAKA,KAAKK,KAAKE,OAAQ4J,IAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASjK,KAAKA,KAAKK,KAAKE,OAAQ6J,IAEhDH,EAASjK,KAAKA,KAAKK,KAAK+J,GAAG5I,QAAQC,YACnCtG,EAAI6E,KAAKA,KAAKK,KAAK8J,GAAG1I,WAEtByI,EAAgB3O,KAAK0O,EAASjK,KAAKA,KAAKK,KAAK+J,IAKnD,EAAKjR,SACH,CACEmI,cAAe4I,EACftK,kBACEsK,EAAgB3J,OAAS,EACrB2J,EAAgB,GAAG1I,QAAQC,UAC3B,KAER,WACE,EAAK9B,2BAMbgB,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IAAI,uDACZ,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GAEnBgB,cAAe,GACf+I,kBAAmB,OA3ON,EA+OnB1K,kBAAoB,WACmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAIE,aACJ,EAAK7D,MAAMqG,kBACX,IACA,EAAKrG,MAAM6N,iBACbpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,eAKFE,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,kEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,OAxRN,EA4RnBoJ,iBAAmB,SAAA/N,GACjBA,EAAE5C,iBAEqB,KAAnB4C,EAAEC,OAAOzB,MACX,EAAKhB,SACH,CACEsQ,eAAgB,KAElB,WACE,EAAKO,uBAIT,EAAK7Q,SACH,CACEsQ,eAAgB,EAAKlQ,MAAM+P,WAAW3N,EAAEC,OAAOwC,QAAQmD,eACpDgI,KAAKC,SAEV,WACE,EAAKQ,wBA/SM,EAoTnB3I,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEF,EAAKI,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBA9TQ,EAkUnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,gBAxUF,EAAKlH,MAAQ,CACX+P,WAAY,GACZG,eAAgB,GAChBnI,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnB8G,iBAAkB,UAClBnB,eAAgB,CAAC,UAAW,SAC5B2B,UAAW,GACXC,iBAAkB,GAClBgC,WAAY,CACV,OACA,SACA,gBACA,sBACA,IAEFF,aAAc,IApBC,E,iFAmHE,IAAD,OAClB9J,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIS,UAAYjE,KAAKH,MAAM6N,iBAChCpH,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEmQ,WAAYnO,EAAI6E,KAAKA,KAAKK,KAC1BoJ,eAAgB,KAMlB,WACE5J,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIQ,WAAa,IACtBsC,KAAM,CACJC,UAAW,SACXuC,SAAU,EAAKjJ,MAAM6N,iBACrBoC,OAAQ,KACRO,OAAQ,KACRtJ,UAAW,KACXgB,UAAW,KACXxH,KAAM,MAERiG,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,QACN,EAAKhH,SAAS,CAAE0O,iBAAkB1M,EAAI6E,KAAKA,KAAKK,UAGnD7E,OAAM,SAAAG,GACLgF,MAAMhF,SAMdgF,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,Q,+BAsKhB,OACE,kBAACS,EAAA,EAAD,CAAK3E,MAAO,CAAEmM,OAAQ,SACpB,kBAACvH,EAAA,EAAD,CACEC,GAAG,IACH7E,MAAO,CACLkL,QAAS,UACTQ,WAAY,SAGd,kBAAC,GAAD,CACEgD,uBAAwBzM,KAAKH,MAAMsO,iBAAiBtH,OACpD2F,uBAAwBxM,KAAKwM,uBAC7BE,uBAAwB1M,KAAK0M,uBAC7B9E,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BkJ,WAAY5P,KAAKH,MAAM+P,WACvBjI,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BgI,iBAAkBhQ,KAAKgQ,iBACvB9J,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BmJ,eAAgB/P,KAAKH,MAAMkQ,eAK3BxD,eAAgBvM,KAAKH,MAAM0M,eAC3BmB,iBAAkB1N,KAAKH,MAAM6N,iBAC7BrB,qBAAsBrM,KAAKqM,qBAC3B8D,WAAYnQ,KAAKH,MAAMsQ,WACvBF,aAAcjQ,KAAKH,MAAMoQ,aACzBC,iBAAkBlQ,KAAKkQ,oBAI3B,kBAACvN,EAAA,EAAD,CACE5E,MAAO,CACL0L,WAAY,UAEZR,QAAS,YAGX,kBAACvG,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,YACpB,kBAACE,EAAA,EAAD,CAAKC,GAAG,OAEN,kBAAC,KAAD,CAAMkJ,GAAG,WAAW5J,OAAO,SACzB,kBAACnB,EAAA,EAAD,CACEhD,MAAO,CACL+E,SAAU,MACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,MAGf,IATH,iBAkCN,kBAAC9G,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,YACpB,kBAACE,EAAA,EAAD,CAAK5E,MAAO,CAAE2Q,YAAa,MAAOC,aAAc,QAC9C,kBAAC7O,EAAA,EAAD,CAAMzB,UAAU,cACd,kBAACyB,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBACpB,kBAACL,EAAA,EAAKO,QAAN,CACEE,KAAK,OACLE,MAAOT,KAAKH,MAAMqO,UAClBvN,SAAUX,KAAKiO,sBACfzN,YAAY,iDACZzC,MAAO,CACLkL,QAAS,YACTO,aAAc,WAoC1B,yBACEzL,MAAO,CAGLwR,aAAc,MAIdtG,QAAS,UAGVjJ,KAAKH,MAAMsO,iBAAiBtH,OAAS,EACpC7G,KAAKH,MAAMsO,iBAAiBxJ,KAAI,SAACyE,EAAMvD,GACrC,OACE,kBAACnD,EAAA,EAAD,CAAKV,IAAK6D,EAAO9H,MAAO,CAAE0E,OAAQ,cAChC,kBAACE,EAAA,EAAD,CACE5E,MAAO,CACL2Q,YAAa,MACbC,aAAc,QAGhB,kBAACK,GAAA,EAAD,CACEjR,MAAO,CACL0L,WAAY,cACZa,YAAa,gBAGf,kBAAC0E,GAAA,EAAKC,KAAN,CAAWlR,MAAO,CAAEkL,QAAS,QAC3B,kBAAC+F,GAAA,EAAKE,MAAN,CAAYnR,MAAO,CAAE+E,SAAU,WAG7B,8BACE,kCAAW,IACX,0BAAM/E,MAAO,CAAE6L,MAAO,YACnBR,EAAKiH,SAGV,0BACEtS,MAAO,CACL4L,MAAO,QACP7G,SAAU,OACVD,WAAY,QAGd,qCACA,0BACE9E,MAAO,CACL6L,MAAO,YAEPyF,cAAe,eAGhBjG,EAAK7I,KAAKqQ,eAEZxH,EAAKyH,MACJ,8BACG,KAEAzH,EAAKyH,QAMd,kBAAC7B,GAAA,EAAKM,KAAN,KACG,GACAlG,EAAKrE,MAER,yBAAKhH,MAAO,CAAE4L,MAAO,UACnB,kBAAC,KAAD,CACEmC,GAAE,oBAAe1C,EAAKiH,QACtBnO,OAAO,SAEP,kBAACnB,EAAA,EAAD,CACEkK,MAAM,OACNE,KAAK,KACLpN,MAAO,CACLyL,aAAc,IACdP,QAAS,iBAEXjI,QAAQ,aAEP,kBAAC,KAAD,CAAM3C,UAAU,cAAgB,cAYnD,kBAACqE,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,cACpB,8CAED,W,GAjjBOvB,aCJhBnD,GAAQ,CACZyM,UAAW,SACXf,WAAY,QACZD,aAAc,MACdI,MAAO,QACPX,QAAS,aACT6H,cAAe,SAsFFC,G,YAnFb,WAAYpR,GAAQ,IAAD,8BACjB,4CAAMA,KAKRqR,OAAS,SAAAhP,GACP,EAAKvC,SAAS,CACZuC,IAAKA,KANP,EAAKnC,MAAQ,CACXmC,IAAK,SAHU,E,sEAYT,IAAD,OACP,OACE,kBAAC,IAAMK,SAAP,KACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACxE,MAAO,CAAEyE,MAAO,OAAQiH,WAAY,YACnD,kBAAC0C,EAAA,EAAI7J,UAAL,CACE4J,UAAWlM,KAAKH,MAAMmC,IACtBqB,SAAU,SAAArB,GAAG,OAAI,EAAKgP,OAAOhP,KAE7B,kBAACU,EAAA,EAAD,CAAK3E,MAAO,CAAEkL,QAAS,YACrB,kBAACtG,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CACEC,GAAG,MAEH7E,MAAO,CACL0E,OAAQ,UAGV,kBAAClE,EAAA,EAAI4E,KAAL,CACEC,SAAS,QACTrF,MACqB,UAAnBiC,KAAKH,MAAMmC,IACPjE,GACA,CACE6L,MAAO,UACPkH,cAAe,QACf7H,QAAS,eAIjB,0BAAMlL,MAAO,CAAE+E,SAAU,WAAzB,UAGJ,kBAACH,EAAA,EAAD,CACEC,GAAG,MACH7E,MAAO,CACLkL,QAAS,OAGX,kBAAC1K,EAAA,EAAI4E,KAAL,CACEC,SAAS,SACTrF,MACqB,WAAnBiC,KAAKH,MAAMmC,IACPjE,GACA,CACE6L,MAAO,UACPkH,cAAe,QACf7H,QAAS,eAIjB,0BAAMlL,MAAO,CAAE+E,SAAU,WAAzB,WAGJ,kBAACH,EAAA,EAAD,OAGF,kBAACwJ,EAAA,EAAI8E,QAAL,KACE,kBAAC9E,EAAA,EAAI+E,KAAL,CAAU9N,SAAS,SACjB,kBAAC,GAAD,CAAOxB,QAAS5B,KAAKL,MAAMiC,WAE7B,kBAACuK,EAAA,EAAI+E,KAAL,CAAU9N,SAAS,UACjB,kBAAC,GAAD,e,GA3EQlC,a,6BCgOTiQ,I,wLAvOH,IAAD,OACHxB,EAAmB3P,KAAKL,MAAMiQ,WAAWhF,QAC3C,SAAAxB,GAAI,OAAIA,EAAKyG,KAAKC,SAAW,EAAKnQ,MAAMoQ,kBACxC,GACFJ,EAAmBA,EAAmBA,EAAiB5K,KAAO,GAC9D,IAAI4F,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GACFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GACJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GAeF,OAdAkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAaF,kBAACjL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMqQ,iBACrBvP,MAAOkP,GAEN3P,KAAKL,MAAMiQ,YACV5P,KAAKL,MAAMiQ,WAAWjL,KAAI,SAACyE,EAAMvD,GAC/B,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKrE,MAC7BqE,EAAKrE,WAMlB,kBAACjF,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBACrBlH,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,kBAMlB,kBAAC/K,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAOlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOT,KAAKL,MAAMsQ,aAClBtP,SAAUX,KAAKL,MAAMuQ,kBAEpBlQ,KAAKL,MAAMwQ,YACVnQ,KAAKL,MAAMwQ,WAAWxL,KAAI,SAACyE,EAAMvD,GAC/B,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,GACxBA,QAMgB,wBAA5BpJ,KAAKL,MAAMsQ,cACV,kBAACnQ,EAAA,EAAKI,MAAN,CAAYC,UAAU,kCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KAEL1K,MAAOT,KAAKL,MAAMyR,iBAClBzQ,SAAUX,KAAKL,MAAM0R,wBAI3B,kBAACvR,EAAA,EAAKI,MAAN,CAAYC,UAAU,kCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,wBAOA,kBAAC,KAAD,CACEuL,SAAUpO,KAAKL,MAAM2R,UACrB3Q,SAAUX,KAAKL,MAAM4R,sBACrBC,WAAW,gBAGf,kBAAC1R,EAAA,EAAKI,MAAN,CAAYC,UAAU,mCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,uBAOA,kBAAC,KAAD,CACEuL,SAAUpO,KAAKL,MAAM8R,QACrB9Q,SAAUX,KAAKL,MAAM+R,oBACrBF,WAAW,gBAGf,kBAAC1R,EAAA,EAAKI,MAAN,KACE,kBAACJ,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,kCAOA,kBAACH,EAAA,EAAD,CAAKiP,WAAW,GACd,kBAAChP,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACAE,KAAK,SACHC,YAAY,QACZC,MAAOT,KAAKL,MAAMiS,KAClBjR,SAAUX,KAAKL,MAAMkS,aAAanI,KAAK1J,SAG3C,kBAAC2C,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACLyM,UAAW,SACX3H,WAAY,MACZC,SAAU,OAEZgP,WAAS,EACTC,UAAQ,EACRC,aAAa,OAGjB,kBAACrP,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACAE,KAAK,SACHC,YAAY,UACZC,MAAOT,KAAKL,MAAMsS,OAClBtR,SAAUX,KAAKL,MAAMuS,eAAexI,KAAK1J,gB,GAtN7BkB,cCuUbiR,G,iLAvUH,IAAD,OACP,OACE,6BACE,kBAACzP,EAAA,EAAD,CAAK3E,MAAO,CAAEmM,OAAQ,SACpB,kBAAC5H,EAAA,EAAD,CAAWC,OAAK,EAACxE,MAAO,CAAEkL,QAAS,MACjC,kBAACnJ,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,MACZJ,OAAQ,YAEVqP,WAAS,EACTC,UAAQ,EACRC,aAAa,SAEf,kBAACtP,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,UACpB,kBAACE,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,CAAEkL,QAAS,MAC5B,kBAACnJ,EAAA,EAAKO,QAAN,CACEI,MAAOT,KAAKL,MAAMyS,gBAClBzR,SAAUX,KAAKL,MAAM0S,4BACrB7R,YAAY,uBACZzC,MAAO,CAAEyL,aAAc,QAG3B,kBAAC7G,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,CAAEkL,QAAS,MAC5B,kBAACnJ,EAAA,EAAKO,QAAN,CACEI,MAAOT,KAAKL,MAAM2S,cAClB3R,SAAUX,KAAKL,MAAM4S,0BACrB/R,YAAY,qBACZzC,MAAO,CAAEyL,aAAc,IAAKG,MAAO,cAK3C,yBAAK5L,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,kBAAC1C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,MACZJ,OAAQ,YAEVqP,WAAS,EACTC,UAAQ,EACRC,aAAa,gCAEf,yBAAKjU,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,kBAAC,IAAD,CAEEsH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GACxDC,OAAQ,CACNC,OAAQ,IAGV5D,KAAMtG,KAAKL,MAAM6S,uBACjB7R,SAAU,SAAAvB,GACR,IAAMkH,EAAOlH,EAAM+K,OAAOC,UAC1B,EAAKzK,MAAM8S,+BAA+BnM,OAIhD,yBAAKvI,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GACxDC,OAAQ,CACNC,OAAQ,IAGV5D,KAAMtG,KAAKL,MAAM+S,qBACjB/R,SAAU,SAACvB,EAAO+K,GAChB,IAAM7D,EAAOlH,EAAM+K,OAAOC,UAC1B,EAAKzK,MAAMgT,6BAA6BrM,QAM/CtG,KAAKL,MAAMiT,eACV5S,KAAKL,MAAMiT,cAAcjO,KAAI,SAACyE,EAAMvD,GAClC,OACE,yBACE7D,IAAK6D,EACL9H,MAAO,CACLgO,OAAQ,sBACRvJ,MAAO,OACPyG,QAAS,MACTxG,OAAQ,UAGV,kBAACC,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YACrC,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,OAGdiP,WAAS,EACTC,UAAQ,EACRC,aAAa,eAGhB,EAAKrS,MAAMiT,cAAc/L,SAAWhB,EAAQ,GAC3C,kBAAClD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEhD,MAAO,CAAE4L,MAAO,QAASC,MAAO,QAChC5I,QAAQ,OACR6I,QAAS,EAAKlK,MAAMkT,eAHtB,cAUN,kBAACnQ,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YACrC,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEI,MACE2I,EAAK0J,SAASlI,QACZ,SAAAmI,GAAM,MAAwB,YAApBA,EAAOjK,YACjB,GAAGiC,YAEPpK,SAAU,EAAKhB,MAAMqT,wBAAwBtJ,KAC3C,EACA7D,EACA,WAEFrF,YAAY,0BACZzC,MAAO,CAAEyL,aAAc,QAG3B,kBAAC7G,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEI,MACE2I,EAAK0J,SAASlI,QACZ,SAAAmI,GAAM,MAAwB,UAApBA,EAAOjK,YACjB,GAAGiC,YAEPpK,SAAU,EAAKhB,MAAMqT,wBAAwBtJ,KAC3C,EACA7D,EACA,SAEFrF,YAAY,wBACZzC,MAAO,CAAEyL,aAAc,SAI7B,kBAAC9G,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YAErC,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEE,KAAK,SACLE,MAAO2I,EAAK6J,iBACZtS,SAAU,EAAKhB,MAAMuT,yBAAyBxJ,KAC5C,EACA7D,GAEFrF,YAAY,cACZzC,MAAO,CAAEyL,aAAc,QAG3B,kBAAC7G,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEE,KAAK,SACLE,MAAO2I,EAAK+J,yBACZxS,SAAU,EAAKhB,MAAMyT,iCAAiC1J,KACpD,EACA7D,GAEFrF,YAAY,kBACZzC,MAAO,CAAEyL,aAAc,SAI7B,yBAAKzL,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,yBAAKzE,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OACnBA,EAASC,mBAAoB,GAEhCC,OAAQ,CACNC,OAAQ,IAGV5D,KACE8C,EAAK0J,SAASlI,QACZ,SAAAmI,GAAM,MAAwB,YAApBA,EAAOjK,YACjB,GAAGpD,QAEP/E,SAAU,SAACvB,EAAO+K,GAChB,IAAM7D,EAAOlH,EAAM+K,OAAOC,UAC1B,EAAKzK,MAAM0T,+BACTxN,EACA,UACAS,OAKR,yBAAKvI,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OACnBA,EAASC,mBAAoB,GAEhCC,OAAQ,CACNC,OAAQ,IAGV5D,KACE8C,EAAK0J,SAASlI,QACZ,SAAAmI,GAAM,MAAwB,UAApBA,EAAOjK,YACjB,GAAGpD,QAEP/E,SAAU,SAACvB,EAAO+K,GAChB,IAAM7D,EAAOlH,EAAM+K,OAAOC,UAC1B,EAAKzK,MAAM0T,+BACTxN,EACA,QACAS,QAMT8C,EAAKkK,WACJlK,EAAKkK,UAAU3O,KAAI,SAAC4O,EAAcC,GAChC,OACE,kBAAC9Q,EAAA,EAAD,CAAK3E,MAAO,CAAEkD,UAAW,UAEvB,kBAAC0B,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,MACZJ,OAAQ,WACR+H,UAAW,SAGbsH,WAAS,EACTC,UAAQ,EACRC,aAAY,YAAOwB,EAAgB,MAGvC,kBAAC7Q,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,IACjB,kBAAC+B,EAAA,EAAKO,QAAN,CACEE,KAAK,SACLE,MAAO8S,EACP5S,SAAU,EAAKhB,MAAM8T,gCAAgC/J,KACnD,EACA7D,EACA2N,GAEFhT,YAAY,eACZzC,MAAO,CAAEyL,aAAc,QAG1BJ,EAAKkK,UAAUzM,SAAW2M,EAAgB,GACzC,kBAAC7Q,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEhD,MAAO,CAAE4L,MAAO,OAAQC,MAAO,QAC/B5I,QAAQ,OACR6I,QAAS,EAAKlK,MAAM+T,sBAAsBhK,KACxC,EACA7D,IALJ,iBAeZ,kBAACnD,EAAA,EAAD,CAAK3E,MAAO,CAAEkD,UAAW,UACvB,kBAAC0B,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACE8I,QAAS,EAAKlK,MAAMgU,oBAAoBjK,KACtC,EACA7D,GAEFwE,SAAS,OACTtM,MAAO,CACL+E,SAAU,QACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,IACdG,MAAO,SAGR,IAfH,wBAwBZ,kBAACrH,EAAA,EAAD,CAAWC,OAAK,EAACxE,MAAO,CAAE4Q,aAAc,MACtC,kBAACjM,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YACrC,kBAACE,EAAA,EAAD,CAAKC,GAAG,MAAR,KACA,kBAACD,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACE8I,QAAS7J,KAAKL,MAAMiU,WACpBvJ,SAAS,OACTtM,MAAO,CACL+E,SAAU,QACVD,WAAY,MACZ4G,WAAY,UACZa,YAAa,UACbd,aAAc,IACdG,MAAO,UAGR,IAZH,0B,GAhTazI,aCMvBsK,GAASC,YAAOC,IAAPD,CAAa,CAC1B7B,MAAO,UACP3I,UAAW,SACXuB,MAAO,QAkgBMqR,G,YA9fb,WAAYlU,GAAQ,IAAD,8BACjB,4CAAMA,KA2CRgU,oBAAsB,SAAA9N,GACpB,IAAIiO,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOyN,UAAUzR,KAAK,IACtC,EAAKpC,SAAS,CAAEmT,cAAekB,KA/Cd,EAiDnBJ,sBAAwB,SAAA7N,GACtB,IAAIiO,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOyN,UAAUxN,MACjC,EAAKrG,SAAS,CAAEmT,cAAekB,KApDd,EAsDnBL,gCAAkC,SAAC5N,EAAO2N,EAAevR,GACvD,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOyN,UAAUE,GAAiB/K,SAASxG,EAAEC,OAAOzB,OACpE,EAAKhB,SAAS,CAAEmT,cAAekB,KAzDd,EA2DnBT,+BAAiC,SAACxN,EAAOiD,EAAUxC,GACjD,IAAIwN,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOiN,SAASlI,QAC9B,SAAAxB,GAAI,OAAIA,EAAKN,WAAaA,KAC1B,GAAGpD,QAAUY,EAEf,EAAK7G,SAAS,CAAEmT,cAAekB,KAjEd,EAmEnBV,iCAAmC,SAACvN,EAAO5D,GAEzC,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOsN,yBAA2BlR,EAAEC,OAAOzB,MAC3D,EAAKhB,SAAS,CAAEmT,cAAekB,KAvEd,EAyEnBZ,yBAA2B,SAACrN,EAAO5D,GACjC,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOoN,iBAAmBhR,EAAEC,OAAOzB,MACnD,EAAKhB,SAAS,CAAEmT,cAAekB,KA5Ed,EA8EnBF,WAAa,WAEX,IAAIE,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjS,KAAK,CACnBoR,iBAAkB,EAClBE,yBAA0B,EAC1BG,UAAW,CAAC,GAEZR,SAAU,CACR,CACEpN,QAAS,YACToD,SAAU,UACV/D,KAAM,SACNgG,YAAa,iBAEf,CACErF,QAAS,YACToD,SAAU,QACV/D,KAAM,SACNgG,YAAa,kBAInB,EAAKtL,SAAS,CAAEmT,cAAekB,KArGd,EAuGnBjB,cAAgB,WACd,IAAIiB,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBhO,MAChB,EAAKrG,SAAS,CAAEmT,cAAekB,KA1Gd,EA4GnBd,wBAA0B,SAACnN,EAAOiD,EAAU7G,GAC1C,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOiN,SAASlI,QAC9B,SAAAxB,GAAI,OAAIA,EAAKN,WAAaA,KAC1B,GAAGiC,YAAc9I,EAAEC,OAAOzB,MAC5B,EAAKhB,SAAS,CAAEmT,cAAekB,KAjHd,EAmHnBzB,4BAA8B,SAAApQ,GAC5B,EAAKxC,SAAS,CAAE2S,gBAAiBnQ,EAAEC,OAAOzB,SApHzB,EAsHnB8R,0BAA4B,SAAAtQ,GAC1B,EAAKxC,SAAS,CAAE6S,cAAerQ,EAAEC,OAAOzB,SAvHvB,EAyHnBgS,+BAAiC,SAAAnM,GAC/B,EAAK7G,SAAS,CAAE+S,uBAAwBlM,KA1HvB,EA4HnBqM,6BAA+B,SAAArM,GAC7B,EAAK7G,SAAS,CAAEiT,qBAAsBpM,KA7HrB,EA+HnBuL,aAAe,SAAA5P,GACb,EAAKxC,SAAS,CAAEmS,KAAM3P,EAAEC,OAAOzB,SAhId,EAmInByR,eAAiB,SAAAjQ,GACf,EAAKxC,SAAS,CAAEwS,OAAQhQ,EAAEC,OAAOzB,SApIhB,EAsInB8Q,sBAAwB,SAAAwC,GACtB,EAAKtU,SAAS,CACZ6R,UAAWyC,KAxII,EA2InBrC,oBAAsB,SAAAqC,GACpB,EAAKtU,SAAS,CACZgS,QAASsC,KA7IM,EAgJnB1C,qBAAuB,SAAApP,GACrB,EAAKxC,SAAS,CAAE2R,iBAAkBnP,EAAEC,OAAOzB,SAjJ1B,EAmLnB6P,kBAAoB,WACgB,KAA9B,EAAKzQ,MAAMkQ,eACb5J,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIU,oBAAsB,EAAKrE,MAAMkQ,eAC1CzJ,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACNN,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIC,aAAe,UACxB6C,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAgP,GACN,GAAwB,MAApBA,EAAS9J,OAAgB,CAE3B,IADA,IAAI+J,EAAkB,GACbC,EAAI,EAAGA,EAAIhP,EAAI6E,KAAKA,KAAKK,KAAKE,OAAQ4J,IAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASjK,KAAKA,KAAKK,KAAKE,OAAQ6J,IAEhDH,EAASjK,KAAKA,KAAKK,KAAK+J,GAAG5I,QAAQC,YACnCtG,EAAI6E,KAAKA,KAAKK,KAAK8J,GAAG1I,WAEtByI,EAAgB3O,KAAK0O,EAASjK,KAAKA,KAAKK,KAAK+J,IAKnD,EAAKjR,SACH,CACEmI,cAAe4I,EACftK,kBACEsK,EAAgB3J,OAAS,EACrB2J,EAAgB,GAAG1I,QAAQC,UAC3B,KAER,WACE,EAAK9B,2BAMbgB,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IAAI,uDACZ,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GAEnBgB,cAAe,GACf+I,kBAAmB,OAhPN,EAoPnB1K,kBAAoB,WACmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIE,aAAe,EAAK7D,MAAMqG,kBAAoB,WACvDI,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,eAKFE,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,kEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,OAzRN,EA6RnBoJ,iBAAmB,SAAA/N,GACjBA,EAAE5C,iBAEF,EAAKI,SACH,CACEsQ,eAAgB,EAAKlQ,MAAM+P,WAAW3N,EAAEC,OAAOwC,QAAQmD,eACpDgI,KAAKC,SAEV,WACE,EAAKQ,wBAtSQ,EA0SnB3I,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEF,EAAKI,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBApTQ,EAwTnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,gBAhUe,EAmUnBmJ,iBAAmB,SAAAjO,GACjBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEwQ,aAAchO,EAAEC,OAAOzB,QAAS,gBArU/B,EAyUnBuT,aAAe,WAEb7N,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIW,WACTmC,KAAM,CACJC,UAAW,SACXkL,QAAS,EAAK5R,MAAM4R,QAAQwC,cAC5BnE,OAAQ,EAAKjQ,MAAMkQ,eACnBhI,UAAW,EAAKlI,MAAMqG,kBACtBa,UAAW,EAAKlH,MAAM+G,kBACtBsN,SAAU,EAAKrU,MAAM+S,cACrBtB,UAAW,EAAKzR,MAAMyR,UAAU2C,cAChCE,iBAAkB,CAChB,CACEC,aAAc,EAAKvU,MAAM2S,uBACzB1J,SAAU,UACV/D,KAAM,EAAKlF,MAAMuS,iBAGnB,CACEgC,aAAc,EAAKvU,MAAM6S,qBACzB5J,SAAU,QACV/D,KAAM,EAAKlF,MAAMyS,gBAGrB+B,KACEC,WAAW,EAAKzU,MAAM+R,MACtB0C,WAAWC,OAAO9L,SAAS,EAAK5I,MAAMoS,QAAU,KAClD1R,KAAM,EAAKV,MAAMoQ,aACjBY,KAAM,EAAKhR,MAAMuR,kBAEnB5K,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,SACN/E,QAAQC,IAAIF,EAAI6E,KAAKA,MACrBW,MAAM,WAAWxF,EAAI6E,KAAKA,UAG7BxE,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAlXhB,EAAKpC,MAAQ,CACX+P,WAAY,GACZG,eAAgB,GAChBnI,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBuJ,WAAY,CAAC,OAAQ,SAAU,gBAAiB,uBAChDF,aAAc,OACdmB,iBAAkB,KAClBQ,KAAM,GACNK,OAAQ,GACRX,UAAW,IAAIkD,KACf/C,QAAS,IAAI+C,KACbpC,gBAAiB,GACjBE,cAAe,GACfE,uBAAwB,GACxBE,qBAAsB,GACtBE,cAAe,CACb,CACEK,iBAAkB,GAClBE,yBAA0B,GAC1BG,UAAW,GAEXR,SAAU,CACR,CACEpN,QAAS,GACToD,SAAU,UACV/D,KAAM,SACNgG,YAAa,IAEf,CACErF,QAAS,GACToD,SAAU,QACV/D,KAAM,SACNgG,YAAa,QArCN,E,iFAmJE,IAAD,OAClB5E,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIS,UAAY,UACrBqC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACN,EAAKhH,SACH,CACEmQ,WAAYnO,EAAI6E,KAAKA,KAAKK,KAC1BoJ,eACEtO,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGkJ,KAAKC,OAC3B,KAER,WACE,EAAKQ,uBAITrJ,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,Q,+BAwMhB,OACE,kBAAC,IAAMI,SAAP,KACE,kBAAC,EAAD,MACA,yBACEtE,MAAO,CACL8N,UAAW,wBACXrJ,MAAO,OACP0H,OAAQ,QACRjB,QAAS,YAGX,kBAAC,KAAD,CAAM6C,GAAG,IAAI5J,OAAO,SAClB,kBAACnB,EAAA,EAAD,CACEC,QAAQ,QACRjD,MAAO,CAAE0L,WAAY,cAAesC,OAAQ,gBAE5C,kBAAC,GAAD,MACA,0BACEhO,MAAO,CACLiO,WAAY,MACZlJ,SAAU,QACV8G,MAAO,YAJX,wBAYN,kBAACtH,EAAA,EAAD,CACEC,OAAK,EACLxE,MAAO,CACLyE,MAAO,OACPiH,WAAY,UACZR,QAAS,gBAGX,yBAAKlL,MAAO,CAAEkL,QAAS,SAAUxG,OAAQ,UACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,IACH7E,MAAO,CACLkL,QAAS,YAIX,6BACE,kBAAC,GAAD,CACEqI,UAAWtR,KAAKH,MAAMyR,UACtBG,QAASzR,KAAKH,MAAM4R,QACpBC,oBAAqB1R,KAAK0R,oBAC1BH,sBAAuBvR,KAAKuR,sBAC5BK,KAAM5R,KAAKH,MAAM+R,KACjBK,OAAQjS,KAAKH,MAAMoS,OACnBJ,aAAc7R,KAAK6R,aACnBK,eAAgBlS,KAAKkS,eACrBtK,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BkJ,WAAY5P,KAAKH,MAAM+P,WACvBjI,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BgI,iBAAkBhQ,KAAKgQ,iBACvB9J,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BmJ,eAAgB/P,KAAKH,MAAMkQ,eAC3BI,WAAYnQ,KAAKH,MAAMsQ,WACvBF,aAAcjQ,KAAKH,MAAMoQ,aACzBC,iBAAkBlQ,KAAKkQ,iBACvBmB,qBAAsBrR,KAAKqR,qBAC3BD,iBAAkBpR,KAAKH,MAAMuR,qBAInC,kBAACzO,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CACE5E,MAAO,CACL0L,WAAY,YAGd,kBAAC,GAAD,CACE2I,gBAAiBpS,KAAKH,MAAMuS,gBAC5BE,cAAetS,KAAKH,MAAMyS,cAC1BE,uBAAwBxS,KAAKH,MAAM2S,uBACnCE,qBAAsB1S,KAAKH,MAAM6S,qBACjCC,6BACE3S,KAAK2S,6BAEPF,+BACEzS,KAAKyS,+BAEPF,0BAA2BvS,KAAKuS,0BAChCF,4BAA6BrS,KAAKqS,4BAClCO,cAAe5S,KAAKH,MAAM+S,cAC1BC,cAAe7S,KAAK6S,cACpBG,wBAAyBhT,KAAKgT,wBAC9BI,iCACEpT,KAAKoT,iCAEPF,yBAA0BlT,KAAKkT,yBAC/BG,+BACErT,KAAKqT,+BAEPM,oBAAqB3T,KAAK2T,oBAC1BD,sBAAuB1T,KAAK0T,sBAC5BE,WAAY5T,KAAK4T,WACjBH,gCACEzT,KAAKyT,kCAGT,yBAAK1V,MAAO,CAAE0E,OAAQ,QAAS+H,UAAW,WACxC,kBAACzJ,EAAA,EAAD,CACEhD,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,UACbrB,QAAS,cACTnG,SAAU,QACVD,WAAY,OAEdgH,QAAS7J,KAAKgU,cAThB,wBAeJ,kBAACrR,EAAA,EAAD,CAAKC,GAAG,c,GAtfH1B,aCfEsD,I,mBACnB,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KACDE,MAAQ,CACX4E,YAAa,CAAC,IAAK,KAAM,QAHV,E,sEAMT,IAAD,OACDC,EAAU1E,KAAKH,MAAM4E,YAAYE,KAAI,SAACC,EAAM5C,GAChD,IAAM6C,EAAY,EAAKlF,MAAMmF,aAAeF,EAC5C,OACE,yBAAK5C,IAAKA,EAAK3D,UAAU,YACvB,6BACE,2BACEA,UACEwG,EACI,gDACA,qBAGN,2BACExG,UAAU,kBACVkC,KAAK,QACLwE,KAAK,cAELtE,MAAOmE,EACPjE,SAAU,EAAKhB,MAAMqF,wBAEtBJ,QAMX,OACE,yBAAKvG,UAAU,oBACb,yBAAKA,UAAU,OAAOqG,Q,GApCKO,IAAM/D,YCWnCuT,I,mBACJ,WAAY9U,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRwF,YAAc,WACZ,IAAIC,EAAkB,EAAKvF,MAAMwF,gBAC7BN,EAAO,UAAYO,OAAOC,aAAaH,GACvCI,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqB3D,KAAK,CAAEkD,KAAMA,EAAMW,QAAS,GAAIC,UAAW,OAChE,EAAKlG,SAAS,CACZgG,cAAeD,EACfH,gBAAiBD,EAAkB,KA1BpB,EA6BnBQ,aAAe,SAAAC,GACb,IAAIT,EAAkB,EAAKvF,MAAMwF,gBAC7BG,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBM,IAAID,GACzB,EAAKpG,SAAS,CACZgG,cAAeD,EACfH,gBAAiBD,EAAkB,KAnCpB,EAsCnBJ,sBAAwB,SAAA/C,GACtBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEqF,WAAY7C,EAAEC,OAAOzB,SAxCpB,EA0CnBsF,iBAAmB,SAAAC,GACjB,EAAKvG,SAAS,CAAEuG,UA3CC,EAwHnBC,kBAAoB,WACmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAIE,aACJ,EAAK7D,MAAMqG,kBACX,IACA,EAAKvG,MAAM+U,YAAYC,iBAAiB,GAAG7L,SAC7CxC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACShF,EAAI6E,KAAKA,KAAKK,KAAKiE,QAChC,SAAAxB,GAAI,OACFA,EAAKtC,eAAeC,YACpB,EAAKpH,MAAM+U,YAAY3N,aAEdF,OAAS,EACpB,EAAKpH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxB,EAAKlH,MAAM+U,YAAY3N,UACvB,KAER,WACE,EAAKC,qBAIT,EAAKvH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,WACE,EAAKC,qBAKXC,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,kEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OAzLP,EA6LnBL,gBAAkB,WACqB,KAAjC,EAAKnH,MAAM+G,kBACbT,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAIG,WACJ,EAAK9D,MAAM+G,kBACX,IACA,EAAKjH,MAAM+U,YAAYC,iBAAiB,GAAG7L,SAC7CxC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACShF,EAAI6E,KAAKA,KAAKK,KAAKiE,QAChC,SAAAxB,GAAI,OACFA,EAAK9B,aAAaC,UAAY,EAAK5H,MAAM+U,YAAYnN,WAE5CV,OAAS,EACpB,EAAKpH,SACH,CACEyH,YAAazF,EAAI6E,KAAKA,KAAKK,KAC3BQ,gBACE1F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxB,EAAKlH,MAAM+U,YAAYnN,QACvB,KAER,WACE,EAAKC,wBAIT,EAAK/H,SACH,CACEyH,YAAazF,EAAI6E,KAAKA,KAAKK,KAC3BQ,gBACE1F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGW,aAAaC,QACnC,KAER,WACE,EAAKC,wBAKXP,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,iEAEF,EAAKlC,SAAS,CACZyH,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,OA5PP,EAgQnBG,mBAAqB,WACgB,KAA/B,EAAK3H,MAAMsH,gBACbhB,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAII,cACJ,EAAK/D,MAAMsH,gBACX,IACA,EAAKxH,MAAM+U,YAAYC,iBAAiB,GAAG7L,SAC7CxC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACShF,EAAI6E,KAAKA,KAAKK,KAAKiE,QAChC,SAAAxB,GAAI,OACFA,EAAK3B,gBAAgBC,aACrB,EAAK/H,MAAM+U,YAAYhN,cAEdb,OAAS,EACpB,EAAKpH,SAAS,CACZ2H,eAAgB3F,EAAI6E,KAAKA,KAAKK,KAC9BU,mBACE5F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxB,EAAKlH,MAAM+U,YAAYhN,WACvB,KAGR,EAAKjI,SAAS,CACZ2H,eAAgB3F,EAAI6E,KAAKA,KAAKK,KAC9BU,mBACE5F,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGc,gBAAgBC,WACtC,KAIVT,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IAAI,6DACZ,EAAKlC,SAAS,CAAE2H,eAAgB,GAAIC,mBAAoB,OAhTzC,EAmTnBM,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEF,EAAKI,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBA7TQ,EAiUnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,WACE,EAAKC,sBA1UQ,EA8UnBiB,kBAAoB,SAAAhG,GAClBA,EAAE5C,iBACF,EAAKI,SACH,CACE0H,gBAAiB,EAAKtH,MAAMqH,YAAYjF,EAAEC,OAAOwC,QAAQmD,eACtDP,aAAaC,UAElB,WACE,EAAKC,yBAtVQ,EA0VnBU,qBAAuB,SAAAjG,GACrBA,EAAE5C,iBACF,EAAKI,SAAS,CACZ4H,mBAAoB,EAAKxH,MAAMuH,eAC7BnF,EAAEC,OAAOwC,QAAQmD,eACjBJ,gBAAgBC,cA/VH,EAkWnBS,qBAAuB,SAAA7B,GACrB,EAAK7G,SAAS,CAAE2I,aAAc9B,KAnWb,EAqWnB+B,wBAA0B,SAAA/B,GACxB,EAAK7G,SAAS,CAAE6I,gBAAiBhC,KAtWhB,EAwWnBiC,0BAA4B,SAAC1C,EAAOS,GAIlC,IAAId,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBK,GAAOH,QAAUY,EACtC,EAAK7G,SAAS,CACZgG,cAAeD,KA/WA,EAkXnBgD,4BAA8B,SAAC3C,EAAO5D,GACpCA,EAAE5C,iBAEF,IAAImG,EAAuB,EAAK3F,MAAM4F,cACtCD,EAAqBK,GAAOF,UAAY8C,SAASxG,EAAEC,OAAOzB,OAC1D,EAAKhB,SAAS,CACZgG,cAAeD,KAxXA,EA2XnBoP,SAAW,WACT,IAAIjM,EACJ,OAAQ,EAAK9I,MAAMiF,YACjB,IAAK,IACH6D,EAAkB,OAClB,MACF,IAAK,KACHA,EAAkB,OAClB,MACF,IAAK,MACHA,EAAkB,UAKtBxC,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIa,8BACTiC,KAAM,CACJC,UAAW,SACXzB,WAAY6D,EACZC,WAAY,EAAKjJ,MAAMiJ,WACvB7B,UAAW,EAAKlH,MAAM+G,kBACtBmB,UAAW,EAAKlI,MAAMqG,kBACtBwB,WAAY,EAAK7H,MAAMwH,mBACvBrB,KAAM,EAAKnG,MAAMmG,KACjBuB,QAAS,EAAK1H,MAAMsH,gBACpB5G,KAAM,gBACNsI,QAAS,CACPnD,QAAS,EAAK7F,MAAMuI,aACpBU,SAAU,EAAKnJ,MAAM+U,YAAYC,iBAAiB,GAAG7L,SACrDpE,QAAS,EAAK7E,MAAM4F,cACpBoP,kBAAmB,EAAKlV,MAAM+U,YAAYC,iBAAiB,GACxDE,kBACH9L,SAAU,EAAKlJ,MAAMyI,kBAGzB9B,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,SACN/E,QAAQC,IAAIF,EAAI6E,KAAKA,MACrBW,MAAM,UAAWxF,EAAI6E,KAAKA,UAG7BxE,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAzahB,EAAKpC,MAAQ,CACX+H,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBM,YAAa,GACbC,gBAAiB,GACjBC,eAAgB,GAChBC,mBAAoB,GACpBrB,KAAM,GACNlB,WAAY,GACZsD,aAAc,GACdE,gBAAiB,GACjB7C,cAAe,GACfJ,gBAAiB,IAhBF,E,iFA6CE,IACfsD,EADc,OAElB,OAAQ3I,KAAKL,MAAM+U,YAAYtF,OAC7B,IAAK,OACHzG,EAAkB,IAClB,MACF,IAAK,OACHA,EAAkB,KAClB,MACF,IAAK,UACHA,EAAkB,MAMtB3I,KAAKP,SAAS,CACZqF,WAAY6D,EACZP,aAAcpI,KAAKL,MAAM+U,YAAYC,iBAAiB,GAAGjP,QACzD4C,gBAAiBtI,KAAKL,MAAM+U,YAAYC,iBAAiB,GAAG5L,SAC5DtD,cAAezF,KAAKL,MAAM+U,YAAYC,iBAAiB,GAAGjQ,QAC1DW,gBACErF,KAAKL,MAAM+U,YAAYC,iBAAiB,GAAGjQ,QAAQmC,OAAS,KAEhEV,IAAM,CACJC,OAAQ,OACRC,IACE7C,EAAIC,aAAezD,KAAKL,MAAM+U,YAAYC,iBAAiB,GAAG7L,SAChExC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAGe,MAAfA,EAAIgF,OACShF,EAAI6E,KAAKA,KAAKK,KAAKiE,QAChC,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAM+U,YAAY3M,aAE/ClB,OAAS,EACpB,EAAKpH,SACH,CACEmI,cAAenG,EAAI6E,KAAKA,KAAKK,KAC7BT,kBACEzE,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxB,EAAKlH,MAAM+U,YAAY3M,UACvB,KAER,WACE,EAAK9B,uBAIT,EAAKxG,SACH,CACEmI,cAAenG,EAAI6E,KAAKA,KAAKK,KAC7BT,kBACEzE,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGmB,QAAQC,UAC9B,KAER,WACE,EAAK9B,uBAKXgB,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,Q,+BA0ThB,OAEE,yBAAKlE,MAAO,CAAEkL,QAAS,SAAUxG,OAAQ,UACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yBACE7E,MAAO,CACLyE,MAAO,SAIT,kBAAC,GAAD,CACEoF,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BQ,YAAalH,KAAKH,MAAMqH,YACxBE,eAAgBpH,KAAKH,MAAMuH,eAC3BO,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BC,kBAAmBjI,KAAKiI,kBACxBC,qBAAsBlI,KAAKkI,qBAC3BhC,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BO,gBAAiBnH,KAAKH,MAAMsH,gBAC5BE,mBAAoBrH,KAAKH,MAAMwH,mBAC/BrB,KAAMhG,KAAKH,MAAMmG,KACjBD,iBAAkB/F,KAAK+F,iBACvBjB,WAAY9E,KAAKH,MAAMiF,WACvBE,sBAAuBhF,KAAKgF,0BAIlC,kBAACrC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,KACE,6BACE,kBAAC,GAAD,CACEwF,qBAAsBnI,KAAKmI,qBAC3BC,aAAcpI,KAAKH,MAAMuI,aACzBC,wBAAyBrI,KAAKqI,wBAC9BC,gBAAiBtI,KAAKH,MAAMyI,gBAC5B7C,cAAezF,KAAKH,MAAM4F,cAC1BJ,gBAAiBrF,KAAKH,MAAMwF,gBAC5BkD,0BAA2BvI,KAAKuI,0BAChCC,4BAA6BxI,KAAKwI,4BAClCrD,YAAanF,KAAKmF,YAClBS,aAAc5F,KAAK4F,aACnBgP,SAAU5U,KAAK4U,aAIrB,kBAACjS,EAAA,EAAD,CAAKC,GAAG,Y,GAjeU1B,cAyetBwJ,G,iLACM,IAAD,OACHC,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GACFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GACJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GACFkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAEJ,IAAIC,EAAoBhL,KAAKL,MAAMuH,YAAY0D,QAC7C,SAAAxB,GAAI,OAAIA,EAAK9B,aAAaC,UAAY,EAAK5H,MAAMwH,mBACjD,GACF6D,EAAoBA,EAAoBA,EAAkBC,MAAQ,GAClE,IAAIC,EAAuBlL,KAAKL,MAAMyH,eAAewD,QACnD,SAAAxB,GAAI,OAAIA,EAAK3B,gBAAgBC,aAAe,EAAK/H,MAAM0H,sBACvD,GAIF,OAHA6D,EAAuBA,EACnBA,EAAqBD,MACrB,GAEF,kBAACnL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBACrBlH,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,kBAMlB,kBAAC/K,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAMlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,SAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOuK,EACPrK,SAAUX,KAAKL,MAAMsI,mBAEpBjI,KAAKL,MAAMuH,aACVlH,KAAKL,MAAMuH,YAAYvC,KAAI,SAACyE,EAAMvD,GAChC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,aAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOyK,EACPvK,SAAUX,KAAKL,MAAMuI,sBAEpBlI,KAAKL,MAAMyH,gBACVpH,KAAKL,MAAMyH,eAAezC,KAAI,SAACyE,EAAMvD,GACnC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK6B,OAC7B7B,EAAK6B,YAMlB,kBAACnL,EAAA,EAAKI,MAAN,CAAYC,UAAU,6BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC,IAAD,CACEpC,MAAOT,KAAKL,MAAMqG,KAClBrF,SAAUX,KAAKL,MAAMoG,oBAGzB,kBAACjG,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,cAOA,6BACA,kBAAC,GAAD,CACEiC,WAAY9E,KAAKL,MAAMmF,WACvBE,sBAAuBhF,KAAKL,MAAMqF,8B,GAxJtB9D,aA+JlBgI,G,iLACM,IAAD,OAEP,OACE,kBAACpJ,EAAA,EAAD,KACGE,KAAKL,MAAMyI,cACV,kBAAC,GAAD,CAEED,qBAAsBnI,KAAKL,MAAMwI,qBACjCC,aAAcpI,KAAKL,MAAMyI,eAG5BpI,KAAKL,MAAM8F,eACVzF,KAAKL,MAAM8F,cAAcd,KAAI,SAACyE,EAAMvD,GAClC,OACE,kBAAC,IAAMxD,SAAP,CAAgBL,IAAK6D,GACnB,kBAAC/F,EAAA,EAAKI,MAAN,CAAYmJ,GAAI3G,IAAK3E,MAAO,CAAEkD,UAAW,QACvC,kBAACnB,EAAA,EAAKM,MAAN,CAAYkJ,QAAM,EAACC,GAAG,IAAIxL,MAAO,CAAE8E,WAAY,QAC5C,UAAYyC,OAAOC,aAAa,GAAKM,IAExC,kBAAClD,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACEyU,UAAQ,EACR/W,MAAO,CAAEyL,aAAc,IAAKC,WAAY,aACxClJ,KAAK,SACLE,MAAO2I,EAAKzD,WAAa,EACzBhF,SAAU,EAAKhB,MAAM6I,4BAA4BkB,KAC/C,EACA7D,GAEFrF,YAAY,gBAelB,yBAAKzC,MAAO,CAAE0E,OAAQ,YACpB,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OACnBA,EAASC,mBAAoB,GAEhCC,OAAQ,CACNC,OAAQ,IAIV5D,KAAM8C,EAAK1D,QACX/E,SAAU,SAAAvB,GAER,EAAKO,MAAM4I,0BACT1C,EACAzG,EAAM+K,OAAOC,mBAQ7B,kBAAC1H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,OACR,kBAACD,EAAA,EAAD,OAkBF,yBAAK5E,MAAO,CAAE0E,OAAQ,UACnBzC,KAAKL,MAAM2I,iBACV,kBAAC,GAAD,CACED,wBAAyBrI,KAAKL,MAAM0I,wBACpCC,gBAAiBtI,KAAKL,MAAM2I,mBAKlC,yBAAKvK,MAAO,CAAE0E,OAAQ,QAAS+H,UAAW,WACxC,kBAACzJ,EAAA,EAAD,CACEhD,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,UACbrB,QAAS,cACTnG,SAAU,QACVD,WAAY,OAEdgH,QAAS7J,KAAKL,MAAMiV,UATtB,qB,GAlGsB1T,aAoHhC,SAASiI,GAAT,GAA+D,IAAvCf,EAAsC,EAAtCA,aAAcD,EAAwB,EAAxBA,qBACpC,OACE,kBAACrI,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,YAOA,yBACE9E,MAAO,CACL0E,OAAQ,YAGV,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GACxDC,OAAQ,CACNC,OAAQ,IAUV5D,KAAM8B,EAINzH,SAAU,SAAAvB,GACR,IAAMkH,EAAOlH,EAAM+K,OAAOC,UAE1BjC,EAAqB7B,QAOjC,SAASiE,GAAT,GAAwE,IAA7CjC,EAA4C,EAA5CA,gBAAiBD,EAA2B,EAA3BA,wBAE1C,OACE,kBAACvI,EAAA,EAAKI,MAAN,CAAYC,UAAU,8BACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,eAOA,yBACE9E,MAAO,CACL0E,OAAQ,YAGV,kBAAC,IAAD,CACEqH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GACxDC,OAAQ,CACNC,OAAQ,IAGV5D,KAAMgC,EACN3H,SAAU,SAAAvB,GACR,IAAMkH,EAAOlH,EAAM+K,OAAOC,UAC1B/B,EAAwB/B,QAOrBmO,UC10BTjJ,GAASC,YAAOC,IAAPD,CAAa,CAC1B7B,MAAO,UACP3I,UAAW,SACXuB,MAAO,QAqFMuS,G,YAlFb,WAAYpV,GAAQ,IAAD,8BACjB,4CAAMA,KACDE,MAAQ,CACX+I,WAAY,EAAKjJ,MAAMqV,MAAMC,OAAOlI,GACpC2H,YAAa,MAJE,E,iFAQE,IAAD,OAClBvO,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIY,YAAcpE,KAAKH,MAAM+I,WAClCtC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GACNC,QAAQC,IAAIF,EAAI6E,KAAKA,KAAK0H,UACP,MAAfvM,EAAIgF,QACN,EAAKhH,SAAS,CAAEiV,YAAajT,EAAI6E,KAAKA,KAAK0H,gB,+BAiB/C,OACE,kBAAC,IAAM3L,SAAP,KACE,kBAAC,EAAD,MACA,yBACEtE,MAAO,CACL8N,UAAW,wBACXrJ,MAAO,OACP0H,OAAQ,QACRjB,QAAS,YAGX,kBAAC,KAAD,CAAM6C,GAAG,IAAI5J,OAAO,SAClB,kBAACnB,EAAA,EAAD,CACEC,QAAQ,QACRjD,MAAO,CAAE0L,WAAY,cAAesC,OAAQ,gBAE5C,kBAAC,GAAD,MACA,0BACEhO,MAAO,CACLiO,WAAY,MACZlJ,SAAU,QACV8G,MAAO,YAJX,wBAYN,kBAACtH,EAAA,EAAD,CACEC,OAAK,EACLxE,MAAO,CACLyE,MAAO,OACPiH,WAAY,UACZR,QAAS,gBAGVjJ,KAAKH,MAAM6U,aACV,kBAAC,GAAD,CAAeA,YAAa1U,KAAKH,MAAM6U,oB,GA3E5BxT,aCZFgU,I,wLAEjB,OACE,kBAAC,IAAM7S,SAAP,KACE,yBAAKhE,UAAU,QAAQ8W,QAAQ,gBAC7B,0BACEpI,GAAG,QACH1O,UAAU,MACV+W,EAAE,s3CAaJ,uBAAGrI,GAAG,YACJ,0BACEA,GAAG,eACH1O,UAAU,MACV+W,EAAE,yHAGJ,0BACErI,GAAG,oBACH1O,UAAU,MACV+W,EAAE,wIAGJ,0BACErI,GAAG,qBACH1O,UAAU,MACV+W,EAAE,2HAGJ,0BACErI,GAAG,kBACH1O,UAAU,MACV+W,EAAE,4HAIN,uBAAGrI,GAAG,UACJ,0BACEA,GAAG,YACH1O,UAAU,MACV+W,EAAE,2LAEJ,0BACErI,GAAG,aACH1O,UAAU,MACV+W,EAAE,2LAEJ,0BACErI,GAAG,OACH1O,UAAU,MACV+W,EAAE,gVAEJ,0BACErI,GAAG,OACH1O,UAAU,MACV+W,EAAE,gGAEJ,0BACErI,GAAG,OACH1O,UAAU,MACV+W,EAAE,mHAEJ,0BACErI,GAAG,OACH1O,UAAU,MACV+W,EAAE,8QAEJ,0BACErI,GAAG,QACH1O,UAAU,MACV+W,EAAE,quBAEJ,0BACErI,GAAG,YACH1O,UAAU,OACV+W,EAAE,oHAGJ,0BACErI,GAAG,eACH1O,UAAU,OACV+W,EAAE,oHAGJ,0BACErI,GAAG,eACH1O,UAAU,OACV+W,EAAE,qHAEJ,0BACErI,GAAG,eACH1O,UAAU,OACV+W,EAAE,iIAEJ,0BACErI,GAAG,oBACH1O,UAAU,MACV+W,EAAE,i6BAOJ,0BACErI,GAAG,QACH1O,UAAU,OACV+W,EAAE,2GAGJ,0BACErI,GAAG,eACH1O,UAAU,MACV+W,EAAE,0XAKJ,uBAAGrI,GAAG,cACJ,0BACEA,GAAG,aACH1O,UAAU,MACV+W,EAAE,4ZAKJ,uBAAGrI,GAAG,UACJ,0BACE1O,UAAU,OACV+W,EAAE,iHAGJ,0BAAM/W,UAAU,OAAO+W,EAAE,uCACzB,0BAAM/W,UAAU,OAAO+W,EAAE,qCAI/B,uBAAGrI,GAAG,eACJ,uBAAGA,GAAG,UACJ,0BACEA,GAAG,gBACH1O,UAAU,OACV+W,EAAE,2JAEJ,0BACErI,GAAG,qBACH1O,UAAU,MACV+W,EAAE,yRAEJ,0BACErI,GAAG,sBACH1O,UAAU,MACV+W,EAAE,2RAIR,uBAAGrI,GAAG,SACJ,0BACEA,GAAG,QACH1O,UAAU,MACV+W,EAAE,6MAEJ,0BACErI,GAAG,QACH1O,UAAU,MACV+W,EAAE,kMAEJ,0BACErI,GAAG,QACH1O,UAAU,MACV+W,EAAE,uMAEJ,0BACErI,GAAG,QACH1O,UAAU,MACV+W,EAAE,8MAGN,uBAAGrI,GAAG,QACJ,0BACEA,GAAG,YACH1O,UAAU,MACV+W,EAAE,sEAEJ,0BACErI,GAAG,cACH1O,UAAU,MACV+W,EAAE,ykBAQN,uBAAGrI,GAAG,YACJ,0BACEA,GAAG,mBACH1O,UAAU,MACV+W,EAAE,sSAIJ,0BACErI,GAAG,uBACH1O,UAAU,OACV+W,EAAE,8LAGJ,0BACErI,GAAG,gBACH1O,UAAU,OACV+W,EAAE,uUAKN,uBAAGrI,GAAG,cACJ,0BACEA,GAAG,qBACH1O,UAAU,MACV+W,EAAE,iSAIJ,0BACErI,GAAG,yBACH1O,UAAU,OACV+W,EAAE,wMAIJ,0BACErI,GAAG,kBACH1O,UAAU,OACV+W,EAAE,gVAMN,uBAAGrI,GAAG,YACJ,0BACEA,GAAG,mBACH1O,UAAU,MACV+W,EAAE,6OAIJ,0BACErI,GAAG,uBACH1O,UAAU,OACV+W,EAAE,yUAKJ,0BACErI,GAAG,gBACH1O,UAAU,OACV+W,EAAE,6cAON,uBAAGrI,GAAG,cACJ,uBAAGA,GAAG,SACJ,0BACEA,GAAG,eACH1O,UAAU,MACV+W,EAAE,yJAEJ,0BACErI,GAAG,oBACH1O,UAAU,OACV+W,EAAE,qEAEJ,0BACErI,GAAG,aACH1O,UAAU,MACV+W,EAAE,qJAEJ,6BACErI,GAAG,cACH1O,UAAU,MACVgX,OAAO,2DAET,6BACEtI,GAAG,qBACH1O,UAAU,MACVgX,OAAO,qE,GAhTenU,cCAvB,I,OAAA,SAACvB,GACd,IAAM2V,EAAUrQ,IAAMsQ,YAEtB,OACE,6BAASlX,UAAU,iBACjB,6BAASA,UAAU,eAClB,oCAAS,4BAAQN,MAAO,CAAC0E,OAAO,cAAcgH,WAAW,OAAOG,MAAM,QAAQX,QAAQ,cAAcnG,SAAS,OAAQ+G,QAJxG,kBAAMlK,EAAM6V,UAAUF,EAAQG,WAIlC,gBAEV,6BAASpX,UAAU,WAAWqX,IAAKJ,GAChC3V,EAAMgW,a,UCEAC,GADH,I,sCATVJ,UAAY,SAACK,GACXC,aAAQD,EAAM,CACZE,UAAW,SACXC,SAAU,WACVvT,OAAQ,MCIR+I,GAASC,YAAOC,IAAPD,CAAa,CAC1B7B,MAAO,UACP3I,UAAW,SACXuB,MAAO,QAEHyT,G,YACJ,WAAYtW,GAAQ,IAAD,8BACjB,4CAAMA,KACDE,MAAQ,CAAEqW,QAAQ,EAAO5P,KAAM,IAFnB,E,sFAMemE,IAA9BzK,KAAKL,MAAMwW,SAAStW,OACpBG,KAAKL,MAAMwW,SAAStW,MAAMyG,KAAKO,OAAS,EAExC7G,KAAKP,SAAS,CAAEyW,QAAQ,EAAM5P,KAAMtG,KAAKL,MAAMwW,SAAStW,MAAMyG,OAGpB,OAAxC+G,aAAamB,QAAQ,gBACrBjB,KAAKkB,MAAMpB,aAAamB,QAAQ,gBAAgB3H,OAAS,EAEzD7G,KAAKP,SAAS,CACZyW,QAAQ,EACR5P,KAAMiH,KAAKkB,MAAMpB,aAAamB,QAAQ,kBAG7B4H,SAASC,eAAe,QAC9BC,aACH,IACA,oH,+BAMN,OACE,kBAAC,IAAMjU,SAAP,KACE,kBAAC,EAAD,MACA,yBACEhE,UAAU,kBACVN,MAAO,CACL8N,UAAW,wBACXrJ,MAAO,OACP0H,OAAQ,QACRjB,QAAS,YAGX,kBAAC,KAAD,CAAM6C,GAAG,KACP,kBAAC/K,EAAA,EAAD,CACEC,QAAQ,QACRjD,MAAO,CAAE0L,WAAY,cAAesC,OAAQ,gBAE5C,kBAAC,GAAD,MACA,0BACEhO,MAAO,CACLiO,WAAY,MACZlJ,SAAU,QACV8G,MAAO,YAJX,wBAYL5J,KAAKH,MAAMqW,QAAU7I,aAAamB,QAAQ,mBACzC,kBAAC,GAAD,CAAUlI,KAAMtG,KAAKH,MAAMyG,OAE3B,kBAAC,GAAD,W,GA/DgBpF,aAsEpBqV,G,YACJ,WAAY5W,GAAQ,IAAD,8BACjB,4CAAMA,KASR6V,UAAY,SAAAK,GAAI,OAAID,GAAIJ,UAAUK,IAVf,EAWnBW,eAAiB,SAAA3Q,GACf,IAAIgI,EAAW,EAAKhO,MAAM4W,aAC1B5I,EAAS6I,OAAO7Q,EAAO,GACvB,EAAKpG,SAAS,CAAEgX,aAAc5I,IAE9BR,aAAaC,QAAQ,cAAcC,KAAKC,UAAUK,KAdlD,EAAKhO,MAAQ,CACX4W,aAAc,GACd/I,iBAAkBL,aAAamB,QAAQ,oBAJxB,E,iFAQjBxO,KAAKP,SAAS,CAAEgX,aAAczW,KAAKL,MAAM2G,S,+BAUjC,IAAD,OACP,OACE,kBAAChE,EAAA,EAAD,KACE,kBAAC,GAAD,CAAckT,UAAWxV,KAAKwV,WAC5B,yBACEzX,MAAO,CACLkL,QAAS,gBAGVjJ,KAAKH,MAAM4W,cACVzW,KAAKH,MAAM4W,aAAa9R,KAAI,SAACyE,EAAMvD,GACjC,OACE,kBAACnD,EAAA,EAAD,CACEiP,WAAW,EACX3P,IAAKoH,EAAKR,WACV7K,MAAO,CACL0E,OAAQ,cAIV,kBAACE,EAAA,EAAD,CACE5E,MAAO,CACL2Q,YAAa,MACbC,aAAc,QAGhB,kBAACK,GAAA,EAAD,CACEjR,MAAO,CACL0L,WAAY,cACZa,YAAa,gBAGf,kBAAC0E,GAAA,EAAKC,KAAN,CAAWlR,MAAO,CAAEkL,QAAS,IAAKxG,OAAQ,YACxC,kBAACuM,GAAA,EAAKE,MAAN,CAAYnR,MAAO,CAAE+E,SAAU,WAC7B,kBAACJ,EAAA,EAAD,CAAKiP,WAAW,GACd,kBAAChP,EAAA,EAAD,CAAKC,GAAG,KACN,8BACE,+BACE,gCAAS,KAEX,0BAAM7E,MAAO,CAAE6L,MAAO,YACnBR,EAAKR,cAKZ,kBAACjG,EAAA,EAAD,KACE,0BACE5E,MAAO,CAEL+E,SAAU,OACVD,WAAY,QAGd,qCACA,0BAAM9E,MAAO,CAAE6L,MAAO,YAAtB,cACc,IACI,SAAfR,EAAKgG,MACa,SAAfhG,EAAKgG,MACH,KACA,IACc,SAAfhG,EAAKgG,MACJ,KACA,OAhBV,IAmBE,0BACErR,MAAO,CACL6L,MAAO,YACPyF,cAAe,cAGhB,IACAjG,EAAK7I,QAIZ,kBAACoC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC7B,EAAA,EAAD,CACE1C,UAAU,kBACVN,MAAO,CACL4L,MAAO,QACPC,MAAO,OACP9G,SAAU,SAEZ9B,QAAQ,OACR6I,QAAS,EAAK2M,eAAe9M,KAC3B,EACA7D,IAVJ,eAmBN,kBAACmJ,GAAA,EAAKM,KAAN,CAAWvR,MAAO,CAAEwR,aAAc,UAChC,2BAAI,OACHnG,EAAKuL,iBACH/J,QACC,SAAA+L,GAAI,OACFA,EAAK7N,WAAa,EAAKjJ,MAAM6N,oBAC/B,GACDhI,QAAQ8J,QAAQ,kBAAmB,KAExC,kBAAC9M,EAAA,EAAD,KACG0G,EAAKuL,iBACH/J,QACC,SAAA+L,GAAI,OACFA,EAAK7N,WAAa,EAAKjJ,MAAM6N,oBAC/B,GACDhJ,QAAQC,KAAI,SAACiS,EAAYC,GACxB,OACE,kBAAC,IAAMxU,SAAP,CAAgBL,IAAK6U,GACnB,kBAAClU,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,CAAE0E,OAAQ,YAC1BoU,EAAc,EACd,KAAM,IACND,EAAWlR,QAAQ8J,QAClB,kBACA,IACC,IACH,iCAGG,+BAAKoH,EAAWjR,iBAKvB,KAER,kBAACjD,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,gBACpB,qCACC2G,EAAKuL,iBACH/J,QACC,SAAA+L,GAAI,OACFA,EAAK7N,WAAa,EAAKjJ,MAAM6N,oBAC/B,GACD3E,SAASyG,QAAQ,kBAAmB,mB,GA9J5CtO,aA4KR+U,MCpBA9E,I,wLAvOH,IAAD,OACHxB,EAAmB3P,KAAKL,MAAMiQ,WAAWhF,QAC3C,SAAAxB,GAAI,OAAIA,EAAKyG,KAAKC,SAAW,EAAKnQ,MAAMoQ,kBACxC,GACFJ,EAAmBA,EAAmBA,EAAiB5K,KAAO,GAC9D,IAAI4F,EAAsB3K,KAAKL,MAAMiI,cAAcgD,QACjD,SAAAxB,GAAI,OAAIA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAMuG,qBAC9C,GACFyE,EAAsBA,EAClBA,EAAoBE,YACpB,GACJ,IAAIC,EAAsB9K,KAAKL,MAAM+G,cAAckE,QACjD,SAAAxB,GAAI,OAAIA,EAAKtC,eAAeC,YAAc,EAAKpH,MAAMiH,qBACrD,GAeF,OAdAkE,EAAsBA,EAClBA,EAAoBC,YACpB,GAaF,kBAACjL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMqQ,iBACrBvP,MAAOkP,GAEN3P,KAAKL,MAAMiQ,YACV5P,KAAKL,MAAMiQ,WAAWjL,KAAI,SAACyE,EAAMvD,GAC/B,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKrE,MAC7BqE,EAAKrE,WAMlB,kBAACjF,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SAEH1I,SAAUX,KAAKL,MAAMgI,oBACrBlH,MAAOkK,GAEN3K,KAAKL,MAAMiI,eACV5H,KAAKL,MAAMiI,cAAcjD,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAKyB,aAC7BzB,EAAKyB,kBAMlB,kBAAC/K,EAAA,EAAKI,MAAN,CAAYC,UAAU,gCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,WAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOqK,EACPnK,SAAUX,KAAKL,MAAMqI,qBAEpBhI,KAAKL,MAAM+G,eACV1G,KAAKL,MAAM+G,cAAc/B,KAAI,SAACyE,EAAMvD,GAClC,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,EAAK2B,aAC7B3B,EAAK2B,kBAOlB,kBAACjL,EAAA,EAAKI,MAAN,CAAYC,UAAU,iCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KACL9B,GAAG,SACH5I,MAAOT,KAAKL,MAAMsQ,aAClBtP,SAAUX,KAAKL,MAAMuQ,kBAEpBlQ,KAAKL,MAAMwQ,YACVnQ,KAAKL,MAAMwQ,WAAWxL,KAAI,SAACyE,EAAMvD,GAC/B,OACE,4BAAQ7D,IAAK6D,EAAOpF,MAAO2I,GACxBA,QAMgB,wBAA5BpJ,KAAKL,MAAMsQ,cACV,kBAACnQ,EAAA,EAAKI,MAAN,CAAYC,UAAU,kCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,QAOA,kBAAC/C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CAAEyL,aAAc,KACvB2B,KAAK,KAEL1K,MAAOT,KAAKL,MAAMyR,iBAClBzQ,SAAUX,KAAKL,MAAM0R,wBAI3B,kBAACvR,EAAA,EAAKI,MAAN,CAAYC,UAAU,kCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,wBAOA,kBAAC,KAAD,CACEuL,SAAUpO,KAAKL,MAAM2R,UACrB3Q,SAAUX,KAAKL,MAAM4R,sBACrBC,WAAW,gBAGf,kBAAC1R,EAAA,EAAKI,MAAN,CAAYC,UAAU,mCACpB,kBAACL,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,uBAOA,kBAAC,KAAD,CACEuL,SAAUpO,KAAKL,MAAM8R,QACrB9Q,SAAUX,KAAKL,MAAM+R,oBACrBF,WAAW,gBAGf,kBAAC1R,EAAA,EAAKI,MAAN,KACE,kBAACJ,EAAA,EAAKM,MAAN,CACErC,MAAO,CACL8E,WAAY,QAFhB,kCAOA,kBAACH,EAAA,EAAD,CAAKiP,WAAW,GACd,kBAAChP,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACAE,KAAK,SACHC,YAAY,QACZC,MAAOT,KAAKL,MAAMiS,KAAK5R,KAAKL,MAAMiS,KAAK,EACvCjR,SAAUX,KAAKL,MAAMkS,aAAanI,KAAK1J,SAG3C,kBAAC2C,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACLyM,UAAW,SACX3H,WAAY,MACZC,SAAU,OAEZgP,WAAS,EACTC,UAAQ,EACRC,aAAa,OAGjB,kBAACrP,EAAA,EAAD,CAAK4G,GAAG,KACN,kBAACzJ,EAAA,EAAKO,QAAN,CACAE,KAAK,SACHC,YAAY,UACZC,MAAOT,KAAKL,MAAMsS,OAAOjS,KAAKL,MAAMsS,OAAO,EAC3CtR,SAAUX,KAAKL,MAAMuS,eAAexI,KAAK1J,gB,GAtN7BkB,cCyWbiR,G,iLAzWH,IAAD,OACP,OACE,6BACE,kBAACzP,EAAA,EAAD,CAAK3E,MAAO,CAAEmM,OAAQ,SACpB,kBAAC5H,EAAA,EAAD,CAAWC,OAAK,EAACxE,MAAO,CAAEkL,QAAS,MACjC,kBAACnJ,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,MACZJ,OAAQ,YAEVqP,WAAS,EACTC,UAAQ,EACRC,aAAa,SAEf,kBAACtP,EAAA,EAAD,CAAK3E,MAAO,CAAE0E,OAAQ,UACpB,kBAACE,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,CAAEkL,QAAS,MAC5B,kBAACnJ,EAAA,EAAKO,QAAN,CACEI,MAAOT,KAAKL,MAAMyS,gBAClBzR,SAAUX,KAAKL,MAAM0S,4BACrB7R,YAAY,uBACZzC,MAAO,CAAEyL,aAAc,QAG3B,kBAAC7G,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,CAAEkL,QAAS,MAC5B,kBAACnJ,EAAA,EAAKO,QAAN,CACEI,MAAOT,KAAKL,MAAM2S,cAClB3R,SAAUX,KAAKL,MAAM4S,0BACrB/R,YAAY,qBACZzC,MAAO,CAAEyL,aAAc,IAAKG,MAAO,cAK3C,yBAAK5L,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SAUtC,yBAAKzE,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,8EACA,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GAExDC,OAAQ,CACNC,OAAQ,IAGV5D,KAAMtG,KAAKL,MAAM6S,uBACjB7R,SAAU,SAAAvB,GAER,EAAKO,MAAM8S,+BACTrT,EAAM+K,OAAOC,eAKrB,yBAAKrM,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,4EACA,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OAAKA,EAASC,mBAAoB,GAExDC,OAAQ,CACNC,OAAQ,IAGV5D,KAAMtG,KAAKL,MAAM+S,qBACjB/R,SAAU,SAAAvB,GAER,EAAKO,MAAMgT,6BACTvT,EAAM+K,OAAOC,gBAMtBpK,KAAKL,MAAMiT,cAAc/L,OAAS,GACjC,kBAAC/G,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,MACZJ,OAAQ,YAEVqP,WAAS,EACTC,UAAQ,EACRC,aAAa,eAGhBhS,KAAKL,MAAMiT,eACV5S,KAAKL,MAAMiT,cAAcjO,KAAI,SAACyE,EAAMvD,GAClC,OACE,yBACE7D,IAAK6D,EACL9H,MAAO,CACLgO,OAAQ,sBACRvJ,MAAO,OACPyG,QAAS,MACTxG,OAAQ,UAGV,kBAACC,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YACrC,kBAACE,EAAA,EAAD,CAAKC,GAAG,MAYP,EAAKjD,MAAMiT,cAAc/L,SAAWhB,EAAQ,GAC3C,kBAAClD,EAAA,EAAD,OAWJ,kBAACD,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YACrC,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACN,0DACA,kBAAC9C,EAAA,EAAKO,QAAN,CACEI,MACE2I,EAAK0N,oBAAoBlM,QACvB,SAAAmI,GAAM,MAAwB,YAApBA,EAAOjK,YACjB,GAAG/D,KAEPpE,SAAU,EAAKhB,MAAMqT,wBAAwBtJ,KAC3C,EACA7D,EACA,WAEFrF,YAAY,0BACZzC,MAAO,CAAEyL,aAAc,QAG3B,kBAAC7G,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,wDACA,kBAAC9C,EAAA,EAAKO,QAAN,CACEI,MACE2I,EAAK0N,oBAAoBlM,QACvB,SAAAmI,GAAM,MAAwB,UAApBA,EAAOjK,YACjB,GAAG/D,KAEPpE,SAAU,EAAKhB,MAAMqT,wBAAwBtJ,KAC3C,EACA7D,EACA,SAEFrF,YAAY,wBACZzC,MAAO,CAAEyL,aAAc,SAI7B,kBAAC9G,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YAErC,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACN,8CACA,kBAAC9C,EAAA,EAAKO,QAAN,CACEyU,UAAQ,EACRvU,KAAK,SACLE,MAAO2I,EAAK6J,iBACZtS,SAAU,EAAKhB,MAAMuT,yBAAyBxJ,KAC5C,EACA7D,GAEFrF,YAAY,cACZzC,MAAO,CAAEyL,aAAc,QAG3B,kBAAC7G,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,wDACA,kBAAC9C,EAAA,EAAKO,QAAN,CACEyU,UAAQ,EACRvU,KAAK,SACLE,MAAO2I,EAAK+J,yBACZxS,SAAU,EAAKhB,MAAMyT,iCAAiC1J,KACpD,EACA7D,GAEFrF,YAAY,kBACZzC,MAAO,CAAEyL,aAAc,SAI7B,yBAAKzL,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,yBAAKzE,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,iFAGA,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OACnBA,EAASC,mBAAoB,GAGhC1D,KACE8C,EAAK0N,oBAAoBlM,QACvB,SAAAmI,GAAM,MAAwB,YAApBA,EAAOjK,YACjB,GAAGpD,QAEPuE,OAAQ,CACNC,OAAQ,IAIVvJ,SAAU,SAAAvB,GAER,EAAKO,MAAM0T,+BACTxN,EACA,UACAzG,EAAM+K,OAAOC,eAKrB,yBAAKrM,MAAO,CAAE0E,OAAQ,UAAWD,MAAO,SACtC,+EAGA,kBAAC,IAAD,CACEsH,aAAc,SAAAC,GAAQ,OACnBA,EAASC,mBAAoB,GAGhC1D,KACE8C,EAAK0N,oBAAoBlM,QACvB,SAAAmI,GAAM,MAAwB,UAApBA,EAAOjK,YACjB,GAAGpD,QAEPuE,OAAQ,CACNC,OAAQ,GACR1J,YACE,gDAEJG,SAAU,SAAAvB,GAER,EAAKO,MAAM0T,+BACTxN,EACA,QACAzG,EAAM+K,OAAOC,gBAMtBhB,EAAKkK,WACJlK,EAAKkK,UAAU3O,KAAI,SAAC4O,EAAcC,GAChC,OACE,kBAAC9Q,EAAA,EAAD,CAAK3E,MAAO,CAAEkD,UAAW,UAEvB,kBAAC0B,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC9C,EAAA,EAAKO,QAAN,CACEtC,MAAO,CACL8E,WAAY,MACZJ,OAAQ,WACR+H,UAAW,SAGbsH,WAAS,EACTC,UAAQ,EACRC,aAAY,YAAOwB,EAAgB,MAGvC,kBAAC7Q,EAAA,EAAD,CAAKC,GAAG,IAAI7E,MAAO,IACjB,kBAAC+B,EAAA,EAAKO,QAAN,CACEE,KAAK,SACLE,MAAO8S,EACP5S,SAAU,EAAKhB,MAAM8T,gCAAgC/J,KACnD,EACA7D,EACA2N,GAEFhT,YAAY,eACZzC,MAAO,CAAEyL,aAAc,QAG1BJ,EAAKkK,UAAUzM,SAAW2M,EAAgB,GACzC,kBAAC7Q,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEhD,MAAO,CAAE4L,MAAO,OAAQC,MAAO,QAC/B5I,QAAQ,OACR6I,QAAS,EAAKlK,MAAM+T,sBAAsBhK,KACxC,EACA7D,IALJ,iBAeZ,kBAACnD,EAAA,EAAD,CAAK3E,MAAO,CAAEkD,UAAW,UACvB,kBAAC0B,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,WAyBV,kBAACL,EAAA,EAAD,CAAWC,OAAK,EAACxE,MAAO,CAAE4Q,aAAc,MACtC,kBAACjM,EAAA,EAAD,CAAKiP,WAAW,EAAM5T,MAAO,CAAE0E,OAAQ,YACrC,kBAACE,EAAA,EAAD,CAAKC,GAAG,MAAR,KACA,kBAACD,EAAA,EAAD,c,GAjVezB,aCqjBd6V,G,YAljBb,WAAYpX,GAAQ,IAAD,uBACjB,4CAAMA,KAwCRgU,oBAAsB,SAAA9N,GACpB,IAAIiO,EAAkB,EAAKjU,MAAM+S,cAC9BkB,EAAgBjO,GAAOyN,UAExBQ,EAAgBjO,GAAOyN,UAAUzR,KAAK,IAEtCiS,EAAgBjO,GAAOyN,UAAU,CAAC,IAEpC,EAAK7T,SAAS,CAAEmT,cAAekB,KAjDd,EAmDnBJ,sBAAwB,SAAA7N,GACtB,IAAIiO,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOyN,UAAUxN,MACjC,EAAKrG,SAAS,CAAEmT,cAAekB,KAtDd,EAwDnBL,gCAAkC,SAAC5N,EAAO2N,EAAevR,GACvD,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOyN,UAAUE,GAAiB/K,SAASxG,EAAEC,OAAOzB,OACpE,EAAKhB,SAAS,CAAEmT,cAAekB,KA3Dd,EA6DnBT,+BAAiC,SAACxN,EAAOiD,EAAUxC,GACjD,IAAIwN,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOiR,oBAAoBlM,QACzC,SAAAxB,GAAI,OAAIA,EAAKN,WAAaA,KAC1B,GAAGpD,QAAUY,EAEf,EAAK7G,SAAS,CAAEmT,cAAekB,KAnEd,EAqEnBV,iCAAmC,SAACvN,EAAO5D,GAEzC,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOsN,yBAA2BlR,EAAEC,OAAOzB,MAC3D,EAAKhB,SAAS,CAAEmT,cAAekB,KAzEd,EA2EnBZ,yBAA2B,SAACrN,EAAO5D,GACjC,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOoN,iBAAmBhR,EAAEC,OAAOzB,MACnD,EAAKhB,SAAS,CAAEmT,cAAekB,KA9Ed,EAgFnBF,WAAa,WAEX,IAAIE,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjS,KAAK,CACnBoR,iBAAkB,GAClBE,yBAA0B,GAC1BG,UAAW,GAEXwD,oBAAqB,CACnB,CACEpR,QAAS,GACToD,SAAU,UACV/D,KAAM,SACNgG,YAAa,IAEf,CACErF,QAAS,GACToD,SAAU,QACV/D,KAAM,SACNgG,YAAa,OAInB,EAAKtL,SAAS,CAAEmT,cAAekB,KAvGd,EAyGnBjB,cAAgB,WACd,IAAIiB,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBhO,MAChB,EAAKrG,SAAS,CAAEmT,cAAekB,KA5Gd,EA8GnBd,wBAA0B,SAACnN,EAAOiD,EAAU7G,GAC1C,IAAI6R,EAAkB,EAAKjU,MAAM+S,cACjCkB,EAAgBjO,GAAOiR,oBAAoBlM,QACzC,SAAAxB,GAAI,OAAIA,EAAKN,WAAaA,KAC1B,GAAG/D,KAAO9C,EAAEC,OAAOzB,MACrB,EAAKhB,SAAS,CAAEmT,cAAekB,KAnHd,EAqHnBzB,4BAA8B,SAAApQ,GAC5B,EAAKxC,SAAS,CAAE2S,gBAAiBnQ,EAAEC,OAAOzB,SAtHzB,EAwHnB8R,0BAA4B,SAAAtQ,GAC1B,EAAKxC,SAAS,CAAE6S,cAAerQ,EAAEC,OAAOzB,SAzHvB,EA2HnBgS,+BAAiC,SAAAnM,GAC/B,EAAK7G,SAAS,CAAE+S,uBAAwBlM,KA5HvB,EA8HnBqM,6BAA+B,SAAArM,GAC7B,EAAK7G,SAAS,CAAEiT,qBAAsBpM,KA/HrB,EAiInBuL,aAAe,SAAA5P,GACb,EAAKxC,SAAS,CAAEmS,KAAM3P,EAAEC,OAAOzB,SAlId,EAqInByR,eAAiB,SAAAjQ,GACf,EAAKxC,SAAS,CAAEwS,OAAQhQ,EAAEC,OAAOzB,SAtIhB,EAwInB8Q,sBAAwB,SAAAwC,GACtB,EAAKtU,SAAS,CACZ6R,UAAWyC,KA1II,EA6InBrC,oBAAsB,SAAAqC,GACpB,EAAKtU,SAAS,CACZgS,QAASsC,KA/IM,EAkJnB1C,qBAAuB,SAAApP,GACrB,EAAKxC,SAAS,CAAE2R,iBAAkBnP,EAAEC,OAAOzB,SAnJ1B,EA+NnB6P,kBAAoB,WACgB,KAA9B,EAAKzQ,MAAMkQ,eACb5J,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIU,oBAAsB,EAAKrE,MAAMkQ,eAC1CzJ,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACNN,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIC,aAAe,UACxB6C,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAgP,GACN,GAAwB,MAApBA,EAAS9J,OAAgB,CAE3B,IADA,IAAI+J,EAAkB,GACbC,EAAI,EAAGA,EAAIhP,EAAI6E,KAAKA,KAAKK,KAAKE,OAAQ4J,IAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASjK,KAAKA,KAAKK,KAAKE,OAAQ6J,IAEhDH,EAASjK,KAAKA,KAAKK,KAAK+J,GAAG5I,QAAQC,YACnCtG,EAAI6E,KAAKA,KAAKK,KAAK8J,GAAG1I,WAEtByI,EAAgB3O,KAAK0O,EAASjK,KAAKA,KAAKK,KAAK+J,IAIpCF,EAAgB5F,QAC7B,SAAAxB,GAAI,OACFA,EAAKtB,QAAQC,YAAc,EAAKpI,MAAM+U,YAAY3M,aAEzClB,OAAS,EACpB,EAAKpH,SACH,CACEmI,cAAe4I,EACftK,kBACEsK,EAAgB3J,OAAS,EACrB,EAAKlH,MAAM+U,YAAY3M,UACvB,KAER,WACE,EAAK9B,uBAIT,EAAKxG,SACH,CACEmI,cAAe4I,EACftK,kBACEsK,EAAgB3J,OAAS,EACrB2J,EAAgB,GAAG1I,QAAQC,UAC3B,KAER,WACE,EAAK9B,2BAOfgB,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IAAI,uDACZ,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,GAEnBgB,cAAe,GACf+I,kBAAmB,OA9SN,EAkTnB1K,kBAAoB,WACmB,KAAjC,EAAKpG,MAAMqG,kBACbC,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIE,aAAe,EAAK7D,MAAMqG,kBAAoB,WACvDI,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,OACShF,EAAI6E,KAAKA,KAAKK,KAAKiE,QAChC,SAAAxB,GAAI,OACFA,EAAKtC,eAAeC,YACpB,EAAKpH,MAAM+U,YAAY3N,aAEdF,OAAS,EACpB,EAAKpH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxB,EAAKlH,MAAM+U,YAAY3N,UACvB,KAER,eAKF,EAAKtH,SACH,CACEiH,cAAejF,EAAI6E,KAAKA,KAAKK,KAC7BC,kBACEnF,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGG,eAAeC,UACrC,KAER,eAMJE,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OAGhBP,QAAQC,IACN,kEAEF,EAAKlC,SAAS,CACZiH,cAAe,GACfE,kBAAmB,OA3WN,EA+WnBoJ,iBAAmB,SAAA/N,GACjBA,EAAE5C,iBAEF,EAAKI,SACH,CACEsQ,eAAgB,EAAKlQ,MAAM+P,WAAW3N,EAAEC,OAAOwC,QAAQmD,eACpDgI,KAAKC,SAEV,WACE,EAAKQ,wBAxXQ,EA4XnB3I,oBAAsB,SAAA1F,GACpBA,EAAE5C,iBAEF,EAAKI,SACH,CACEyG,kBAAmB,EAAKrG,MAAM+H,cAC5B3F,EAAEC,OAAOwC,QAAQmD,eACjBC,QAAQC,YAEZ,WACE,EAAK9B,wBAtYQ,EA0YnB+B,oBAAsB,SAAA/F,GACpBA,EAAE5C,iBACF,EAAKI,SACH,CACEmH,kBAAmB,EAAK/G,MAAM6G,cAC5BzE,EAAEC,OAAOwC,QAAQmD,eACjBf,eAAeC,YAEnB,gBAlZe,EAqZnBmJ,iBAAmB,SAAAjO,GACjBA,EAAE5C,iBACF,EAAKI,SAAS,CAAEwQ,aAAchO,EAAEC,OAAOzB,QAAS,gBAvZ/B,EA2ZnBuT,aAAe,WACb7N,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIe,WACT+B,KAAM,CACJC,UAAW,SACXkL,QAAS,EAAK5R,MAAM4R,QAAQwC,cAC5BnE,OAAQ,EAAKjQ,MAAMkQ,eACnBhJ,UAAW,EAAKlH,MAAM+G,kBACtBsN,SAAU,EAAKrU,MAAM+S,cACrBtB,UAAW,EAAKzR,MAAMyR,UAAU2C,cAChClM,UAAW,EAAKlI,MAAMqG,kBACtBmK,OAAQ,EAAK1Q,MAAM+U,YAAYrE,OAC/B8D,iBAAkB,CAChB,CACEC,aAAc,EAAKvU,MAAM2S,uBACzB1J,SAAU,UACV/D,KAAM,EAAKlF,MAAMuS,gBACjB4E,cAAe,EAAKnX,MAAMoX,sBAG5B,CACE7C,aAAc,EAAKvU,MAAM6S,qBACzB5J,SAAU,QACV/D,KAAM,EAAKlF,MAAMyS,cACjB0E,cAAe,EAAKnX,MAAMqX,qBAG9B7C,KACEC,WAAW,EAAKzU,MAAM+R,MACtB0C,WAAWC,OAAO9L,SAAS,EAAK5I,MAAMoS,QAAU,KAClD1R,KAAM,EAAKV,MAAMoQ,aACjBY,KAAM,EAAKhR,MAAMuR,kBAEnB5K,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GACe,MAAfA,EAAIgF,QACN/E,QAAQC,IAAIF,EAAI6E,KAAKA,SAGxBxE,OAAM,SAAAG,GACLP,QAAQC,IAAIM,OArchB,IAAIkV,EACoE,GAAtE5C,OAAO,KAAO,EAAK5U,MAAM+U,YAAYL,KAAK+C,WAAWC,MAAM,KAAK,IAC9DC,EAAQ,EAAK3X,MAAM+U,YAAYL,KAAK+C,WAAWC,MAAM,KAAK,GAJ7C,OAKjB,EAAKxX,MAAQ,CACX+P,WAAY,GACZG,eAAgB,GAChBnI,cAAe,GACf1B,kBAAmB,GACnBQ,cAAe,GACfE,kBAAmB,GACnBuJ,WAAY,CAAC,OAAQ,SAAU,gBAAiB,uBAChDmB,UAAW,IAAIkD,KACf/C,QAAS,IAAI+C,KACbpC,gBAAiB,EAAKzS,MAAM+U,YAAY6C,aAAa3M,QACnD,SAAAxB,GAAI,MAAsB,YAAlBA,EAAKN,YACb,GAAG/D,KACLuN,cAAe,EAAK3S,MAAM+U,YAAY6C,aAAa3M,QACjD,SAAAxB,GAAI,MAAsB,UAAlBA,EAAKN,YACb,GAAG/D,KACLyN,uBAAwB,EAAK7S,MAAM+U,YAAY6C,aAAa3M,QAC1D,SAAAxB,GAAI,MAAsB,YAAlBA,EAAKN,YACb,GAAGsL,aACL1B,qBAAsB,EAAK/S,MAAM+U,YAAY6C,aAAa3M,QACxD,SAAAxB,GAAI,MAAsB,UAAlBA,EAAKN,YACb,GAAGsL,aACLxC,KAAM0F,EACNrF,OAAQkF,EACRlH,aAAc,EAAKtQ,MAAM+U,YAAYnU,KACrC6Q,iBAAkB,EAAKzR,MAAM+U,YAAY7D,KAAK,EAAKlR,MAAM+U,YAAY7D,KAAK,KAC1E+B,cAAe,EAAKjT,MAAM+U,YAAY8C,aACtCP,qBAAqB,EAAKtX,MAAM+U,YAAY6C,aAAa3M,QACvD,SAAAxB,GAAI,MAAsB,YAAlBA,EAAKN,YACb,GAAGkO,cACLE,mBAAmB,EAAKvX,MAAM+U,YAAY6C,aAAa3M,QACrD,SAAAxB,GAAI,MAAsB,UAAlBA,EAAKN,YACb,GAAGkO,eArCU,E,iFAqJE,IAAD,OAyBlB7Q,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIS,UAAY,UACrBqC,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAGjBjF,MAAK,SAAAE,GAEe,MAAfA,EAAIgF,OACShF,EAAI6E,KAAKA,KAAKK,KAAKiE,QAChC,SAAAxB,GAAI,OAAIA,EAAKyG,KAAKC,SAAW,EAAKnQ,MAAM+U,YAAY5E,UAEzCjJ,OAAS,EACpB,EAAKpH,SACH,CACEmQ,WAAYnO,EAAI6E,KAAKA,KAAKK,KAC1BoJ,eACEtO,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxB,EAAKlH,MAAM+U,YAAY5E,OACvB,KAER,WACE,EAAKQ,uBAIT,EAAK7Q,SACH,CACEmQ,WAAYnO,EAAI6E,KAAKA,KAAKK,KAC1BoJ,eACEtO,EAAI6E,KAAKA,KAAKK,KAAKE,OAAS,EACxBpF,EAAI6E,KAAKA,KAAKK,KAAK,GAAGkJ,KAAKC,OAC3B,KAER,WACE,EAAKQ,uBAKXrJ,MAAM,sBAGTnF,OAAM,SAAAG,GACLP,QAAQC,IAAIM,Q,+BA+OhB,OACE,kBAACK,EAAA,EAAD,CACEC,OAAK,EACLxE,MAAO,CACLyE,MAAO,OACPiH,WAAY,UACZR,QAAS,gBAGX,yBAAKlL,MAAO,CAAEkL,QAAS,SAAUxG,OAAQ,UACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,IACH7E,MAAO,CACLkL,QAAS,YAIX,6BACE,kBAAC,GAAD,CACEqI,UAAWtR,KAAKH,MAAMyR,UACtBG,QAASzR,KAAKH,MAAM4R,QACpBC,oBAAqB1R,KAAK0R,oBAC1BH,sBAAuBvR,KAAKuR,sBAC5BK,KAAM5R,KAAKH,MAAM+R,KACjBK,OAAQjS,KAAKH,MAAMoS,OACnBJ,aAAc7R,KAAK6R,aACnBK,eAAgBlS,KAAKkS,eACrBtK,cAAe5H,KAAKH,MAAM+H,cAC1BlB,cAAe1G,KAAKH,MAAM6G,cAC1BkJ,WAAY5P,KAAKH,MAAM+P,WACvBjI,oBAAqB3H,KAAK2H,oBAC1BK,oBAAqBhI,KAAKgI,oBAC1BgI,iBAAkBhQ,KAAKgQ,iBACvB9J,kBAAmBlG,KAAKH,MAAMqG,kBAC9BU,kBAAmB5G,KAAKH,MAAM+G,kBAC9BmJ,eAAgB/P,KAAKH,MAAMkQ,eAC3BI,WAAYnQ,KAAKH,MAAMsQ,WACvBF,aAAcjQ,KAAKH,MAAMoQ,aACzBC,iBAAkBlQ,KAAKkQ,iBACvBmB,qBAAsBrR,KAAKqR,qBAC3BD,iBAAkBpR,KAAKH,MAAMuR,qBAInC,kBAACzO,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CACE5E,MAAO,CACL0L,WAAY,YAGd,kBAAC,GAAD,CACE2I,gBAAiBpS,KAAKH,MAAMuS,gBAC5BE,cAAetS,KAAKH,MAAMyS,cAC1BE,uBAAwBxS,KAAKH,MAAM2S,uBACnCE,qBAAsB1S,KAAKH,MAAM6S,qBACjCC,6BAA8B3S,KAAK2S,6BACnCF,+BACEzS,KAAKyS,+BAEPF,0BAA2BvS,KAAKuS,0BAChCF,4BAA6BrS,KAAKqS,4BAClCO,cAAe5S,KAAKH,MAAM+S,cAC1BC,cAAe7S,KAAK6S,cACpBG,wBAAyBhT,KAAKgT,wBAC9BI,iCACEpT,KAAKoT,iCAEPF,yBAA0BlT,KAAKkT,yBAC/BG,+BACErT,KAAKqT,+BAEPM,oBAAqB3T,KAAK2T,oBAC1BD,sBAAuB1T,KAAK0T,sBAC5BE,WAAY5T,KAAK4T,WACjBH,gCACEzT,KAAKyT,kCAGT,yBAAK1V,MAAO,CAAE0E,OAAQ,QAAS+H,UAAW,WACxC,kBAACzJ,EAAA,EAAD,CACEhD,MAAO,CACLyL,aAAc,IACdC,WAAY,UACZa,YAAa,UACbrB,QAAS,cACTnG,SAAU,QACVD,WAAY,OAEdgH,QAAS7J,KAAKgU,cAThB,iBAeJ,kBAACrR,EAAA,EAAD,CAAKC,GAAG,a,GA3iBY1B,aCE1BsK,GAASC,YAAOC,IAAPD,CAAa,CAC1B7B,MAAO,UACP3I,UAAW,SACXuB,MAAO,QAyEMiV,G,YAtEb,WAAY9X,GAAQ,IAAD,8BACjB,4CAAMA,KACDE,MAAQ,CACXwQ,OAAQ,EAAK1Q,MAAMqV,MAAMC,OAAOlI,GAChC2H,YAAa,MAJE,E,iFAQE,IAAD,OAClBvO,IAAM,CACJC,OAAQ,OACRC,IAAK7C,EAAIc,eAAiBtE,KAAKH,MAAMwQ,OACrC/J,KAAM,CAAEC,UAAW,UACnBC,QAAS,CACP,eAAgB,sBAEjBjF,MAAK,SAAAE,GACNC,QAAQC,IAAIF,EAAI6E,KAAKA,KAAKoR,MACP,MAAfjW,EAAIgF,QACN,EAAKhH,SAAS,CAAEiV,YAAajT,EAAI6E,KAAKA,KAAKoR,Y,+BAK/C,OACE,kBAAC,IAAMrV,SAAP,KACE,kBAAC,EAAD,MACA,yBACEtE,MAAO,CACL8N,UAAW,wBACXrJ,MAAO,OACP0H,OAAQ,QACRjB,QAAS,YAGX,kBAAC,KAAD,CAAM6C,GAAG,IAAI5J,OAAO,SAClB,kBAACnB,EAAA,EAAD,CACEC,QAAQ,QACRjD,MAAO,CAAE0L,WAAY,cAAesC,OAAQ,gBAE5C,kBAAC,GAAD,MACA,0BACEhO,MAAO,CACLiO,WAAY,MACZlJ,SAAU,QACV8G,MAAO,YAJX,wBAYN,kBAACtH,EAAA,EAAD,CACEC,OAAK,EACLxE,MAAO,CACLyE,MAAO,OAEPiH,WAAY,UACZR,QAAS,gBAGVjJ,KAAKH,MAAM6U,aACV,kBAAC,GAAD,CAAmBA,YAAa1U,KAAKH,MAAM6U,oB,GAhEhCxT,a,SCKjByW,IAJiBC,aAAqB,CAC1CC,SAAUC,UAGW,SAAC,GAAmD,IAAtC5W,EAAqC,EAAhD6W,UAAsB3V,EAA0B,EAA1BA,cAAe4V,EAAW,EAAXA,KAE7D,OACE,kBAAC,IAAD,CACEC,OAAK,EACLC,OAAQ,SAAAvY,GAAK,OACXyC,EAAgB,kBAAClB,EAAcvB,GAAY,kBAAC,IAAD,CAAUmM,GAAG,YAE1DkM,KAAMA,MAmDGG,G,iLA7CX,OACE,kBAAC,KAAD,CAAQN,SAAU,KAEhB,kBAAC,IAAD,CACEI,OAAK,EACL7V,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,SACLD,UAAW5W,IAEb,kBAAC,GAAD,CACEiB,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,IACLD,UAAWhH,KAGb,kBAAC,GAAD,CACE3O,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,WACLD,UAAWpM,KAEb,kBAAC,GAAD,CACEvJ,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,WACLD,UAAWlE,KAEb,kBAAC,GAAD,CACEzR,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,gBACLD,UAAWhD,KAEb,kBAAC,GAAD,CACE3S,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,eACLD,UAAW9B,KAEb,kBAAC,GAAD,CACE7T,cAAepC,KAAKL,MAAMyC,cAC1B4V,KAAK,gBACLD,UAAWN,U,GAxCIvW,aCiBVkX,G,2MAzCbvY,MAAQ,CACNuC,mBAAeqI,G,mFAEI,IAAD,OAClBhM,EAAS4C,OAAOc,oBAAmB,SAAAC,GAC7BA,EACF3D,EACG4C,OACAgX,YAAYC,aACZ/W,MAAK,SAAAgX,GAGJpS,IAAMqS,aAAaC,QAAQC,KAAI,SAAAzO,GAI7B,OAHIA,EAAO3D,MAAQ2D,EAAO3D,KAAKC,YAC7B0D,EAAO3D,KAAKC,UAAYgS,GAEnBI,QAAQC,QAAQ3O,MAEzB,EAAKxK,SAAS,CACZ2C,eAAe,OAKrB,EAAK3C,SAAS,CACZ2C,eAAe,S,+BAQrB,YAAoCqI,IAA7BzK,KAAKH,MAAMuC,eACa,OAA7BpC,KAAKH,MAAMuC,cACX,kBAAC,GAAD,CAAYA,cAAepC,KAAKH,MAAMuC,gBAEtC,yBAAK/D,UAAU,e,GAtCH6C,aCME2X,QACW,cAA7BC,OAAO3C,SAAS4C,UAEe,UAA7BD,OAAO3C,SAAS4C,UAEhBD,OAAO3C,SAAS4C,SAAS/D,MACvB,2DCZNgE,IAASd,OAAO,kBAAC,GAAD,MAAS9B,SAASC,eAAe,SD6H3C,kBAAmB4C,WACrBA,UAAUC,cAAcC,MAAM5X,MAAK,SAAA6X,GACjCA,EAAaC,iB,mBErInB3b,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.7774070d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.4beb4392.png\";","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Logo from \"./../../Assets/Logo.png\";\n// import firebase from 'firebase';\n// import firebase from \"./../../firebaseApp\";\n\nfunction HeaderLogin() {\n  // console.log(firebase.auth())\n  return (\n    <Navbar expand=\"lg\" style={{ borderBottom: \"solid 1px #cccbcb\" }}>\n      <Navbar.Brand href=\"/\">\n        <img\n          src={Logo}\n          className=\"d-inline-block align-top img-responsive\"\n          alt=\"React Bootstrap logo\"\n        />\n      </Navbar.Brand>\n      <Nav className=\"mr-auto\"></Nav>\n      <Nav justify>\n       \n      </Nav>\n    </Navbar>\n  );\n}\nexport default HeaderLogin;\n","import firebase from \"firebase\";\n// import \"firebase/auth\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAjGcGJftuOzKwdaniWMNm6rDQV0Tmv5P4\",\n    authDomain: \"lakshya-internal.firebaseapp.com\",\n    databaseURL: \"https://lakshya-internal.firebaseio.com\",\n    projectId: \"lakshya-internal\",\n    storageBucket: \"lakshya-internal.appspot.com\",\n    messagingSenderId: \"185421541535\",\n    appId: \"1:185421541535:web:22108ce8453e2d369832aa\"\n    };\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport LoginImage from \"./../../Assets/login.png\";\nimport Header from \"../Header/headerlogin\";\nimport { withRouter } from \"react-router-dom\";\nimport firebase from \"./../../firebaseApp.js\";\n\nimport \"./index.css\";\nclass LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = { validated: false };\n  }\n  Submit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n    this.props.handleSubmit();\n  };\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        <Form\n          noValidate\n          validated={this.state.validated}\n          onSubmit={this.Submit}\n        >\n          <Form.Group controlId=\"validationCustom01\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"name@example.com\"\n              value={this.props.email}\n              onChange={this.props.handleChange(\"email\")}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"validationCustom02\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              type=\"password\"\n              value={this.props.password}\n              onChange={this.props.handleChange(\"password\")}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"outline-primary loginButton\" style={{marginTop:'0.5em'}}>\n            Login\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      loading:false\n    };\n  }\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(authenticated => {\n      authenticated ? this.props.history.push(\"/\") : console.log('not authenticated');\n    });\n  }\n\n  handleSubmit = () => {\n    const { email, password } = this.state;\n    this.setState({ loading: 'Please wait ...' });\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user ,res)=> {\n        console.log('user and res',user,res);\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error: error ,loading: null});\n      });\n  };\n\n  handleChange = key => e => {\n    this.setState({ [key]: e.target.value });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Container fluid style={{ width: \"auto\", margin: \"1rem\" }}>\n          <Row>\n            <Col lg=\"8\">\n              <center style={{ fontWeight: \"500\", fontSize: \"18px\" }}>\n                Login to your account\n              </center>\n              <img\n                src={LoginImage}\n                className=\"rounded mx-auto d-block img-fluid\"\n                alt=\"Login\"\n              />\n            </Col>\n\n            <Col>\n              {this.state.error ? (\n                <Container>\n                  <div>\n                    <h5>{this.state.error.message}</h5>\n                  </div>\n                </Container>\n              ) : null}\n              <LoginForm\n                email={this.state.email}\n                password={this.state.password}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n              />\n              {this.state.loading ? (\n                <Container>\n                  <div>\n                    <h5>{this.state.loading}</h5>\n                  </div>\n                </Container>\n              ) : null}\n            </Col>\n            <Col lg=\"1\" />\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Logo from \"./../../Assets/Logo.png\";\n// import firebase from 'firebase';\nimport firebase from \"./../../firebaseApp\";\n\nfunction Header() {\n  // console.log(firebase.auth())\n  return (\n    <Navbar expand=\"lg\" style={{ borderBottom: \"solid 1px #cccbcb\" }}>\n      <Navbar.Brand href=\"/\">\n        <img\n          src={Logo}\n          className=\"d-inline-block align-top img-responsive\"\n          alt=\"React Bootstrap logo\"\n        />\n      </Navbar.Brand>\n      <Nav className=\"mr-auto\"></Nav>\n      <Nav justify>\n        <Nav.Link href=\"#\">Welcome User</Nav.Link>\n        <Nav.Link\n          eventKey={2}\n          onSelect={() => {\n            firebase\n              .auth()\n              .signOut()\n              .then(res => {\n                console.log(\"signout called\");\n              });\n          }}\n        >\n          Log out\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\nexport default Header;\n","let Base_url = \"http://api.frogbit.co/cd\";\nlet URL = {\n  fetchSubject: Base_url + \"/api/subjects/\",\n  fetchChapter: Base_url + \"/api/subject/sections/\",\n  fetchTopic: Base_url + \"/api/subject/topics/\",\n  fetchSubTopic: Base_url + \"/api/subject/subtopics/\",\n  createQuestion: Base_url + \"/api/create/a/question/\",\n  createQuestionNewVersion: Base_url + \"/api/add/new/question/version\",\n  searchquestion: Base_url + \"/api/question/list/\",\n  searchexam: Base_url + \"/api/test/list/\",\n  fetchExam: Base_url + \"/api/exams/\",\n  fetchSubjectForExam: Base_url + \"/api/exam/subject/mapping/\",\n  addnewExam:Base_url+'/api/add/new/test',\n  geteditques:Base_url+'/api/question/content/',\n  updateExistingQuestionVersion:Base_url+'/api/update/existing/question/version',\n  getexamcontent:Base_url+'/api/test/content/',\n  updatetest:Base_url+'/api/update/test'\n\n};\nexport default URL;\n","import React from \"react\";\nimport \"./diff.css\";\nexport default class Radio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coffeeTypes: [\"+\", \"++\", \"+++\"]\n    };\n  }\n  render() {\n    const options = this.state.coffeeTypes.map((loan, key) => {\n      const isCurrent = this.props.difficulty === loan;\n      return (\n        <div key={key} className=\"radioPad\">\n          <div>\n            <label\n              className={\n                isCurrent\n                  ? \"radioPad__wrapper radioPad__wrapper--selected\"\n                  : \"radioPad__wrapper\"\n              }\n            >\n              <input\n              \n                className=\"radioPad__radio\"\n                type=\"radio\"\n                name=\"coffeeTypes\"\n                // id={key}\n                value={loan}\n                onChange={this.props.handleDifficultyRadio}\n              />\n              {loan}\n            </label>\n          </div>\n        </div>\n      );\n    });\n    return (\n      <div className=\"container center\">\n        <div className=\"row\">{options}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport CKEditor from \"ckeditor4-react\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import MathType from \"@wiris/mathtype-ckeditor5/src/plugin\";\nimport axios from \"axios\";\nimport URL from \"../../Assets/url\";\nimport TagsInput from \"react-tagsinput\";\nimport Difficulty from \"./difficulty.js\";\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\nimport \"./index.css\";\n\nclass QuesEnglish extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      listOfTopic: [],\n      selectedTopicID: \"\",\n      listOfSubTopic: [],\n      selectedSubTopicID: \"\",\n      tags: [],\n      difficulty: \"\",\n      questionData: \"\",\n      explanationData: \"\",\n      listOfOptions: [\n        { name: \"Option A\", content: \"\", weightage: null },\n        { name: \"Option B\", content: \"\", weightage: null }\n      ],\n      letterchartcode: 67\n    };\n  }\n\n  addoptionfn = () => {\n    let currentCharCode = this.state.letterchartcode;\n    let name = \"Option \" + String.fromCharCode(currentCharCode);\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption.push({ name: name, content: \"\", weightage: null });\n    this.setState({\n      listOfOptions: currentArrayOfOption,\n      letterchartcode: currentCharCode + 1\n    });\n  };\n  deleteOption = index => {\n    let currentCharCode = this.state.letterchartcode;\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption.pop(index);\n    this.setState({\n      listOfOptions: currentArrayOfOption,\n      letterchartcode: currentCharCode - 1\n    });\n  };\n  handleDifficultyRadio = e => {\n    e.preventDefault();\n    this.setState({ difficulty: e.target.value });\n  };\n  handleChangeTags = tags => {\n    this.setState({ tags });\n  };\n  componentDidMount() {\n    console.log(\"as\");\n    axios({\n      method: \"POST\",\n      url: URL.fetchSubject + \"ENGLISH\",\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // console.log(res.data.data);\n        if (res.status === 200) {\n          this.setState(\n            {\n              listOfSubject: res.data.data.list,\n              selectedSubjectID:\n                res.data.data.list.length > 0\n                  ? res.data.data.list[0].subject.subjectId\n                  : \"\"\n            },\n            () => {\n              this.callApiForChapter();\n            }\n          );\n        } else {\n          alert(\"Unexpected code\");\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  callApiForChapter = () => {\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchChapter + this.state.selectedSubjectID + \"/ENGLISH\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfChapter: res.data.data.list,\n                selectedChapterID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectSection.sectionId\n                    : \"\"\n              },\n              () => {\n                this.callApiForTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForTopic = () => {\n    if (this.state.selectedChapterID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchTopic + this.state.selectedChapterID + \"/ENGLISH\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfTopic: res.data.data.list,\n                selectedTopicID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectTopic.topicId\n                    : \"\"\n              },\n              () => {\n                this.callApiForSubTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)chapterid is blank.API not called. checkchapter list\"\n      );\n      this.setState({\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForSubTopic = () => {\n    if (this.state.selectedTopicID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchSubTopic + this.state.selectedTopicID + \"/ENGLISH\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            this.setState({\n              listOfSubTopic: res.data.data.list,\n              selectedSubTopicID:\n                res.data.data.list.length > 0\n                  ? res.data.data.list[0].subjectSubtopic.subtopicId\n                  : \"\"\n            });\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"(English)topicid is blank.API not called. checktopic list\");\n      this.setState({ listOfSubTopic: [], selectedSubTopicID: \"\" });\n    }\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedSubjectID: this.state.listOfSubject[\n          e.target.options.selectedIndex\n        ].subject.subjectId\n      },\n      () => {\n        this.callApiForChapter();\n      }\n    );\n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {\n        this.callApiForTopic();\n      }\n    );\n  };\n  handleTopicChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedTopicID: this.state.listOfTopic[e.target.options.selectedIndex]\n          .subjectTopic.topicId\n      },\n      () => {\n        this.callApiForSubTopic();\n      }\n    );\n  };\n  handleSubTopicChange = e => {\n    e.preventDefault();\n    this.setState({\n      selectedSubTopicID: this.state.listOfSubTopic[\n        e.target.options.selectedIndex\n      ].subjectSubtopic.subtopicId\n    });\n  };\n  handleQuestionEditor = data => {\n    this.setState({ questionData: data });\n  };\n  handleExplanationEditor = data => {\n    this.setState({ explanationData: data });\n  };\n  handleOptioncontentchange = (index, data) => {\n    // let currentCharCode = this.state.letterchartcode;\n    // let name = \"Option \" + String.fromCharCode(currentCharCode);\n    console.log(index, data);\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption[index].content = data;\n    this.setState({\n      listOfOptions: currentArrayOfOption\n    });\n  };\n  handleOptionWeightageChange = (index, e) => {\n    e.preventDefault();\n    // console.log(typeof parseInt(e.target.value));\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption[index].weightage = parseInt(e.target.value);\n    this.setState({\n      listOfOptions: currentArrayOfOption\n    });\n  };\n  saveEnglishdata = () => {\n    let difficultyvalue;\n    switch (this.state.difficulty) {\n      case \"+\":\n        difficultyvalue = \"EASY\";\n        break;\n      case \"++\":\n        difficultyvalue = \"MILD\";\n        break;\n      case \"+++\":\n        difficultyvalue = \"ADVANCE\";\n        break;\n      default:\n        break;\n    }\n    axios({\n      method: \"POST\",\n      url:\n        this.props.questionId === \"\"\n          ? URL.createQuestion\n          : URL.createQuestionNewVersion,\n      data: {\n        authToken: \"string\",\n        difficulty: difficultyvalue,\n        questionId: this.props.questionId,\n        sectionId: this.state.selectedChapterID,\n        subjectId: this.state.selectedSubjectID,\n        subtopicId: this.state.selectedSubTopicID,\n        tags: this.state.tags,\n        topicId: this.state.selectedTopicID,\n        type: \"SINGLE_CHOICE\",\n        version: {\n          content: this.state.questionData,\n          language: \"ENGLISH\",\n          options: this.state.listOfOptions,\n          // questionVersionId: 0,\n          solution: this.state.explanationData\n        }\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.data.data);\n          //   this.setState({ activetab: \"2\" });\n          alert(\"Success:\", res.data.data);\n          this.props.handleChange(res.data.data.questionId);\n          this.props.handleSelect();\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  render() {\n    return (\n      <div style={{ padding: \"20px 0\", margin: \"0 1em\" }}>\n        <Row>\n          <Col lg=\"3\">\n            <div\n              style={{\n                width: \"auto\"\n                // height: \"0.5em\"\n              }}\n            ></div>\n            <LeftPanel\n              listOfSubject={this.state.listOfSubject}\n              listOfChapter={this.state.listOfChapter}\n              listOfTopic={this.state.listOfTopic}\n              listOfSubTopic={this.state.listOfSubTopic}\n              handleSubjectChange={this.handleSubjectChange}\n              handleChapterChange={this.handleChapterChange}\n              handleTopicChange={this.handleTopicChange}\n              handleSubTopicChange={this.handleSubTopicChange}\n              selectedSubjectID={this.state.selectedSubjectID}\n              selectedChapterID={this.state.selectedChapterID}\n              selectedTopicID={this.state.selectedTopicID}\n              selectedSubTopicID={this.state.selectedSubTopicID}\n              tags={this.state.tags}\n              handleChangeTags={this.handleChangeTags}\n              difficulty={this.state.difficulty}\n              handleDifficultyRadio={this.handleDifficultyRadio}\n            />\n          </Col>\n          <Col lg=\"1\"></Col>\n          <Col>\n            <div>\n              <RightpanelEnglish\n                handleQuestionEditor={this.handleQuestionEditor}\n                questionData={this.state.questionData}\n                handleExplanationEditor={this.handleExplanationEditor}\n                explanationData={this.state.explanationData}\n                listOfOptions={this.state.listOfOptions}\n                letterchartcode={this.state.letterchartcode}\n                handleOptioncontentchange={this.handleOptioncontentchange}\n                handleOptionWeightageChange={this.handleOptionWeightageChange}\n                addoptionfn={this.addoptionfn}\n                deleteOption={this.deleteOption}\n                saveEnglishdata={this.saveEnglishdata}\n              />\n            </div>\n          </Col>\n          <Col lg=\"1\"></Col>\n        </Row>\n      </div>\n    );\n  }\n}\nclass RightpanelEnglish extends Component {\n  render() {\n    // console.log(this.props.questionId);\n    return (\n      <Form>\n        <QuestionComp\n          // ClassicEditor={ClassicEditor}\n          handleQuestionEditor={this.props.handleQuestionEditor}\n          questionData={this.props.questionData}\n        />\n        {this.props.listOfOptions &&\n          this.props.listOfOptions.map((item, index) => {\n            return (\n              <React.Fragment key={index}>\n                <Form.Group as={Row} style={{ marginTop: \"2em\" }}>\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"600\" }}>\n                    {item.name}\n                  </Form.Label>\n                  <Col sm=\"2\">\n                    <Form.Control\n                      style={{ borderRadius: \"0\", background: \"lightgrey\" }}\n                      type=\"number\"\n                      value={item.weightage || 0}\n                      onChange={this.props.handleOptionWeightageChange.bind(\n                        this,\n                        index\n                      )}\n                      placeholder=\"weightage\"\n                    />\n                  </Col>\n                  {this.props.listOfOptions.length === index + 1 && (\n                    <Col>\n                      <Button\n                        style={{ float: \"right\", color: \"grey\" }}\n                        variant=\"link\"\n                        onClick={this.props.deleteOption.bind(this, index)}\n                      >\n                        X Delete\n                      </Button>\n                    </Col>\n                  )}\n                </Form.Group>\n                <div style={{ margin: \"0.5em 0\" }}>\n                  <CKEditor\n                    // config={{\n                    //   plugins: [MathType],\n                    //   toolbar: { items: [\"MathType\"] }\n                    // }}\n                    onBeforeLoad={CKEDITOR =>\n                      (CKEDITOR.disableAutoInline = true)\n                    }\n                    config={{\n                      height: 80\n                      // placeholder: \"Test description and instruction in English\"\n                    }}\n                    data={item.content}\n                    onChange={event => {\n                      const data = event.editor.getData();\n                      this.props.handleOptioncontentchange(index, data);\n                    }}\n                  />\n                </div>\n              </React.Fragment>\n            );\n          })}\n        <Row>\n          <Col lg=\"10\"></Col>\n          <Col>\n            <Button\n              onClick={this.props.addoptionfn}\n              varirant=\"info\"\n              style={{\n                fontSize: \"0.8em\",\n                fontWeight: \"700\",\n                background: \"#FF8976\",\n                borderColor: \"#FF8976\",\n                borderRadius: \"0\",\n                float: \"right\"\n              }}\n            >\n              {\" \"}\n              + Add Option\n            </Button>\n          </Col>\n        </Row>\n        <div style={{ margin: \"2em 0\" }}>\n          <ExplanationComp\n            handleExplanationEditor={this.props.handleExplanationEditor}\n            explanationData={this.props.explanationData}\n          />\n        </div>\n\n        <div style={{ margin: \"1em 0\", textAlign: \"center\" }}>\n          <Button\n            style={{\n              borderRadius: \"0\",\n              background: \"#3F5FBB\",\n              borderColor: \"#3F5FBB\",\n              padding: \"0.6em 2.5em\",\n              fontSize: \"1.1em\",\n              fontWeight: \"600\"\n            }}\n            onClick={this.props.saveEnglishdata}\n          >\n            {this.props.questionId === \"\" || this.props.questionId === undefined\n              ? \"Save & move to Hindi section\"\n              : \"Save & finish\"}\n          </Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nclass LeftPanel extends Component {\n  render() {\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    let currentvaluetopic = this.props.listOfTopic.filter(\n      item => item.subjectTopic.topicId === this.props.selectedTopicID\n    )[0];\n    currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n      item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    )[0];\n    currentvaluesubtopic = currentvaluesubtopic\n      ? currentvaluesubtopic.title\n      : \"\";\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect2\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect3\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluetopic}\n            onChange={this.props.handleTopicChange}\n          >\n            {this.props.listOfTopic &&\n              this.props.listOfTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect4\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Sub-topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluesubtopic}\n            onChange={this.props.handleSubTopicChange}\n          >\n            {this.props.listOfSubTopic &&\n              this.props.listOfSubTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Tags\n          </Form.Label>\n          <TagsInput\n            value={this.props.tags}\n            onChange={this.props.handleChangeTags}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Difficulty\n          </Form.Label>\n          <br />\n          <Difficulty\n            difficulty={this.props.difficulty}\n            handleDifficultyRadio={this.props.handleDifficultyRadio}\n          />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nfunction QuestionComp({ questionData, handleQuestionEditor }) {\n  return (\n    <Form.Group controlId=\"exampleForm.EControlInput3\">\n      <Form.Label\n        style={{\n          fontWeight: \"600\"\n        }}\n      >\n        Question\n      </Form.Label>\n      <div\n        style={{\n          margin: \"0.5em 0\"\n        }}\n      >\n        <CKEditor\n          onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n          config={{\n            height: 80\n            // placeholder: \"Test description and instruction in English\"\n          }}\n          data={questionData}\n          // onInit={editor => {\n          //   // You can store the \"editor\" and use when it is needed.\n          //   // console.log(\"Editor is ready to use!\", editor);\n          // }}\n          onChange={(event, editor) => {\n            const data = event.editor.getData();\n            // console.log(data)\n            handleQuestionEditor(data);\n            // console.log({\n            //   event,\n            //   editor,\n            //   data\n            // });\n          }}\n          // onBlur={(event, editor) => {\n          //   console.log(\"Blur.\", editor);\n          // }}\n          // onFocus={(event, editor) => {\n          //   console.log(\"Focus.\", editor);\n          // }}\n        />\n      </div>\n    </Form.Group>\n  );\n}\nfunction ExplanationComp({ explanationData, handleExplanationEditor }) {\n  return (\n    <Form.Group controlId=\"exampleForm.EControlInput1\">\n      <Form.Label\n        style={{\n          fontWeight: \"600\"\n        }}\n      >\n        Explanation\n      </Form.Label>\n      <div\n        style={{\n          margin: \"0.5em 0\"\n        }}\n      >\n        <CKEditor\n          onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n          data={explanationData}\n          onInit={editor => {\n            // You can store the \"editor\" and use when it is needed.\n            // console.log(\"Editor is ready to use!\", editor);\n          }}\n          onChange={(event, editor) => {\n            const data = event.editor.getData();\n            handleExplanationEditor(data);\n          }}\n          // onBlur={(event, editor) => {\n          //   console.log(\"Blur.\", editor);\n          // }}\n          // onFocus={(event, editor) => {\n          //   console.log(\"Focus.\", editor);\n          // }}\n        />\n      </div>\n    </Form.Group>\n  );\n}\nexport default QuesEnglish;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CKEditor from \"ckeditor4-react\";\nimport axios from \"axios\";\nimport URL from \"../../Assets/url\";\nimport TagsInput from \"react-tagsinput\";\nimport Difficulty from \"./difficulty.js\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport \"./index.css\";\n\nclass QuesHindi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      listOfTopic: [],\n      selectedTopicID: \"\",\n      listOfSubTopic: [],\n      selectedSubTopicID: \"\",\n      tags: [],\n      difficulty: \"\",\n      questionData: \"\",\n      explanationData: \"\",\n      listOfOptions: [\n        { name: \"Option A\", content: \"\", weightage: null },\n        { name: \"Option B\", content: \"\", weightage: null }\n      ],\n      letterchartcode: 67\n    };\n  }\n  addoptionfn = () => {\n    let currentCharCode = this.state.letterchartcode;\n    let name = \"Option \" + String.fromCharCode(currentCharCode);\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption.push({ name: name, content: \"\", weightage: null });\n    this.setState({\n      listOfOptions: currentArrayOfOption,\n      letterchartcode: currentCharCode + 1\n    });\n  };\n  deleteOption = index => {\n    let currentCharCode = this.state.letterchartcode;\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption.pop(index);\n    this.setState({\n      listOfOptions: currentArrayOfOption,\n      letterchartcode: currentCharCode - 1\n    });\n  };\n  handleDifficultyRadio = e => {\n    e.preventDefault();\n    this.setState({ difficulty: e.target.value });\n  };\n  handleChangeTags = tags => {\n    this.setState({ tags });\n  };\n  componentDidMount() {\n    axios({\n      method: \"POST\",\n      url: URL.fetchSubject + \"HINDI\",\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // console.log(res.data.data);\n        if (res.status === 200) {\n          this.setState(\n            {\n              listOfSubject: res.data.data.list,\n              selectedSubjectID:\n                res.data.data.list.length > 0\n                  ? res.data.data.list[0].subject.subjectId\n                  : \"\"\n            },\n            () => {\n              this.callApiForChapter();\n            }\n          );\n        } else {\n          alert(\"Unexpected code\");\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  callApiForChapter = () => {\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchChapter + this.state.selectedSubjectID + \"/HINDI\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfChapter: res.data.data.list,\n                selectedChapterID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectSection.sectionId\n                    : \"\"\n              },\n              () => {\n                this.callApiForTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(Hindi)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForTopic = () => {\n    if (this.state.selectedChapterID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchTopic + this.state.selectedChapterID + \"/HINDI\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfTopic: res.data.data.list,\n                selectedTopicID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectTopic.topicId\n                    : \"\"\n              },\n              () => {\n                this.callApiForSubTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(Hindi)chapterid is blank.API not called. checkchapter list\"\n      );\n      this.setState({\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForSubTopic = () => {\n    if (this.state.selectedTopicID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchSubTopic + this.state.selectedTopicID + \"/HINDI\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            this.setState({\n              listOfSubTopic: res.data.data.list,\n              selectedSubTopicID:\n                res.data.data.list.length > 0\n                  ? res.data.data.list[0].subjectSubtopic.subtopicId\n                  : \"\"\n            });\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"(Hindi)topicid is blank.API not called. checktopic list\");\n      this.setState({ listOfSubTopic: [], selectedSubTopicID: \"\" });\n    }\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedSubjectID: this.state.listOfSubject[\n          e.target.options.selectedIndex\n        ].subject.subjectId\n      },\n      () => {\n        this.callApiForChapter();\n      }\n    );\n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {\n        this.callApiForTopic();\n      }\n    );\n  };\n  handleTopicChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedTopicID: this.state.listOfTopic[e.target.options.selectedIndex]\n          .subjectTopic.topicId\n      },\n      () => {\n        this.callApiForSubTopic();\n      }\n    );\n  };\n  handleSubTopicChange = e => {\n    e.preventDefault();\n    this.setState({\n      selectedSubTopicID: this.state.listOfSubTopic[\n        e.target.options.selectedIndex\n      ].subjectSubtopic.subtopicId\n    });\n  };\n  handleQuestionEditor = data => {\n    this.setState({ questionData: data });\n  };\n  handleExplanationEditor = data => {\n    this.setState({ explanationData: data });\n  };\n  handleOptioncontentchange = (index, data) => {\n    // let currentCharCode = this.state.letterchartcode;\n    // let name = \"Option \" + String.fromCharCode(currentCharCode);\n    // console.log(index, data);\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption[index].content = data;\n    this.setState({\n      listOfOptions: currentArrayOfOption\n    });\n  };\n  handleOptionWeightageChange = (index, e) => {\n    e.preventDefault();\n    // console.log(typeof parseInt(e.target.value));\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption[index].weightage = parseInt(e.target.value);\n    this.setState({\n      listOfOptions: currentArrayOfOption\n    });\n  };\n  saveHindidata = () => {\n    console.log(\"questionId:\", this.props.questionId);\n    let difficultyvalue;\n    switch (this.state.difficulty) {\n      case \"+\":\n        difficultyvalue = \"EASY\";\n        break;\n      case \"++\":\n        difficultyvalue = \"MILD\";\n        break;\n      case \"+++\":\n        difficultyvalue = \"ADVANCE\";\n        break;\n      default:\n        break;\n    }\n    axios({\n      method: \"POST\",\n      url:\n        this.props.questionId === \"\"\n          ? URL.createQuestion\n          : URL.createQuestionNewVersion,\n      data: {\n        authToken: \"string\",\n        difficulty: difficultyvalue,\n        questionId: this.props.questionId,\n        sectionId: this.state.selectedChapterID,\n        subjectId: this.state.selectedSubjectID,\n        subtopicId: this.state.selectedSubTopicID,\n        tags: this.state.tags,\n        topicId: this.state.selectedTopicID,\n        type: \"SINGLE_CHOICE\",\n        version: {\n          content: this.state.questionData,\n          language: \"HINDI\",\n          options: this.state.listOfOptions,\n          // questionVersionId: 0,\n          solution: this.state.explanationData\n        }\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(res.data.data);\n        if (res.status === 200) {\n          alert('Success:',res.data.data)\n          if (this.props.questionId === \"\") {\n            \n            this.props.handleChange.bind(this, res.data.data.questionId);\n            this.props.handleSelect();\n          }\n        } else {\n          console.log(\"questionId exist\");\n        }\n        // if (res.status === 200) {\n\n        // }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  render() {\n    return (\n      <div style={{ padding: \"20px 0\", margin: \"0 1em\" }}>\n        <Row>\n          <Col lg=\"3\">\n            <div\n              style={{\n                width: \"auto\",\n                // height: \"0.5em\"\n              }}\n            ></div>\n            <LeftPanel\n              listOfSubject={this.state.listOfSubject}\n              listOfChapter={this.state.listOfChapter}\n              listOfTopic={this.state.listOfTopic}\n              listOfSubTopic={this.state.listOfSubTopic}\n              handleSubjectChange={this.handleSubjectChange}\n              handleChapterChange={this.handleChapterChange}\n              handleTopicChange={this.handleTopicChange}\n              handleSubTopicChange={this.handleSubTopicChange}\n              selectedSubjectID={this.state.selectedSubjectID}\n              selectedChapterID={this.state.selectedChapterID}\n              selectedTopicID={this.state.selectedTopicID}\n              selectedSubTopicID={this.state.selectedSubTopicID}\n              tags={this.state.tags}\n              handleChangeTags={this.handleChangeTags}\n              difficulty={this.state.difficulty}\n              handleDifficultyRadio={this.handleDifficultyRadio}\n            />\n          </Col>\n          <Col lg=\"1\"></Col>\n          <Col>\n            <div>\n              <RightpanelHindi\n                handleQuestionEditor={this.handleQuestionEditor}\n                questionData={this.state.questionData}\n                handleExplanationEditor={this.handleExplanationEditor}\n                explanationData={this.state.explanationData}\n                listOfOptions={this.state.listOfOptions}\n                letterchartcode={this.state.letterchartcode}\n                handleOptioncontentchange={this.handleOptioncontentchange}\n                handleOptionWeightageChange={this.handleOptionWeightageChange}\n                addoptionfn={this.addoptionfn}\n                deleteOption={this.deleteOption}\n                saveHindidata={this.saveHindidata}\n              />\n            </div>\n          </Col>\n          <Col lg=\"1\"></Col>\n        </Row>\n      </div>\n    );\n  }\n}\nclass RightpanelHindi extends Component {\n  render() {\n    return (\n      <Form>\n        <QuestionComp\n          // ClassicEditor={ClassicEditor}\n          handleQuestionEditor={this.props.handleQuestionEditor}\n          questionData={this.props.questionData}\n        />\n        {this.props.listOfOptions &&\n          this.props.listOfOptions.map((item, index) => {\n            return (\n              <React.Fragment key={index}>\n                <Form.Group as={Row} style={{ marginTop: \"2em\" }}>\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"600\" }}>\n                    {item.name}\n                  </Form.Label>\n                  <Col sm=\"2\">\n                    <Form.Control\n                      style={{ borderRadius: \"0\", background: \"lightgrey\" }}\n                      type=\"number\"\n                      value={item.weightage || 0}\n                      onChange={this.props.handleOptionWeightageChange.bind(\n                        this,\n                        index\n                      )}\n                      placeholder=\"weightage\"\n                    />\n                  </Col>\n                  {this.props.listOfOptions.length === index + 1 && (\n                    <Col>\n                      <Button\n                        style={{ float: \"right\", color: \"grey\" }}\n                        variant=\"link\"\n                        onClick={this.props.deleteOption.bind(this, index)}\n                      >\n                        X Delete\n                      </Button>\n                    </Col>\n                  )}\n                </Form.Group>\n                <div style={{ margin: \"0.5em 0\" }}>\n                  <CKEditor\n                    onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n                    data={item.content}\n                    onChange={(event) => {\n                      const data = event.editor.getData();\n                      this.props.handleOptioncontentchange(index, data);\n                    }}\n                  />\n                </div>\n              </React.Fragment>\n            );\n          })}\n        <Row>\n          <Col lg=\"10\"></Col>\n          <Col>\n            <Button\n              onClick={this.props.addoptionfn}\n              varirant=\"info\"\n              style={{\n                fontSize: \"0.8em\",\n                fontWeight: \"700\",\n                background: \"#FF8976\",\n                borderColor: \"#FF8976\",\n                borderRadius: \"0\",\n                float: \"right\"\n              }}\n            >\n              {\" \"}\n              + Add Option\n            </Button>\n          </Col>\n        </Row>\n        <div style={{ margin: \"2em 0\" }}>\n          <ExplanationComp\n            handleExplanationEditor={this.props.handleExplanationEditor}\n            explanationData={this.props.explanationData}\n          />\n        </div>\n\n        <div style={{ margin: \"1em 0\", textAlign: \"center\" }}>\n          <Button\n            style={{\n              borderRadius: \"0\",\n              background: \"#3F5FBB\",\n              borderColor: \"#3F5FBB\",\n              padding: \"0.6em 2.5em\",\n              fontSize: \"1.1em\",\n              fontWeight: \"600\"\n            }}\n            onClick={this.props.saveHindidata}\n          >\n            {this.props.questionId === \"\" || this.props.questionId === undefined\n              ? \"Save & move to English section\"\n              : \"Save & finish\"}\n          </Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nclass LeftPanel extends Component {\n  render() {\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    let currentvaluetopic = this.props.listOfTopic.filter(\n      item => item.subjectTopic.topicId === this.props.selectedTopicID\n    )[0];\n    currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n      item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    )[0];\n    currentvaluesubtopic = currentvaluesubtopic\n      ? currentvaluesubtopic.title\n      : \"\";\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect11\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect22\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect33\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluetopic}\n            onChange={this.props.handleTopicChange}\n          >\n            {this.props.listOfTopic &&\n              this.props.listOfTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect44\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Sub-topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluesubtopic}\n            onChange={this.props.handleSubTopicChange}\n          >\n            {this.props.listOfSubTopic &&\n              this.props.listOfSubTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlInput11\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Tags\n          </Form.Label>\n          <TagsInput\n            value={this.props.tags}\n            onChange={this.props.handleChangeTags}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea11\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Difficulty\n          </Form.Label>\n          <br />\n          <Difficulty\n            difficulty={this.props.difficulty}\n            handleDifficultyRadio={this.props.handleDifficultyRadio}\n          />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nfunction QuestionComp({ questionData, handleQuestionEditor }) {\n  return (\n    <Form.Group controlId=\"exampleForm.EControlInput33\">\n      <Form.Label\n        style={{\n          fontWeight: \"600\"\n        }}\n      >\n        Question\n      </Form.Label>\n      <div\n        style={{\n          margin: \"0.5em 0\"\n        }}\n      >\n        <CKEditor\n          onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n          data={questionData}\n          // onInit={editor => {\n          //   // You can store the \"editor\" and use when it is needed.\n          //   // console.log(\"Editor is ready to use!\", editor);\n          // }}\n          onChange={(event) => {\n            const data = event.editor.getData();\n            // console.log(data)\n            handleQuestionEditor(data);\n            // console.log({\n            //   event,\n            //   editor,\n            //   data\n            // });\n          }}\n          // onBlur={(event, editor) => {\n          //   console.log(\"Blur.\", editor);\n          // }}\n          // onFocus={(event, editor) => {\n          //   console.log(\"Focus.\", editor);\n          // }}\n        />\n      </div>\n    </Form.Group>\n  );\n}\nfunction ExplanationComp({ explanationData, handleExplanationEditor }) {\n  return (\n    <Form.Group controlId=\"exampleForm.EControlInput11\">\n      <Form.Label\n        style={{\n          fontWeight: \"600\"\n        }}\n      >\n        Explanation\n      </Form.Label>\n      <div\n        style={{\n          margin: \"0.5em 0\"\n        }}\n      >\n        <CKEditor\n          onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n          data={explanationData}\n          onInit={editor => {\n            // You can store the \"editor\" and use when it is needed.\n            // console.log(\"Editor is ready to use!\", editor);\n          }}\n          onChange={(event, editor) => {\n            const data = event.editor.getData();\n            handleExplanationEditor(data);\n          }}\n          // onBlur={(event, editor) => {\n          //   console.log(\"Blur.\", editor);\n          // }}\n          // onFocus={(event, editor) => {\n          //   console.log(\"Focus.\", editor);\n          // }}\n        />\n      </div>\n    </Form.Group>\n  );\n}\nexport default QuesHindi;\n","import React, { Component } from \"react\";\nimport { Container, Button, Tabs, Tab } from \"react-bootstrap\";\nimport Header from \"../Header/index\";\nimport Back from \"@material-ui/icons/ArrowBack\";\nimport { styled } from \"@material-ui/styles\"; // If using WebPack and style-loader.\nimport \"./index.css\";\nimport EnglishHQuesTab from \"./QuesEnglish.js\";\nimport HindiQuesTab from \"./QuesHindi.js\";\nimport { Link } from \"react-router-dom\";\n\nconst MyBack = styled(Back)({\n  color: \"dimgrey\",\n  marginTop: \"-0.2em\",\n  width: \"1em\"\n});\nclass Ques extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionId: \"\",\n      activetab: \"1\"\n    };\n  }\n  handleSelect = () => {\n    let activetab = this.state.activetab;\n    if (activetab === \"1\") {\n      this.setState({ activetab: \"2\" });\n    } else {\n      this.setState({ activetab: \"1\" });\n    }\n  };\n  handleChange = data => {\n    console.log(\"Id from english response\", data);\n    this.setState({ questionId: data });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div\n          style={{\n            boxShadow: \"0px 3px 5px lightgrey\",\n            width: \"auto\",\n            height: \"4.5em\",\n            padding: \"1em 3em\"\n          }}\n        >\n          <Link to=\"/\" target=\"_self\">\n            <Button\n              variant=\"light\"\n              style={{ background: \"transparent\", border: \"transparent\" }}\n            >\n              <MyBack />\n              <span\n                style={{\n                  marginLeft: \"1em\",\n                  fontSize: \"1.2em\",\n                  color: \"dimgrey\"\n                }}\n              >\n                Back to dashboard\n              </span>\n            </Button>\n          </Link>\n        </div>\n        <Container\n          fluid\n          style={{\n            width: \"auto\",\n            background: \"#EEEEEE\",\n            padding: \"0.5em 1.5em\"\n          }}\n        >\n          <Tabs\n            className=\"myClass \"\n            variant=\"pill\"\n            activeKey={this.state.activetab}\n            onSelect={this.handleSelect}\n          >\n            <Tab eventKey={1} title=\"English\">\n              <EnglishHQuesTab\n                questionId={this.state.questionId}\n                handleChange={this.handleChange}\n                handleSelect={this.handleSelect}\n              />\n            </Tab>\n            <Tab eventKey={2} title=\"Hindi\">\n              <HindiQuesTab\n                questionId={this.state.questionId}\n                handleChange={this.handleChange}\n                handleSelect={this.handleSelect}\n              />\n            </Tab>\n          </Tabs>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default Ques;\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n// import Difficulty from '../Ques/difficulty'\n// import TagsInput from \"react-tagsinput\";\n\nclass LeftPanelQAtab extends Component {\n  render() {\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    // console.log(currentvaluesubject)\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n      \n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    let currentvaluetopic = this.props.listOfTopic.filter(\n      item => item.subjectTopic.topicId === this.props.selectedTopicID\n    )[0];\n    currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n      item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    )[0];\n    currentvaluesubtopic = currentvaluesubtopic\n      ? currentvaluesubtopic.title\n      : \"\";\n\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect0\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Language\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleLanguageChange.bind(this)}\n            value={this.props.selectedlanguage}\n          >\n            {this.props.listOfLanguage &&\n              this.props.listOfLanguage.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange.bind(this)}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n              <option key='' value=\"\">Select</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect2\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect3\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluetopic}\n            onChange={this.props.handleTopicChange}\n          >\n            {this.props.listOfTopic &&\n              this.props.listOfTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect4\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Sub-topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluesubtopic}\n            onChange={this.props.handleSubTopicChange}\n          >\n            {this.props.listOfSubTopic &&\n              this.props.listOfSubTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        {/* <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Tags\n          </Form.Label>\n          <TagsInput\n            value={this.props.tags}\n            onChange={this.props.handleChangeTags}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Difficulty\n          </Form.Label>\n          <br />\n          <Difficulty\n            difficulty={this.props.difficulty}\n            handleDifficultyRadio={this.props.handleDifficultyRadio}\n          />\n        </Form.Group> */}\n        <>\n          <Button\n            size=\"sm\"\n            onClick={this.props.handlesearchWithFilter}\n            style={{\n              borderRadius: \"0\",\n              background: \"#419ABB\",\n              borderColor: \"transparent\"\n            }}\n          >\n            Search with filters\n          </Button>\n          {this.props.searchResultListLength > 0 && (\n            <Button\n              size=\"sm\"\n              onClick={this.props.clearSearchFromFilters}\n              style={{\n                marginLeft: \"1em\",\n                borderRadius: \"0\",\n                background: \"dimgrey\",\n                borderColor: \"transparent\"\n              }}\n            >\n              Clear Search\n            </Button>\n          )}\n        </>\n      </Form>\n    );\n  }\n}\n\nexport default LeftPanelQAtab;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Form, Card } from \"react-bootstrap\";\nimport Bucket from \"@material-ui/icons/Https\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport View from \"@material-ui/icons/Visibility\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport LeftPanelQuestion from \"./leftpanelQAtab.js\";\nimport URL from \"../../Assets/url\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { withRouter } from \"react-router-dom\";\n\nclass QAtab extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      listOfTopic: [],\n      selectedTopicID: \"\",\n      listOfSubTopic: [],\n      selectedSubTopicID: \"\",\n      selectedLanguage: \"ENGLISH\",\n      listOfLanguage: [\"ENGLISH\", \"HINDI\"],\n      searchbox: \"\",\n      searchResultList: [],\n      listOfselectedPreview: [],\n      isLoading: false,\n      listOfsearchselected: [],\n      searchSelectAll: false\n    };\n  }\n  handleAddToBucket = () => {\n    let tempsearchlistselected = this.state.listOfsearchselected.filter(\n      item => item.status === true\n    );\n    tempsearchlistselected.map( item => {\n      console.log(item);\n      this.onAddpreviewdata(item.id);\n    });\n  };\n  handleSelectAllCheck = e => {\n    if (e.target.checked) {\n      let tempsearchlist = this.state.listOfsearchselected.map(item => {\n        item.status = true;\n        return item;\n      });\n      this.setState({\n        searchSelectAll: e.target.checked,\n        listOfsearchselected: tempsearchlist\n      });\n    } else {\n      let tempsearchlist = this.state.listOfsearchselected.map(item => {\n        item.status = false;\n        return item;\n      });\n      this.setState({\n        searchSelectAll: e.target.checked,\n        listOfsearchselected: tempsearchlist\n      });\n    }\n  };\n\n  OnPreviewClick = () => {\n    localStorage.setItem(\n      \"Previewdata\",\n      JSON.stringify(this.state.listOfselectedPreview)\n    );\n    localStorage.setItem(\"previewLanguage\", this.state.selectedLanguage);\n    this.props.history.push({\n      pathname: \"/quespreview\",\n      state: {\n        data: this.state.listOfselectedPreview\n      }\n    });\n  };\n\n  onAddpreviewdata = id => {\n    this.setState({ isLoading: true }, () => {\n      let filterchecktemp = this.state.listOfselectedPreview.filter(\n        item => item.questionId === id\n      );\n      if (filterchecktemp.length > 0) {\n        // console.log('>0')\n        let templist = this.state.listOfselectedPreview;\n        templist = templist.filter(obj => obj.questionId !== id);\n        console.log(templist)\n        this.setState(\n          {\n            listOfselectedPreview: templist,\n            isLoading: false\n          },\n          () => {\n            localStorage.setItem(\"Previewdata\", JSON.stringify(templist));\n          }\n        );\n      } else {\n        // console.log('<')\n        axios({\n          method: \"POST\",\n          url: URL.geteditques + id,\n          data: { authToken: \"string\" },\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n          .then(res => {\n            if (res.status === 200) {\n              let temppreviewlist = this.state.listOfselectedPreview;\n              temppreviewlist.push(res.data.data.question);\n              // let tempsearchlist = this.state.listOfsearchselected;\n              // tempsearchlist[index].status = !tempsearchlist[index].status;\n              this.setState(\n                {\n                  listOfselectedPreview: temppreviewlist,\n                  // listOfsearchselected:tempsearchlist,\n                  isLoading: false\n                },\n                () => {\n                  localStorage.setItem(\"Previewdata\", JSON.stringify(temppreviewlist));\n                }\n              );\n            } else {\n              this.setState({ isLoading: false }, () => {\n                alert(\"Data not found\");\n              });\n            }\n          })\n          .catch(e => {\n            this.setState({ isLoading: false }, () => {\n              alert(\"Error found\");\n            });\n          });\n      }\n    });\n  };\n  handleSearchboxChange = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    this.setState({ searchbox: e.target.value });\n    if (e.target.value !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.searchquestion + \"1\",\n        data: {\n          authToken: \"string\",\n          language: this.state.selectedLanguage,\n          questionId: e.target.value,\n          sectionId: this.state.selectedChapterID?this.state.selectedChapterID:null,\n          subjectId: this.state.selectedSubjectID?this.state.selectedSubjectID:null,\n          subtopicId: this.state.selectedSubTopicID?this.state.selectedSubTopicID:null,\n          topicId: this.state.selectedTopicID?this.state.selectedTopicID:null\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        // console.log(res.data.data.list);\n        if (res.status === 200) {\n          let templist = res.data.data.list.map(item => {\n            let filtertemplist = this.state.listOfselectedPreview.filter(\n              obj => obj.questionId === item.questionId\n            );\n            if (filtertemplist.length > 0) {\n              return { id: item.questionId, status: true };\n            } else {\n              return { id: item.questionId, status: false };\n            }\n          });\n          // console.log(templist);\n          this.setState({\n            searchResultList: res.data.data.list,\n            listOfsearchselected: templist\n          });\n        }\n      });\n    } else {\n      this.setState({ searchResultList: [], listOfsearchselected: [] });\n    }\n  };\n  handlesearchWithFilter = () => {\n    axios({\n      method: \"POST\",\n      url: URL.searchquestion + \"1\",\n      data: {\n        authToken: \"string\",\n        language: this.state.selectedLanguage,\n        questionId: this.state.selected,\n        sectionId: this.state.selectedChapterID,\n        subjectId: this.state.selectedSubjectID,\n        subtopicId: this.state.selectedSubTopicID,\n        topicId: this.state.selectedTopicID\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      // console.log(res.data.data.list);\n      if (res.status === 200) {\n        let templist = res.data.data.list.map(item => {\n          let filtertemplist = this.state.listOfselectedPreview.filter(\n            obj => obj.questionId === item.questionId\n          );\n          if (filtertemplist.length > 0) {\n            return { id: item.questionId, status: true };\n          } else {\n            return { id: item.questionId, status: false };\n          }\n        });\n        // console.log(templist);\n        this.setState({\n          searchResultList: res.data.data.list,\n          listOfsearchselected: templist\n        });\n      }\n    });\n  };\n  clearSearchFromFilters = () => {\n    this.setState({\n      // searchResultList: [],\n      // listOfsearchselected: [],\n      searchbox: \"\",\n      listOfChapter:[],\n      selectedChapterID:\"\",\n      // listOfSubject:[],\n      selectedSubjectID:'',\n      listOfTopic:[],\n      selectedTopicID:'',\n      listOfSubTopic:[],\n      selectedSubTopicID:''\n    },()=>{this.handlesearchWithFilter();});\n\n  };\n  handleLanguageChange = e => {\n    e.preventDefault();\n    this.setState({ selectedLanguage: e.target.value }, () => {\n      this.componentDidMount();\n    });\n  };\n  componentDidMount() {\n    let templistOfselectedPreview =\n      localStorage.getItem(\"Previewdata\") !== null &&\n      localStorage.getItem(\"Previewdata\") !== \"\"\n        ? JSON.parse(localStorage.getItem(\"Previewdata\"))\n        : [];\n\n    this.setState(\n      { isLoading: false, listOfselectedPreview: templistOfselectedPreview },\n      () => {\n        axios({\n          method: \"POST\",\n          url: URL.fetchSubject + this.state.selectedLanguage,\n          data: { authToken: \"string\" },\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n          .then(res => {\n            // console.log(res.data.data);\n            if (res.status === 200) {\n              this.setState(\n                {\n                  listOfSubject: res.data.data.list,\n                  selectedSubjectID:\"\",\n                  isLoading: false\n                },\n                () => {\n                  axios({\n                    method: \"POST\",\n                    url: URL.searchquestion + \"1\",\n                    data: {\n                      authToken: \"string\",\n                      language: this.state.selectedLanguage,\n                      questionId: null,\n                      sectionId: null,\n                      subjectId: null,\n                      subtopicId: null,\n                      topicId: null\n                    },\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    }\n                  }).then(res => {\n                    // console.log(res.data.data.list);\n                    if (res.status === 200) {\n                      let templist = res.data.data.list.map(item => {\n                        let filtertemplist = this.state.listOfselectedPreview.filter(\n                          obj => obj.questionId === item.questionId\n                        );\n                        if (filtertemplist.length > 0) {\n                          return { id: item.questionId, status: true };\n                        } else {\n                          return { id: item.questionId, status: false };\n                        }\n                      });\n                      // console.log(templist);\n                      this.setState({\n                        searchResultList: res.data.data.list,\n                        listOfsearchselected: templist\n                      });\n                    }\n                  })\n                  .catch((e)=>{\n                    alert(e);\n                  })\n                }\n              );\n            } else {\n              alert(\"Unexpected code\");\n              this.setState({ isLoading: false });\n            }\n          })\n          .catch(e => {\n            console.log(e);\n            alert(e);\n            this.setState({ isLoading: false });\n          });\n      }\n    );\n  }\n  callApiForChapter = () => {\n    // console.log(this.state.selectedSubjectID);\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchChapter +\n          this.state.selectedSubjectID +\n          \"/\" +\n          this.state.selectedLanguage,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfChapter: res.data.data.list,\n                selectedChapterID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectSection.sectionId\n                    : \"\"\n              },\n              () => {\n                this.callApiForTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n          alert(e);\n          this.setState({ isLoading: false });\n        });\n    } else {\n      console.log(\n        \"(English)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\",\n        isLoading: false\n      });\n    }\n  };\n  callApiForTopic = () => {\n    if (this.state.selectedChapterID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchTopic +\n          this.state.selectedChapterID +\n          \"/\" +\n          this.state.selectedLanguage,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfTopic: res.data.data.list,\n                selectedTopicID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectTopic.topicId\n                    : \"\"\n              },\n              () => {\n                this.callApiForSubTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n          alert(e);\n          this.setState({ isLoading: false });\n        });\n    } else {\n      console.log(\n        \"(English)chapterid is blank.API not called. checkchapter list\"\n      );\n      this.setState({\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForSubTopic = () => {\n    if (this.state.selectedTopicID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchSubTopic +\n          this.state.selectedTopicID +\n          \"/\" +\n          this.state.selectedLanguage,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            this.setState({\n              listOfSubTopic: res.data.data.list,\n              selectedSubTopicID:\n                res.data.data.list.length > 0\n                  ? res.data.data.list[0].subjectSubtopic.subtopicId\n                  : \"\"\n            });\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n          alert(e);\n          this.setState({ isLoading: false });\n        });\n    } else {\n      console.log(\"(English)topicid is blank.API not called. checktopic list\");\n      this.setState({ listOfSubTopic: [], selectedSubTopicID: \"\" });\n    }\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n    // console.log(e.target.value)\n    if (e.target.value === \"\") {\n      this.setState(\n        {\n          selectedSubjectID: ''\n        },\n        () => {\n          this.callApiForChapter();\n        }\n      );\n    }else{\n      this.setState(\n        {\n          selectedSubjectID: this.state.listOfSubject[\n            e.target.options.selectedIndex\n          ].subject.subjectId\n        },\n        () => {\n          this.callApiForChapter();\n        }\n      );\n    }\n    \n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {\n        this.callApiForTopic();\n      }\n    );\n  };\n  handleTopicChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedTopicID: this.state.listOfTopic[e.target.options.selectedIndex]\n          .subjectTopic.topicId\n      },\n      () => {\n        this.callApiForSubTopic();\n      }\n    );\n  };\n  handleSubTopicChange = e => {\n    e.preventDefault();\n    this.setState({\n      selectedSubTopicID: this.state.listOfSubTopic[\n        e.target.options.selectedIndex\n      ].subjectSubtopic.subtopicId\n    });\n  };\n  handleInputChangeCheckboxlistsearch = (index, e) => {\n    let tempsearchlist = this.state.listOfsearchselected;\n    tempsearchlist[index].status = e.target.checked;\n    this.setState({ listOfsearchselected: tempsearchlist });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading ? (\n          <center>\n            <Loader\n              type=\"TailSpin\"\n              color=\"#00BFFF\"\n              height={120}\n              width={250}\n              // timeout={3000} //3 secs\n            />\n          </center>\n        ) : (\n          <Row style={{ height: \"90vh\" }}>\n            <Col\n              lg=\"3\"\n              style={{\n                padding: \"0em 3em\",\n                background: \"#EEE\"\n              }}\n            >\n              <LeftPanelQuestion\n                searchResultListLength={this.state.searchResultList.length}\n                handlesearchWithFilter={this.handlesearchWithFilter}\n                clearSearchFromFilters={this.clearSearchFromFilters}\n                listOfSubject={this.state.listOfSubject}\n                listOfChapter={this.state.listOfChapter}\n                listOfTopic={this.state.listOfTopic}\n                listOfSubTopic={this.state.listOfSubTopic}\n                handleSubjectChange={this.handleSubjectChange}\n                handleChapterChange={this.handleChapterChange}\n                handleTopicChange={this.handleTopicChange}\n                handleSubTopicChange={this.handleSubTopicChange}\n                selectedSubjectID={this.state.selectedSubjectID}\n                selectedChapterID={this.state.selectedChapterID}\n                selectedTopicID={this.state.selectedTopicID}\n                selectedSubTopicID={this.state.selectedSubTopicID}\n                listOfLanguage={this.state.listOfLanguage}\n                selectedlanguage={this.state.selectedLanguage}\n                handleLanguageChange={this.handleLanguageChange}\n              />\n            </Col>\n            <Col\n              style={{\n                background: \"#EEEEEE\",\n                // height: \"90vh\",\n                padding: \"0em 4em\"\n              }}\n            >\n              <Row style={{ margin: \"2em 0em\" }}>\n                <Col lg=\"1.5\">\n                  {/* <BrowserRouter> */}\n                  <Link to=\"/addques\" target=\"_self\">\n                    <Button\n                      style={{\n                        fontSize: \"1em\",\n                        fontWeight: \"700\",\n                        background: \"#6AA3FF\",\n                        borderColor: \"#6AA3FF\",\n                        borderRadius: \"0\"\n                      }}\n                    >\n                      {\" \"}\n                      + Add Question\n                    </Button>\n                  </Link>\n                  {/* </BrowserRouter> */}\n                </Col>\n                <Col>\n                  <Button\n                    onClick={this.OnPreviewClick}\n                    style={{\n                      fontSize: \"1em\",\n                      fontWeight: \"700\",\n                      background: \"#FF8976\",\n                      borderColor: \"#FF8976\",\n                      borderRadius: \"0\",\n                      float: \"right\"\n                    }}\n                  >\n                    {\" \"}\n                    <View className=\"svg_icons\" /> Preview\n                  </Button>\n                </Col>\n                {/* <Col\n              style={{\n                padding: \"0.2em 1.5em\"\n              }}\n            >\n              <p\n                style={{\n                  lineHeight: \"1em\",\n                  color: \"dimgrey\",\n                  fontWeight: \"400\"\n                }}\n              >\n                Add new and review prevoius question and answers.\n                <br></br>\n                Please select the filter on left for accessing best results.\n              </p>\n            </Col> */}\n              </Row>\n\n              <Row style={{ margin: \"0em 0em\" }}>\n                <Col style={{ paddingLeft: \"0em\", paddingRight: \"0em\" }}>\n                  <Form className=\"searchform\">\n                    <Form.Group controlId=\"formBasicSearch\">\n                      <Form.Control\n                        type=\"text\"\n                        value={this.state.searchbox}\n                        onChange={this.handleSearchboxChange}\n                        placeholder=\"&#128269;  Search a question with id number\"\n                        style={{\n                          padding: \"1.5em 2em\",\n                          borderRadius: \"0\"\n                        }}\n                      />\n                    </Form.Group>\n                  </Form>\n                </Col>\n              </Row>\n\n              {this.state.searchResultList.length > 0 && (\n                <Row style={{ margin: \"0 0em 1em\" }}>\n                  <Col\n                    style={{ paddingLeft: \"0.5em\", paddingTop: \"0.3em\" }}\n                    lg=\"1.5\"\n                  >\n                    <Form.Check\n                      id=\"custom-switch\"\n                      label=\"Select all\"\n                      checked={this.state.searchSelectAll}\n                      onChange={this.handleSelectAllCheck}\n                    />\n                  </Col>\n\n                  <Col style={{ paddingRight: \"0em\" }}>\n                    <Button\n                      onClick={this.handleAddToBucket}\n                      variant=\"outline-light\"\n                      size=\"sm\"\n                      style={{\n                        color: \"black\",\n                        borderColor: \"transparent\"\n                      }}\n                    >\n                      <Bucket className=\"svg_icons\" /> Add to bucket\n                    </Button>\n                  </Col>\n                  <Col lg=\"6\" />\n                </Row>\n              )}\n              <div\n                style={{\n                  // height: \"45vh\",\n                  overflow: \"scroll\",\n                  // border: \"1px solid lightgrey\",\n                  // background: \"white\",\n                  padding: \"0.4em\"\n                }}\n              >\n                {this.state.searchResultList.length > 0 &&\n                  this.state.searchResultList.map((item, index) => {\n                    return (\n                      <Row\n                        key={item.questionId}\n                        style={{\n                          margin: \"0.9em 0em\",\n                          // borderBottom: \"1px #c2c2c2 solid\"\n                        }}\n                      >\n                        <Col\n                          style={{\n                            paddingLeft: \"0em\",\n                            paddingRight: \"0em\"\n                          }}\n                        >\n                          <Card\n                            style={{\n                              background: \"transparent\",\n                              borderColor: \"transparent\"\n                            }}\n                          >\n                            <Card.Body\n                              style={{ padding: \"0\", margin: \"0.5em 0\" }}\n                            >\n                              <Card.Title style={{ fontSize: \"medium\" }}>\n                                <Form.Check\n                                  inline\n                                  type=\"checkbox\"\n                                  checked={\n                                    this.state.listOfsearchselected[index]\n                                      .status\n                                  }\n                                  onChange={this.handleInputChangeCheckboxlistsearch.bind(\n                                    this,\n                                    index\n                                  )}\n                                />\n\n                                <span>\n                                  <b>Id#</b>{\" \"}\n                                  <span style={{ color: \"dimgrey\" }}>\n                                    {item.questionId}\n                                  </span>\n                                </span>\n                                <span\n                                  style={{\n                                    float: \"right\",\n                                    fontSize: \"15px\",\n                                    fontWeight: \"600\"\n                                  }}\n                                >\n                                  <b>Tags: </b>\n                                  <span style={{ color: \"#1D4B7F\" }}>\n                                    Difficulty:{\" \"}\n                                    {item.level === \"EASY\"\n                                      ? item.level === \"MILD\"\n                                        ? \"++\"\n                                        : \"+\"\n                                      :  item.level === \"MILD\"\n                                        ? \"++\"\n                                        : \"+++\"}\n                                  </span>\n                                  ,\n                                  <span\n                                    style={{\n                                      color: \"darkgreen\",\n                                      textTransform: \"lowercase\"\n                                    }}\n                                  >\n                                    {\" \"}\n                                    {item.type}\n                                  </span>\n                                </span>\n                              </Card.Title>\n\n                              <Card.Text style={{ marginBottom: \"0.5em\" }}>\n                                {\"\"}\n                                {item.content.replace(/<\\/?[^>]+(>|$)/g, \"\")}\n                              </Card.Text>\n                              <div style={{ float: \"right\" }}>\n                                <Button\n                                  title={\n                                    this.state.listOfselectedPreview.filter(\n                                      objj =>\n                                        objj.questionId === item.questionId\n                                    ).length > 0\n                                      ? \"Added to bucket\"\n                                      : \"Add to bucket\"\n                                  }\n                                  size=\"sm\"\n                                  style={\n                                    this.state.listOfselectedPreview.filter(\n                                      objj =>\n                                        objj.questionId === item.questionId\n                                    ).length > 0\n                                      ? {\n                                          background: \"green\",\n                                          borderRadius: \"0\",\n                                          padding: \".15rem .15rem\"\n                                        }\n                                      : {\n                                          borderRadius: \"0\",\n                                          padding: \".15rem .15rem\"\n                                        }\n                                  }\n                                  onClick={this.onAddpreviewdata.bind(\n                                    this,\n                                    item.questionId\n                                  )}\n                                  variant=\"primary\"\n                                >\n                                  {<Bucket className=\"svg_icons\" />}{\" \"}\n                                </Button>\n                                <Link\n                                  to={`/editques/${item.questionId}`}\n                                  target=\"_self\"\n                                >\n                                  <Button\n                                    title=\"Edit\"\n                                    size=\"sm\"\n                                    style={{\n                                      borderRadius: \"0\",\n                                      marginLeft: \"1em\",\n                                      padding: \".15rem .15rem\"\n                                    }}\n                                    variant=\"secondary\"\n\n                                    // onClick={this.handleQAEdit.bind(this,item.questionId)}\n                                  >\n                                    {<Edit className=\"svg_icons\" />}{\" \"}\n                                  </Button>\n                                </Link>\n                              </div>\n                            </Card.Body>\n                            {/* <hr /> */}\n                          </Card>\n                        </Col>\n                      </Row>\n                    );\n                  })}{\" \"}\n              </div>\n            </Col>\n          </Row>\n        )}\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(QAtab);\n","import React, { Component } from \"react\";\nimport { Form,Button } from \"react-bootstrap\";\n// import Difficulty from '../Ques/difficulty'\n// import TagsInput from \"react-tagsinput\";\n\nclass LeftPanelExamtab extends Component {\n  render() {\n    let currentvalueexam = this.props.listOfExam.filter(\n      item => item.exam.examId === this.props.selectedExamID\n    )[0];\n    currentvalueexam = currentvalueexam ? currentvalueexam.name : \"\";\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    // let currentvaluetopic = this.props.listOfTopic.filter(\n    //   item => item.subjectTopic.topicId === this.props.selectedTopicID\n    // )[0];\n    // currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    // let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n    //   item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    // )[0];\n    // currentvaluesubtopic = currentvaluesubtopic\n    //   ? currentvaluesubtopic.title\n    //   : \"\";\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect000\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Language\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleLanguageChange}\n            value={this.props.selectedlanguage}\n          >\n            {this.props.listOfLanguage &&\n              this.props.listOfLanguage.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1111\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Exam\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleExamChange}\n            value={currentvalueexam}\n          >\n          \n            {this.props.listOfExam &&\n              this.props.listOfExam.map((item, index) => {\n                return (\n                  <option key={index} value={item.name}>\n                    {item.name}\n                  </option>\n                );\n              })}\n              <option key='' value=''>Select</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect111\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect2222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Type\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={this.props.selectedType}\n            onChange={this.props.handleTypeChange}\n          >\n            {this.props.listOfType &&\n              this.props.listOfType.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <>\n          <Button\n            size=\"sm\"\n            onClick={this.props.handlesearchWithFilter}\n            style={{\n              borderRadius: \"0\",\n              background: \"#419ABB\",\n              borderColor: \"transparent\"\n            }}\n          >\n            Search with filters\n          </Button>\n          {this.props.searchResultListLength > 0 && (\n            <Button\n              size=\"sm\"\n              onClick={this.props.clearSearchFromFilters}\n              style={{\n                marginLeft: \"1em\",\n                borderRadius: \"0\",\n                background: \"dimgrey\",\n                borderColor: \"transparent\"\n              }}\n            >\n              Clear Search\n            </Button>\n          )}\n        </>\n      </Form>\n    );\n  }\n}\n\nexport default LeftPanelExamtab;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Form, Card } from \"react-bootstrap\";\n// import Bucket from \"@material-ui/icons/Https\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport LeftpanelExamtab from \"./leftpanelExamtab.js\";\nimport URL from \"../../Assets/url\";\n\nclass Examtab extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfExam: [],\n      selectedExamID: \"\",\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      selectedLanguage: \"ENGLISH\",\n      listOfLanguage: [\"ENGLISH\", \"HINDI\"],\n      searchbox: \"\",\n      searchResultList: [],\n      listOfType: [\n        \"Free\",\n        \"Weekly\",\n        \"Practise test\",\n        \"Previous year paper\",\n        \"\"\n      ],\n      selectedType: \"\"\n    };\n  }\n  handlesearchWithFilter = () => {\n    axios({\n      method: \"POST\",\n      url: URL.searchexam + \"1\",\n      data: {\n        authToken: \"string\",\n        language: this.state.selectedLanguage,\n        examId: this.state.selectedExamID ? this.state.selectedExamID : null,\n        testId: this.state.searchbox,\n        sectionId: this.state.selectedChapterID\n          ? this.state.selectedChapterID\n          : null,\n        subjectId: this.state.selectedSubjectID\n          ? this.state.selectedSubjectID\n          : null,\n        type: this.state.selectedType ? this.state.selectedType : null\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      // console.log(res.data.data.list);\n      if (res.status === 200) {\n        this.setState({ searchResultList: res.data.data.list });\n      }\n    });\n  };\n  clearSearchFromFilters = () => {\n    this.setState(\n      {\n        // searchResultList: [],\n        // listOfsearchselected: [],\n        searchbox: \"\",\n        // listOfExam: [],\n        selectedExamID: \"\",\n        listOfSubject: [],\n        selectedSubjectID: \"\",\n        listOfChapter: [],\n        selectedChapterID: \"\",\n        selectedType: \"\"\n      },\n      () => {\n        this.handlesearchWithFilter();\n      }\n    );\n  };\n  handleTypeChange = e => {\n    e.preventDefault();\n    this.setState({ selectedType: e.target.value }, () => {\n      // this.componentDidMount();\n    });\n  };\n  handleSearchboxChange = e => {\n    e.preventDefault();\n\n    this.setState({ searchbox: e.target.value });\n    if (e.target.value !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.searchexam + \"1\",\n        data: {\n          authToken: \"string\",\n          language: this.state.selectedLanguage,\n          examId: this.state.selectedExamID ? this.state.selectedExamID : null,\n          testId: e.target.value,\n          sectionId: this.state.selectedChapterID\n            ? this.state.selectedChapterID\n            : null,\n          subjectId: this.state.selectedSubjectID\n            ? this.state.selectedSubjectID\n            : null,\n          type: this.state.selectedType ? this.state.selectedType : null\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        // console.log(res.data.data.list);\n        if (res.status === 200) {\n          this.setState({ searchResultList: res.data.data.list });\n        }\n      });\n    } else {\n      this.setState({ searchResultList: [] });\n    }\n  };\n  handleLanguageChange = e => {\n    e.preventDefault();\n    this.setState({ selectedLanguage: e.target.value }, () => {\n      this.componentDidMount();\n    });\n  };\n  componentDidMount() {\n    axios({\n      method: \"POST\",\n      url: URL.fetchExam + this.state.selectedLanguage,\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // console.log(res.data.data);\n        if (res.status === 200) {\n          this.setState(\n            {\n              listOfExam: res.data.data.list,\n              selectedExamID: \"\"\n              // selectedExamID:\n              //   res.data.data.list.length > 0\n              //     ? res.data.data.list[0].exam.examId\n              //     : \"\"\n            },\n            () => {\n              axios({\n                method: \"POST\",\n                url: URL.searchexam + \"1\",\n                data: {\n                  authToken: \"string\",\n                  language: this.state.selectedLanguage,\n                  examId: null,\n                  testId: null,\n                  sectionId: null,\n                  subjectId: null,\n                  type: null\n                },\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              })\n                .then(res => {\n                  // console.log(res.data.data.list);\n                  if (res.status === 200) {\n                    this.setState({ searchResultList: res.data.data.list });\n                  }\n                })\n                .catch(e => {\n                  alert(e);\n                });\n              // this.callApiForSubject();\n            }\n          );\n        } else {\n          alert(\"Unexpected code\");\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  callApiForSubject = () => {\n    console.log(this.state.selectedExamID);\n    if (this.state.selectedExamID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchSubjectForExam + this.state.selectedExamID,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            axios({\n              method: \"POST\",\n              url: URL.fetchSubject + this.state.selectedLanguage,\n              data: { authToken: \"string\" },\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(response => {\n              if (response.status === 200) {\n                let tempsubjectlist = [];\n                for (let i = 0; i < res.data.data.list.length; i++) {\n                  for (let j = 0; j < response.data.data.list.length; j++) {\n                    if (\n                      response.data.data.list[j].subject.subjectId ===\n                      res.data.data.list[i].subjectId\n                    ) {\n                      tempsubjectlist.push(response.data.data.list[j]);\n                    }\n                  }\n                }\n                // console.log(tempsubjectlist);\n                this.setState(\n                  {\n                    listOfSubject: tempsubjectlist,\n                    selectedSubjectID:\n                      tempsubjectlist.length > 0\n                        ? tempsubjectlist[0].subject.subjectId\n                        : \"\"\n                  },\n                  () => {\n                    this.callApiForChapter();\n                  }\n                );\n              }\n            });\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"(English)examid is blank. API not called. exam list\");\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n\n        listOfSubject: [],\n        selectedSubjectId: \"\"\n      });\n    }\n  };\n  callApiForChapter = () => {\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchChapter +\n          this.state.selectedSubjectID +\n          \"/\" +\n          this.state.selectedLanguage,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfChapter: res.data.data.list,\n                selectedChapterID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectSection.sectionId\n                    : \"\"\n              },\n              () => {\n                // this.callApiForTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\"\n      });\n    }\n  };\n  handleExamChange = e => {\n    e.preventDefault();\n\n    if (e.target.value === \"\") {\n      this.setState(\n        {\n          selectedExamID: \"\"\n        },\n        () => {\n          this.callApiForSubject();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          selectedExamID: this.state.listOfExam[e.target.options.selectedIndex]\n            .exam.examId\n        },\n        () => {\n          this.callApiForSubject();\n        }\n      );\n    }\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedSubjectID: this.state.listOfSubject[\n          e.target.options.selectedIndex\n        ].subject.subjectId\n      },\n      () => {\n        this.callApiForChapter();\n      }\n    );\n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {\n        // this.callApiForTopic();\n      }\n    );\n  };\n  render() {\n    return (\n      <Row style={{ height: \"90vh\" }}>\n        <Col\n          lg=\"3\"\n          style={{\n            padding: \"0em 3em\",\n            background: \"#EEE\"\n          }}\n        >\n          <LeftpanelExamtab\n            searchResultListLength={this.state.searchResultList.length}\n            handlesearchWithFilter={this.handlesearchWithFilter}\n            clearSearchFromFilters={this.clearSearchFromFilters}\n            listOfSubject={this.state.listOfSubject}\n            listOfChapter={this.state.listOfChapter}\n            listOfExam={this.state.listOfExam}\n            handleSubjectChange={this.handleSubjectChange}\n            handleChapterChange={this.handleChapterChange}\n            handleExamChange={this.handleExamChange}\n            selectedSubjectID={this.state.selectedSubjectID}\n            selectedChapterID={this.state.selectedChapterID}\n            selectedExamID={this.state.selectedExamID}\n            // tags={this.state.tags}\n            // handleChangeTags={this.handleChangeTags}\n            // difficulty={this.state.difficulty}\n            // handleDifficultyRadio={this.handleDifficultyRadio}\n            listOfLanguage={this.state.listOfLanguage}\n            selectedLanguage={this.state.selectedLanguage}\n            handleLanguageChange={this.handleLanguageChange}\n            listOfType={this.state.listOfType}\n            selectedType={this.state.selectedType}\n            handleTypeChange={this.handleTypeChange}\n          />\n        </Col>\n\n        <Col\n          style={{\n            background: \"#EEEEEE\",\n            // height: \"90vh\",\n            padding: \"0em 4em\"\n          }}\n        >\n          <Row style={{ margin: \"2em 0em\" }}>\n            <Col lg=\"1.5\">\n              {/* <BrowserRouter> */}\n              <Link to=\"/addexam\" target=\"_self\">\n                <Button\n                  style={{\n                    fontSize: \"1em\",\n                    fontWeight: \"700\",\n                    background: \"#6AA3FF\",\n                    borderColor: \"#6AA3FF\",\n                    borderRadius: \"0\"\n                  }}\n                >\n                  {\" \"}\n                  + Add Exam\n                </Button>\n              </Link>\n              {/* </BrowserRouter> */}\n            </Col>\n            {/* <Col\n              style={{\n                padding: \"0.2em 1.5em\"\n              }}\n            >\n              <p\n                style={{\n                  lineHeight: \"1em\",\n                  color: \"dimgrey\",\n                  fontWeight: \"400\"\n                }}\n              >\n                Add new and review prevoius exam.\n                <br></br>\n                Please select the filter on left for accessing best results.\n              </p>\n            </Col> */}\n          </Row>\n\n          <Row style={{ margin: \"0em 0em\" }}>\n            <Col style={{ paddingLeft: \"0em\", paddingRight: \"0em\" }}>\n              <Form className=\"searchform\">\n                <Form.Group controlId=\"formBasicSearch1\">\n                  <Form.Control\n                    type=\"text\"\n                    value={this.state.searchbox}\n                    onChange={this.handleSearchboxChange}\n                    placeholder=\"&#128269;  Search a question with id number\"\n                    style={{\n                      padding: \"1.5em 2em\",\n                      borderRadius: \"0\"\n                    }}\n                  />\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n\n          {/* {this.state.searchResultList.length > 0 && (\n            <Row style={{ margin: \"0 0em 1em\" }}>\n              <Col\n                style={{ paddingLeft: \"0.5em\", paddingTop: \"0.3em\" }}\n                lg=\"1.5\"\n              >\n                <Form.Check\n                  id=\"custom-switch\"\n                  label=\"Select all\"\n                 \n                />\n              </Col>\n\n              <Col style={{ paddingRight: \"0em\" }}>\n                <Button\n                  variant=\"outline-light\"\n                  size=\"sm\"\n                  style={{\n                    color: \"black\",\n                    borderColor: \"transparent\"\n                  }}\n                >\n                  <Bucket className=\"svg_icons\" /> Add to bucket\n                </Button>\n              </Col>\n              <Col lg=\"9\" />\n            </Row>\n          )} */}\n          <div\n            style={{\n              // height: \"45vh\",\n              // marginBottom:'2em',\n              marginBottom: \"2em\",\n              // overflow: \"scroll\",\n              // border: \"1px solid lightgrey\",\n              // background: \"white\",\n              padding: \"0.4em\"\n            }}\n          >\n            {this.state.searchResultList.length > 0 ? (\n              this.state.searchResultList.map((item, index) => {\n                return (\n                  <Row key={index} style={{ margin: \"0.9em 0em\" }}>\n                    <Col\n                      style={{\n                        paddingLeft: \"0em\",\n                        paddingRight: \"0em\"\n                      }}\n                    >\n                      <Card\n                        style={{\n                          background: \"transparent\",\n                          borderColor: \"transparent\"\n                        }}\n                      >\n                        <Card.Body style={{ padding: \"0em\" }}>\n                          <Card.Title style={{ fontSize: \"medium\" }}>\n                            {/* <Form.Check inline type=\"checkbox\" /> */}\n\n                            <span>\n                              <b>Id#</b>{\" \"}\n                              <span style={{ color: \"dimgrey\" }}>\n                                {item.testId}\n                              </span>\n                            </span>\n                            <span\n                              style={{\n                                float: \"right\",\n                                fontSize: \"15px\",\n                                fontWeight: \"600\"\n                              }}\n                            >\n                              <b>Tags: </b>\n                              <span\n                                style={{\n                                  color: \"darkgreen\",\n                                  // fontSize:'0.5em',\n                                  textTransform: \"capitalize\"\n                                }}\n                              >\n                                {item.type.toLowerCase()}\n                              </span>\n                              {item.year && (\n                                <span>\n                                  {\", \"}\n                                  {/* <b>Year: </b> */}\n                                  {item.year}\n                                </span>\n                              )}\n                            </span>\n                          </Card.Title>\n\n                          <Card.Text>\n                            {\"\"}\n                            {item.name}\n                          </Card.Text>\n                          <div style={{ float: \"right\" }}>\n                            <Link\n                              to={`/editexam/${item.testId}`}\n                              target=\"_self\"\n                            >\n                              <Button\n                                title=\"Edit\"\n                                size=\"sm\"\n                                style={{\n                                  borderRadius: \"0\",\n                                  padding: \".15rem .15rem\"\n                                }}\n                                variant=\"secondary\"\n                              >\n                                {<Edit className=\"svg_icons\" />}{\" \"}\n                              </Button>\n                            </Link>\n                          </div>\n                        </Card.Body>\n                        {/* <hr /> */}\n                      </Card>\n                    </Col>\n                  </Row>\n                );\n              })\n            ) : (\n              <Row style={{ margin: \"0.5em 0em\" }}>\n                <h5>No data found</h5>\n              </Row>\n            )}{\" \"}\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Examtab;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\nimport Header from \"../Header/index\";\nimport QATab from \"./QAtab.js\";\nimport ExamTab from \"./Examtab.js\";\n// import  firebase  from \"./../../firebaseApp.js\";\nconst style = {\n  textAlign: \"center\",\n  background: \"white\",\n  borderRadius: \"2em\",\n  color: \"black\",\n  padding: \" 0.3em 2em\",\n  letterSpacing: \"0.2em\"\n};\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: \"first\"\n    };\n  }\n  setKey = key => {\n    this.setState({\n      key: key\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Container fluid style={{ width: \"auto\", background: \"#EEEEEE\" }}>\n          <Tab.Container\n            activeKey={this.state.key}\n            onSelect={key => this.setKey(key)}\n          >\n            <Row style={{ padding: \"1em 0em\" }}>\n              <Col lg=\"3\"></Col>\n              <Col\n                lg=\"1.5\"\n                // className=\"customtabcolor\"\n                style={{\n                  margin: \"0 4em\"\n                }}\n              >\n                <Nav.Link\n                  eventKey=\"first\"\n                  style={\n                    this.state.key === \"first\"\n                      ? style\n                      : {\n                          color: \"dimgrey\",\n                          letterSpacing: \"0.2em\",\n                          padding: \" 0.3em 2em\"\n                        }\n                  }\n                >\n                  <span style={{ fontSize: \"larger\" }}>Q&A </span>\n                </Nav.Link>\n              </Col>\n              <Col\n                lg=\"1.5\"\n                style={{\n                  padding: \"0 \"\n                }}\n              >\n                <Nav.Link\n                  eventKey=\"second\"\n                  style={\n                    this.state.key === \"second\"\n                      ? style\n                      : {\n                          color: \"dimgrey\",\n                          letterSpacing: \"0.2em\",\n                          padding: \" 0.3em 2em\"\n                        }\n                  }\n                >\n                  <span style={{ fontSize: \"larger\" }}>Exams</span>\n                </Nav.Link>\n              </Col>\n              <Col></Col>\n            </Row>\n\n            <Tab.Content>\n              <Tab.Pane eventKey=\"first\">\n                <QATab history={this.props.history} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"second\">\n                <ExamTab />\n              </Tab.Pane>\n            </Tab.Content>\n          </Tab.Container>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport \"./index.css\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nclass LeftPanelExam extends Component {\n  render() {\n    let currentvalueexam = this.props.listOfExam.filter(\n      item => item.exam.examId === this.props.selectedExamID\n    )[0];\n    currentvalueexam = currentvalueexam ? currentvalueexam.name : \"\";\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    // let currentvaluetopic = this.props.listOfTopic.filter(\n    //   item => item.subjectTopic.topicId === this.props.selectedTopicID\n    // )[0];\n    // currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    // let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n    //   item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    // )[0];\n    // currentvaluesubtopic = currentvaluesubtopic\n    //   ? currentvaluesubtopic.title\n    //   : \"\";\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect1111\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Exam\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleExamChange}\n            value={currentvalueexam}\n          >\n            {this.props.listOfExam &&\n              this.props.listOfExam.map((item, index) => {\n                return (\n                  <option key={index} value={item.name}>\n                    {item.name}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect111\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"exampleForm.ControlSelect2222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Type\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={this.props.selectedType}\n            onChange={this.props.handleTypeChange}\n          >\n            {this.props.listOfType &&\n              this.props.listOfType.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        {this.props.selectedType === \"Previous year paper\" && (\n          <Form.Group controlId=\"exampleForm.ControlSelect22222\">\n            <Form.Label\n              style={{\n                fontWeight: \"600\"\n              }}\n            >\n              Year\n            </Form.Label>\n            <Form.Control\n              style={{ borderRadius: \"0\" }}\n              size=\"sm\"\n              //   as=\"select\"\n              value={this.props.selectedTypeYear}\n              onChange={this.props.handleTypeYearChange}\n            ></Form.Control>\n          </Form.Group>\n        )}\n        <Form.Group controlId=\"exampleForm.ControlSelect22221\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Stating date of test\n          </Form.Label>\n          <DatePicker\n            selected={this.props.startDate}\n            onChange={this.props.handleStartDateChange}\n            dateFormat=\"dd/MM/yyyy\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect222222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Ending date of test\n          </Form.Label>\n          <DatePicker\n            selected={this.props.endDate}\n            onChange={this.props.handleEndDateChange}\n            dateFormat=\"dd/MM/yyyy\"\n          />\n        </Form.Group>\n        <Form.Group >\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Total time for test (Hr : Min)\n          </Form.Label>\n          <Row noGutters={true}>\n            <Col sm=\"5\">\n              <Form.Control\n              type=\"number\"\n                placeholder=\"Hours\"\n                value={this.props.hour}\n                onChange={this.props.onHourChange.bind(this)}\n              ></Form.Control>\n            </Col>\n            <Col sm=\"2\">\n              <Form.Control\n                style={{\n                  textAlign: \"center\",\n                  fontWeight: \"600\",\n                  fontSize: \"1em\"\n                }}\n                plaintext\n                readOnly\n                defaultValue=\":\"\n              />\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n              type=\"number\"\n                placeholder=\"Minutes\"\n                value={this.props.minute}\n                onChange={this.props.onMinuteChange.bind(this)}\n              ></Form.Control>\n              {/* <TimePickerWrapper\n          \n            timeFormat=\"HH:MM\"\n            // timeMode=\"12\"\n            onTimeChange={this.props.onTimeChange}\n            withoutIcon\n            time={`${this.props.hour}:${this.props.minute}`}\n          /> */}\n            </Col>\n          </Row>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nexport default LeftPanelExam;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col, Form, Container } from \"react-bootstrap\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CKEditor from \"ckeditor4-react\";\nclass RightExamPanel extends Component {\n  render() {\n    return (\n      <div>\n        <Row style={{ height: \"auto\" }}>\n          <Container fluid style={{ padding: \"0\" }}>\n            <Form.Control\n              style={{\n                fontWeight: \"600\",\n                margin: \" 0 0.5em\"\n              }}\n              plaintext\n              readOnly\n              defaultValue=\"Name\"\n            />\n            <Row style={{ margin: \"0em 0\" }}>\n              <Col lg=\"4\" style={{ padding: \"0\" }}>\n                <Form.Control\n                  value={this.props.testnameEnglish}\n                  onChange={this.props.handleEnglishTestNameChange}\n                  placeholder=\"Test name in English\"\n                  style={{ borderRadius: \"0\" }}\n                />\n              </Col>\n              <Col></Col>\n              <Col lg=\"4\" style={{ padding: \"0\" }}>\n                <Form.Control\n                  value={this.props.testnameHindi}\n                  onChange={this.props.handleHindiTestNameChange}\n                  placeholder=\"Test name in Hindi\"\n                  style={{ borderRadius: \"0\", float: \"right\" }}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <div style={{ margin: \"1.7em 0\", width: \"100%\" }}>\n            <Form.Control\n              style={{\n                fontWeight: \"600\",\n                margin: \" 0 0.5em\"\n              }}\n              plaintext\n              readOnly\n              defaultValue=\"Description and Instruction\"\n            />\n            <div style={{ margin: \"0em 0em\", width: \"100%\" }}>\n              <CKEditor\n                // editor={ClassicEditor}\n                onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n                data={this.props.testInstructionEnglish}\n                onChange={event => {\n                  const data = event.editor.getData();\n                  this.props.handleEnglishInstructionChange(data);\n                }}\n              />\n            </div>\n            <div style={{ margin: \"1em 0em\", width: \"100%\" }}>\n              <CKEditor\n                onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n                data={this.props.testInstructionHindi}\n                onChange={(event, editor) => {\n                  const data = event.editor.getData();\n                  this.props.handleHindiInstructionChange(data);\n                }}\n              />\n            </div>\n          </div>\n\n          {this.props.listOfSection &&\n            this.props.listOfSection.map((item, index) => {\n              return (\n                <div\n                  key={index}\n                  style={{\n                    border: \"1px solid lightgrey\",\n                    width: \"100%\",\n                    padding: \"1em\",\n                    margin: \"1em 0\"\n                  }}\n                >\n                  <Row noGutters={true} style={{ margin: \"1em 0em\" }}>\n                    <Col lg=\"4\">\n                      <Form.Control\n                        style={{\n                          fontWeight: \"600\"\n                          // margin: \" 0 0.5em\"\n                        }}\n                        plaintext\n                        readOnly\n                        defaultValue=\"Section A\"\n                      />\n                    </Col>\n                    {this.props.listOfSection.length === index + 1 && (\n                      <Col>\n                        <Button\n                          style={{ float: \"right\", color: \"grey\" }}\n                          variant=\"link\"\n                          onClick={this.props.deleteSection}\n                        >\n                          X Delete\n                        </Button>\n                      </Col>\n                    )}\n                  </Row>\n                  <Row noGutters={true} style={{ margin: \"1em 0em\" }}>\n                    <Col lg=\"5\">\n                      <Form.Control\n                        value={\n                          item.versions.filter(\n                            object => object.language === \"ENGLISH\"\n                          )[0].sectionName\n                        }\n                        onChange={this.props.handleSectionnameChange.bind(\n                          this,\n                          index,\n                          \"ENGLISH\"\n                        )}\n                        placeholder=\"Section name in English\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                    <Col lg=\"2\"></Col>\n                    <Col lg=\"5\">\n                      <Form.Control\n                        value={\n                          item.versions.filter(\n                            object => object.language === \"HINDI\"\n                          )[0].sectionName\n                        }\n                        onChange={this.props.handleSectionnameChange.bind(\n                          this,\n                          index,\n                          \"HINDI\"\n                        )}\n                        placeholder=\"Section name in Hindi\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row noGutters={true} style={{ margin: \"1em 0em\" }}>\n                    {/* <Col lg=\"2\"></Col> */}\n                    <Col lg=\"5\">\n                      <Form.Control\n                        type=\"number\"\n                        value={item.marksPerQuestion}\n                        onChange={this.props.handleMarksperQuesChange.bind(\n                          this,\n                          index\n                        )}\n                        placeholder=\"Marks/ ques\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                    <Col lg=\"2\"></Col>\n                    <Col lg=\"5\">\n                      <Form.Control\n                        type=\"number\"\n                        value={item.negativeMarksPerQuestion}\n                        onChange={this.props.handleNegativeMarksPerQuesChange.bind(\n                          this,\n                          index\n                        )}\n                        placeholder=\"-ve/ wrong ques\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                  </Row>\n                  <div style={{ margin: \"1.7em 0\", width: \"100%\" }}>\n                    <div style={{ margin: \"0em 0em\", width: \"100%\" }}>\n                      <CKEditor\n                        onBeforeLoad={CKEDITOR =>\n                          (CKEDITOR.disableAutoInline = true)\n                        }\n                        config={{\n                          height: 80\n                          // placeholder: \"Test description and instruction in English\"\n                        }}\n                        data={\n                          item.versions.filter(\n                            object => object.language === \"ENGLISH\"\n                          )[0].content\n                        }\n                        onChange={(event, editor) => {\n                          const data = event.editor.getData();\n                          this.props.handleSectionDescriptionChange(\n                            index,\n                            \"ENGLISH\",\n                            data\n                          );\n                        }}\n                      />\n                    </div>\n                    <div style={{ margin: \"1em 0em\", width: \"100%\" }}>\n                      <CKEditor\n                        onBeforeLoad={CKEDITOR =>\n                          (CKEDITOR.disableAutoInline = true)\n                        }\n                        config={{\n                          height: 80\n                          // placeholder: \"Test description and instruction in English\"\n                        }}\n                        data={\n                          item.versions.filter(\n                            object => object.language === \"HINDI\"\n                          )[0].content\n                        }\n                        onChange={(event, editor) => {\n                          const data = event.editor.getData();\n                          this.props.handleSectionDescriptionChange(\n                            index,\n                            \"HINDI\",\n                            data\n                          );\n                        }}\n                      />\n                    </div>\n                  </div>\n                  {item.questions &&\n                    item.questions.map((itemquestion, indexquestion) => {\n                      return (\n                        <Row style={{ marginTop: \"0.5em\" }}>\n                          {/* <Col lg=\"2\"></Col> */}\n                          <Col lg=\"1\">\n                            <Form.Control\n                              style={{\n                                fontWeight: \"500\",\n                                margin: \" 0 0.5em\",\n                                textAlign: \"right\"\n                                // paddingRight:'0'\n                              }}\n                              plaintext\n                              readOnly\n                              defaultValue={`Q ${indexquestion + 1}`}\n                            />\n                          </Col>\n                          <Col lg=\"3\" style={{}}>\n                            <Form.Control\n                              type=\"number\"\n                              value={itemquestion}\n                              onChange={this.props.handlSectionQuestionValueChange.bind(\n                                this,\n                                index,\n                                indexquestion\n                              )}\n                              placeholder=\"Question ID#\"\n                              style={{ borderRadius: \"0\" }}\n                            />\n                          </Col>\n                          {item.questions.length === indexquestion + 1 && (\n                            <Col>\n                              <Button\n                                style={{ float: \"left\", color: \"grey\" }}\n                                variant=\"link\"\n                                onClick={this.props.deleteSectionQuestion.bind(\n                                  this,\n                                  index\n                                )}\n                              >\n                                X Delete\n                              </Button>\n                            </Col>\n                          )}\n                        </Row>\n                      );\n                    })}\n                  <Row style={{ marginTop: \"0.5em\" }}>\n                    <Col lg=\"1\"></Col>\n                    <Col>\n                      <Button\n                        onClick={this.props.addSectionQuestions.bind(\n                          this,\n                          index\n                        )}\n                        varirant=\"info\"\n                        style={{\n                          fontSize: \"0.8em\",\n                          fontWeight: \"700\",\n                          background: \"#6992EF\",\n                          borderColor: \"#6992EF\",\n                          borderRadius: \"0\",\n                          float: \"left\"\n                        }}\n                      >\n                        {\" \"}\n                        + Add question\n                      </Button>\n                    </Col>\n                  </Row>\n                </div>\n              );\n            })}\n\n          <Container fluid style={{ paddingRight: \"0\" }}>\n            <Row noGutters={true} style={{ margin: \"1em 0em\" }}>\n              <Col lg=\"10\"> </Col>\n              <Col>\n                <Button\n                  onClick={this.props.addSection}\n                  varirant=\"info\"\n                  style={{\n                    fontSize: \"0.8em\",\n                    fontWeight: \"700\",\n                    background: \"#FF8976\",\n                    borderColor: \"#FF8976\",\n                    borderRadius: \"0\",\n                    float: \"right\"\n                  }}\n                >\n                  {\" \"}\n                  + Add Section\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default RightExamPanel;\n","import React, { Component } from \"react\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport Header from \"../Header/index\";\nimport Back from \"@material-ui/icons/ArrowBack\";\nimport { styled } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\nimport LeftPanelexam from \"./leftpanelexam.js\";\nimport axios from \"axios\";\nimport URL from \"../../Assets/url\";\nimport RightExamPanel from \"./rightpanelexam.js\";\n\nconst MyBack = styled(Back)({\n  color: \"dimgrey\",\n  marginTop: \"-0.2em\",\n  width: \"1em\"\n});\n\nclass Exam extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfExam: [],\n      selectedExamID: \"\",\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      listOfType: [\"Free\", \"Weekly\", \"Practise test\", \"Previous year paper\"],\n      selectedType: \"Free\",\n      selectedTypeYear: null,\n      hour: \"\",\n      minute: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      testnameEnglish: \"\",\n      testnameHindi: \"\",\n      testInstructionEnglish: \"\",\n      testInstructionHindi: \"\",\n      listOfSection: [\n        {\n          marksPerQuestion: '',\n          negativeMarksPerQuestion: '',\n          questions: [],\n\n          versions: [\n            {\n              content: \"\",\n              language: \"ENGLISH\",\n              name: \"string\",\n              sectionName: \"\"\n            },\n            {\n              content: \"\",\n              language: \"HINDI\",\n              name: \"string\",\n              sectionName: \"\"\n            }\n          ]\n        }\n      ]\n    };\n  }\n  addSectionQuestions = index => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].questions.push(\"\");\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  deleteSectionQuestion = index => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].questions.pop();\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handlSectionQuestionValueChange = (index, indexquestion, e) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].questions[indexquestion] = parseInt(e.target.value);\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleSectionDescriptionChange = (index, language, data) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].versions.filter(\n      item => item.language === language\n    )[0].content = data;\n\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleNegativeMarksPerQuesChange = (index, e) => {\n    // console.log(index,e)\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].negativeMarksPerQuestion = e.target.value;\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleMarksperQuesChange = (index, e) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].marksPerQuestion = e.target.value;\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  addSection = () => {\n    // console.log('add section');\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist.push({\n      marksPerQuestion: 0,\n      negativeMarksPerQuestion: 0,\n      questions: [0],\n\n      versions: [\n        {\n          content: \"stringEng\",\n          language: \"ENGLISH\",\n          name: \"string\",\n          sectionName: \"stringEnglish\"\n        },\n        {\n          content: \"stringHin\",\n          language: \"HINDI\",\n          name: \"string\",\n          sectionName: \"stringHindi\"\n        }\n      ]\n    });\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  deleteSection = () => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist.pop();\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleSectionnameChange = (index, language, e) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].versions.filter(\n      item => item.language === language\n    )[0].sectionName = e.target.value;\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleEnglishTestNameChange = e => {\n    this.setState({ testnameEnglish: e.target.value });\n  };\n  handleHindiTestNameChange = e => {\n    this.setState({ testnameHindi: e.target.value });\n  };\n  handleEnglishInstructionChange = data => {\n    this.setState({ testInstructionEnglish: data });\n  };\n  handleHindiInstructionChange = data => {\n    this.setState({ testInstructionHindi: data });\n  };\n  onHourChange = e => {\n    this.setState({ hour: e.target.value });\n  };\n\n  onMinuteChange = e => {\n    this.setState({ minute: e.target.value });\n  };\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: date\n    });\n  };\n  handleTypeYearChange = e => {\n    this.setState({ selectedTypeYear: e.target.value });\n  };\n  componentDidMount() {\n    axios({\n      method: \"POST\",\n      url: URL.fetchExam + \"ENGLISH\",\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // console.log(res.data.data);\n        if (res.status === 200) {\n          this.setState(\n            {\n              listOfExam: res.data.data.list,\n              selectedExamID:\n                res.data.data.list.length > 0\n                  ? res.data.data.list[0].exam.examId\n                  : \"\"\n            },\n            () => {\n              this.callApiForSubject();\n            }\n          );\n        } else {\n          alert(\"Unexpected code\");\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  callApiForSubject = () => {\n    if (this.state.selectedExamID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchSubjectForExam + this.state.selectedExamID,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            axios({\n              method: \"POST\",\n              url: URL.fetchSubject + \"ENGLISH\",\n              data: { authToken: \"string\" },\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(response => {\n              if (response.status === 200) {\n                let tempsubjectlist = [];\n                for (let i = 0; i < res.data.data.list.length; i++) {\n                  for (let j = 0; j < response.data.data.list.length; j++) {\n                    if (\n                      response.data.data.list[j].subject.subjectId ===\n                      res.data.data.list[i].subjectId\n                    ) {\n                      tempsubjectlist.push(response.data.data.list[j]);\n                    }\n                  }\n                }\n                // console.log(tempsubjectlist);\n                this.setState(\n                  {\n                    listOfSubject: tempsubjectlist,\n                    selectedSubjectID:\n                      tempsubjectlist.length > 0\n                        ? tempsubjectlist[0].subject.subjectId\n                        : \"\"\n                  },\n                  () => {\n                    this.callApiForChapter();\n                  }\n                );\n              }\n            });\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"(English)examid is blank. API not called. exam list\");\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n\n        listOfSubject: [],\n        selectedSubjectId: \"\"\n      });\n    }\n  };\n  callApiForChapter = () => {\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchChapter + this.state.selectedSubjectID + \"/ENGLISH\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            this.setState(\n              {\n                listOfChapter: res.data.data.list,\n                selectedChapterID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectSection.sectionId\n                    : \"\"\n              },\n              () => {\n                // this.callApiForTopic();\n              }\n            );\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\"\n      });\n    }\n  };\n  handleExamChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedExamID: this.state.listOfExam[e.target.options.selectedIndex]\n          .exam.examId\n      },\n      () => {\n        this.callApiForSubject();\n      }\n    );\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedSubjectID: this.state.listOfSubject[\n          e.target.options.selectedIndex\n        ].subject.subjectId\n      },\n      () => {\n        this.callApiForChapter();\n      }\n    );\n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {}\n    );\n  };\n  handleTypeChange = e => {\n    e.preventDefault();\n    this.setState({ selectedType: e.target.value }, () => {\n      // this.componentDidMount();\n    });\n  };\n  saveExamdata = () => {\n    // console.log(this.state.endDate,this.state.endDate.toDateString())\n    axios({\n      method: \"POST\",\n      url: URL.addnewExam,\n      data: {\n        authToken: \"string\",\n        endDate: this.state.endDate.toISOString(),\n        examId: this.state.selectedExamID,\n        subjectId: this.state.selectedSubjectID,\n        sectionId: this.state.selectedChapterID,\n        sections: this.state.listOfSection,\n        startDate: this.state.startDate.toISOString(),\n        testInstructions: [\n          {\n            instructions: this.state.testInstructionEnglish,\n            language: \"ENGLISH\",\n            name: this.state.testnameEnglish\n            // \"testVersionId\": 0\n          },\n          {\n            instructions: this.state.testInstructionHindi,\n            language: \"HINDI\",\n            name: this.state.testnameHindi\n          }\n        ],\n        time:\n          parseFloat(this.state.hour) +\n          parseFloat(Number(parseInt(this.state.minute) / 60)),\n        type: this.state.selectedType,\n        year: this.state.selectedTypeYear\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.data.data);\n          alert('Success:',res.data.data)\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div\n          style={{\n            boxShadow: \"0px 3px 5px lightgrey\",\n            width: \"auto\",\n            height: \"4.5em\",\n            padding: \"1em 3em\"\n          }}\n        >\n          <Link to=\"/\" target=\"_self\">\n            <Button\n              variant=\"light\"\n              style={{ background: \"transparent\", border: \"transparent\" }}\n            >\n              <MyBack />\n              <span\n                style={{\n                  marginLeft: \"1em\",\n                  fontSize: \"1.2em\",\n                  color: \"dimgrey\"\n                }}\n              >\n                Back to dashboard\n              </span>\n            </Button>\n          </Link>\n        </div>\n        <Container\n          fluid\n          style={{\n            width: \"auto\",\n            background: \"#EEEEEE\",\n            padding: \"0.5em 1.5em\"\n          }}\n        >\n          <div style={{ padding: \"20px 0\", margin: \"0 1em\" }}>\n            <Row>\n              <Col\n                lg=\"3\"\n                style={{\n                  padding: \"0em 1em\"\n                  // background: \"#EEE\"\n                }}\n              >\n                <div>\n                  <LeftPanelexam\n                    startDate={this.state.startDate}\n                    endDate={this.state.endDate}\n                    handleEndDateChange={this.handleEndDateChange}\n                    handleStartDateChange={this.handleStartDateChange}\n                    hour={this.state.hour}\n                    minute={this.state.minute}\n                    onHourChange={this.onHourChange}\n                    onMinuteChange={this.onMinuteChange}\n                    listOfSubject={this.state.listOfSubject}\n                    listOfChapter={this.state.listOfChapter}\n                    listOfExam={this.state.listOfExam}\n                    handleSubjectChange={this.handleSubjectChange}\n                    handleChapterChange={this.handleChapterChange}\n                    handleExamChange={this.handleExamChange}\n                    selectedSubjectID={this.state.selectedSubjectID}\n                    selectedChapterID={this.state.selectedChapterID}\n                    selectedExamID={this.state.selectedExamID}\n                    listOfType={this.state.listOfType}\n                    selectedType={this.state.selectedType}\n                    handleTypeChange={this.handleTypeChange}\n                    handleTypeYearChange={this.handleTypeYearChange}\n                    selectedTypeYear={this.state.selectedTypeYear}\n                  />\n                </div>\n              </Col>\n              <Col lg=\"1\"></Col>\n              <Col\n                style={{\n                  background: \"#EEEEEE\"\n                }}\n              >\n                <RightExamPanel\n                  testnameEnglish={this.state.testnameEnglish}\n                  testnameHindi={this.state.testnameHindi}\n                  testInstructionEnglish={this.state.testInstructionEnglish}\n                  testInstructionHindi={this.state.testInstructionHindi}\n                  handleHindiInstructionChange={\n                    this.handleHindiInstructionChange\n                  }\n                  handleEnglishInstructionChange={\n                    this.handleEnglishInstructionChange\n                  }\n                  handleHindiTestNameChange={this.handleHindiTestNameChange}\n                  handleEnglishTestNameChange={this.handleEnglishTestNameChange}\n                  listOfSection={this.state.listOfSection}\n                  deleteSection={this.deleteSection}\n                  handleSectionnameChange={this.handleSectionnameChange}\n                  handleNegativeMarksPerQuesChange={\n                    this.handleNegativeMarksPerQuesChange\n                  }\n                  handleMarksperQuesChange={this.handleMarksperQuesChange}\n                  handleSectionDescriptionChange={\n                    this.handleSectionDescriptionChange\n                  }\n                  addSectionQuestions={this.addSectionQuestions}\n                  deleteSectionQuestion={this.deleteSectionQuestion}\n                  addSection={this.addSection}\n                  handlSectionQuestionValueChange={\n                    this.handlSectionQuestionValueChange\n                  }\n                />\n                <div style={{ margin: \"1em 0\", textAlign: \"center\" }}>\n                  <Button\n                    style={{\n                      borderRadius: \"0\",\n                      background: \"#3F5FBB\",\n                      borderColor: \"#3F5FBB\",\n                      padding: \"0.6em 2.5em\",\n                      fontSize: \"1.1em\",\n                      fontWeight: \"600\"\n                    }}\n                    onClick={this.saveExamdata}\n                  >\n                    Save & see preview\n                  </Button>\n                </div>\n              </Col>\n              <Col lg=\"1\"></Col>\n            </Row>\n          </div>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Exam;\n","import React from \"react\";\nimport \"./diff.css\";\nexport default class Radio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coffeeTypes: [\"+\", \"++\", \"+++\"]\n    };\n  }\n  render() {\n    const options = this.state.coffeeTypes.map((loan, key) => {\n      const isCurrent = this.props.difficulty === loan;\n      return (\n        <div key={key} className=\"radioPad\">\n          <div>\n            <label\n              className={\n                isCurrent\n                  ? \"radioPad__wrapper radioPad__wrapper--selected\"\n                  : \"radioPad__wrapper\"\n              }\n            >\n              <input\n                className=\"radioPad__radio\"\n                type=\"radio\"\n                name=\"coffeeTypes\"\n                // id={key}\n                value={loan}\n                onChange={this.props.handleDifficultyRadio}\n              />\n              {loan}\n            </label>\n          </div>\n        </div>\n      );\n    });\n    return (\n      <div className=\"container center\">\n        <div className=\"row\">{options}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\nimport TagsInput from \"react-tagsinput\";\nimport Difficulty from \"./difficulty.js\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CKEditor from \"ckeditor4-react\";\n// import { Pramukhime } from \"./../../Assets/pramukhime/plugin\";\nimport axios from \"axios\";\nimport \"react-tagsinput/react-tagsinput.css\"; // If using WebPack and style-loader.\nimport \"./index.css\";\nimport URL from \"../../Assets/url\";\n\nclass EditComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      listOfTopic: [],\n      selectedTopicID: \"\",\n      listOfSubTopic: [],\n      selectedSubTopicID: \"\",\n      tags: [],\n      difficulty: \"\",\n      questionData: \"\",\n      explanationData: \"\",\n      listOfOptions: [],\n      letterchartcode: 65\n    };\n  }\n  addoptionfn = () => {\n    let currentCharCode = this.state.letterchartcode;\n    let name = \"Option \" + String.fromCharCode(currentCharCode);\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption.push({ name: name, content: \"\", weightage: null });\n    this.setState({\n      listOfOptions: currentArrayOfOption,\n      letterchartcode: currentCharCode + 1\n    });\n  };\n  deleteOption = index => {\n    let currentCharCode = this.state.letterchartcode;\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption.pop(index);\n    this.setState({\n      listOfOptions: currentArrayOfOption,\n      letterchartcode: currentCharCode - 1\n    });\n  };\n  handleDifficultyRadio = e => {\n    e.preventDefault();\n    this.setState({ difficulty: e.target.value });\n  };\n  handleChangeTags = tags => {\n    this.setState({ tags });\n  };\n  componentDidMount() {\n    let difficultyvalue;\n    switch (this.props.fetchedData.level) {\n      case \"EASY\":\n        difficultyvalue = \"+\";\n        break;\n      case \"MILD\":\n        difficultyvalue = \"++\";\n        break;\n      case \"ADVANCE\":\n        difficultyvalue = \"+++\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      difficulty: difficultyvalue,\n      questionData: this.props.fetchedData.questionVersions[0].content,\n      explanationData: this.props.fetchedData.questionVersions[0].solution,\n      listOfOptions: this.props.fetchedData.questionVersions[0].options,\n      letterchartcode:\n        this.props.fetchedData.questionVersions[0].options.length + 65\n    });\n    axios({\n      method: \"POST\",\n      url:\n        URL.fetchSubject + this.props.fetchedData.questionVersions[0].language,\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // console.log(res.data.data);\n\n        if (res.status === 200) {\n          let templist = res.data.data.list.filter(\n            item => item.subject.subjectId === this.props.fetchedData.subjectId\n          );\n          if (templist.length > 0) {\n            this.setState(\n              {\n                listOfSubject: res.data.data.list,\n                selectedSubjectID:\n                  res.data.data.list.length > 0\n                    ? this.props.fetchedData.subjectId\n                    : \"\"\n              },\n              () => {\n                this.callApiForChapter();\n              }\n            );\n          } else {\n            this.setState(\n              {\n                listOfSubject: res.data.data.list,\n                selectedSubjectID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subject.subjectId\n                    : \"\"\n              },\n              () => {\n                this.callApiForChapter();\n              }\n            );\n          }\n        } else {\n          alert(\"Unexpected code\");\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  callApiForChapter = () => {\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchChapter +\n          this.state.selectedSubjectID +\n          \"/\" +\n          this.props.fetchedData.questionVersions[0].language,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            let templist = res.data.data.list.filter(\n              item =>\n                item.subjectSection.sectionId ===\n                this.props.fetchedData.sectionId\n            );\n            if (templist.length > 0) {\n              this.setState(\n                {\n                  listOfChapter: res.data.data.list,\n                  selectedChapterID:\n                    res.data.data.list.length > 0\n                      ? this.props.fetchedData.sectionId\n                      : \"\"\n                },\n                () => {\n                  this.callApiForTopic();\n                }\n              );\n            } else {\n              this.setState(\n                {\n                  listOfChapter: res.data.data.list,\n                  selectedChapterID:\n                    res.data.data.list.length > 0\n                      ? res.data.data.list[0].subjectSection.sectionId\n                      : \"\"\n                },\n                () => {\n                  this.callApiForTopic();\n                }\n              );\n            }\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForTopic = () => {\n    if (this.state.selectedChapterID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchTopic +\n          this.state.selectedChapterID +\n          \"/\" +\n          this.props.fetchedData.questionVersions[0].language,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            let templist = res.data.data.list.filter(\n              item =>\n                item.subjectTopic.topicId === this.props.fetchedData.topicId\n            );\n            if (templist.length > 0) {\n              this.setState(\n                {\n                  listOfTopic: res.data.data.list,\n                  selectedTopicID:\n                    res.data.data.list.length > 0\n                      ? this.props.fetchedData.topicId\n                      : \"\"\n                },\n                () => {\n                  this.callApiForSubTopic();\n                }\n              );\n            } else {\n              this.setState(\n                {\n                  listOfTopic: res.data.data.list,\n                  selectedTopicID:\n                    res.data.data.list.length > 0\n                      ? res.data.data.list[0].subjectTopic.topicId\n                      : \"\"\n                },\n                () => {\n                  this.callApiForSubTopic();\n                }\n              );\n            }\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)chapterid is blank.API not called. checkchapter list\"\n      );\n      this.setState({\n        listOfTopic: [],\n        selectedTopicID: \"\",\n        listOfSubTopic: [],\n        selectedSubTopicID: \"\"\n      });\n    }\n  };\n  callApiForSubTopic = () => {\n    if (this.state.selectedTopicID !== \"\") {\n      axios({\n        method: \"POST\",\n        url:\n          URL.fetchSubTopic +\n          this.state.selectedTopicID +\n          \"/\" +\n          this.props.fetchedData.questionVersions[0].language,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(res.data.data);\n          if (res.status === 200) {\n            let templist = res.data.data.list.filter(\n              item =>\n                item.subjectSubtopic.subtopicId ===\n                this.props.fetchedData.subtopicId\n            );\n            if (templist.length > 0) {\n              this.setState({\n                listOfSubTopic: res.data.data.list,\n                selectedSubTopicID:\n                  res.data.data.list.length > 0\n                    ? this.props.fetchedData.subtopicId\n                    : \"\"\n              });\n            } else {\n              this.setState({\n                listOfSubTopic: res.data.data.list,\n                selectedSubTopicID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].subjectSubtopic.subtopicId\n                    : \"\"\n              });\n            }\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"(English)topicid is blank.API not called. checktopic list\");\n      this.setState({ listOfSubTopic: [], selectedSubTopicID: \"\" });\n    }\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedSubjectID: this.state.listOfSubject[\n          e.target.options.selectedIndex\n        ].subject.subjectId\n      },\n      () => {\n        this.callApiForChapter();\n      }\n    );\n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {\n        this.callApiForTopic();\n      }\n    );\n  };\n  handleTopicChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedTopicID: this.state.listOfTopic[e.target.options.selectedIndex]\n          .subjectTopic.topicId\n      },\n      () => {\n        this.callApiForSubTopic();\n      }\n    );\n  };\n  handleSubTopicChange = e => {\n    e.preventDefault();\n    this.setState({\n      selectedSubTopicID: this.state.listOfSubTopic[\n        e.target.options.selectedIndex\n      ].subjectSubtopic.subtopicId\n    });\n  };\n  handleQuestionEditor = data => {\n    this.setState({ questionData: data });\n  };\n  handleExplanationEditor = data => {\n    this.setState({ explanationData: data });\n  };\n  handleOptioncontentchange = (index, data) => {\n    // let currentCharCode = this.state.letterchartcode;\n    // let name = \"Option \" + String.fromCharCode(currentCharCode);\n    // console.log(index, data);\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption[index].content = data;\n    this.setState({\n      listOfOptions: currentArrayOfOption\n    });\n  };\n  handleOptionWeightageChange = (index, e) => {\n    e.preventDefault();\n    // console.log(typeof parseInt(e.target.value));\n    let currentArrayOfOption = this.state.listOfOptions;\n    currentArrayOfOption[index].weightage = parseInt(e.target.value);\n    this.setState({\n      listOfOptions: currentArrayOfOption\n    });\n  };\n  savedata = () => {\n    let difficultyvalue;\n    switch (this.state.difficulty) {\n      case \"+\":\n        difficultyvalue = \"EASY\";\n        break;\n      case \"++\":\n        difficultyvalue = \"MILD\";\n        break;\n      case \"+++\":\n        difficultyvalue = \"ADVANCE\";\n        break;\n      default:\n        break;\n    }\n    axios({\n      method: \"POST\",\n      url: URL.updateExistingQuestionVersion,\n      data: {\n        authToken: \"string\",\n        difficulty: difficultyvalue,\n        questionId: this.props.questionId,\n        sectionId: this.state.selectedChapterID,\n        subjectId: this.state.selectedSubjectID,\n        subtopicId: this.state.selectedSubTopicID,\n        tags: this.state.tags,\n        topicId: this.state.selectedTopicID,\n        type: \"SINGLE_CHOICE\",\n        version: {\n          content: this.state.questionData,\n          language: this.props.fetchedData.questionVersions[0].language,\n          options: this.state.listOfOptions,\n          questionVersionId: this.props.fetchedData.questionVersions[0]\n            .questionVersionId,\n          solution: this.state.explanationData\n        }\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.data.data);\n          alert(\"success\", res.data.data);\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  render() {\n    return (\n      //   <Container>\n      <div style={{ padding: \"20px 0\", margin: \"0 1em\" }}>\n        <Row>\n          <Col lg=\"3\">\n            <div\n              style={{\n                width: \"auto\"\n                //   height: \"0.5em\"\n              }}\n            >\n              <LeftPanel\n                listOfSubject={this.state.listOfSubject}\n                listOfChapter={this.state.listOfChapter}\n                listOfTopic={this.state.listOfTopic}\n                listOfSubTopic={this.state.listOfSubTopic}\n                handleSubjectChange={this.handleSubjectChange}\n                handleChapterChange={this.handleChapterChange}\n                handleTopicChange={this.handleTopicChange}\n                handleSubTopicChange={this.handleSubTopicChange}\n                selectedSubjectID={this.state.selectedSubjectID}\n                selectedChapterID={this.state.selectedChapterID}\n                selectedTopicID={this.state.selectedTopicID}\n                selectedSubTopicID={this.state.selectedSubTopicID}\n                tags={this.state.tags}\n                handleChangeTags={this.handleChangeTags}\n                difficulty={this.state.difficulty}\n                handleDifficultyRadio={this.handleDifficultyRadio}\n              />\n            </div>\n          </Col>\n          <Col lg=\"1\"></Col>\n          <Col>\n            <div>\n              <RightpanelEnglish\n                handleQuestionEditor={this.handleQuestionEditor}\n                questionData={this.state.questionData}\n                handleExplanationEditor={this.handleExplanationEditor}\n                explanationData={this.state.explanationData}\n                listOfOptions={this.state.listOfOptions}\n                letterchartcode={this.state.letterchartcode}\n                handleOptioncontentchange={this.handleOptioncontentchange}\n                handleOptionWeightageChange={this.handleOptionWeightageChange}\n                addoptionfn={this.addoptionfn}\n                deleteOption={this.deleteOption}\n                savedata={this.savedata}\n              />\n            </div>\n          </Col>\n          <Col lg=\"1\"></Col>\n        </Row>\n      </div>\n      //   </Container>\n    );\n  }\n}\n\nclass LeftPanel extends Component {\n  render() {\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    let currentvaluetopic = this.props.listOfTopic.filter(\n      item => item.subjectTopic.topicId === this.props.selectedTopicID\n    )[0];\n    currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n      item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    )[0];\n    currentvaluesubtopic = currentvaluesubtopic\n      ? currentvaluesubtopic.title\n      : \"\";\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect2\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect3\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluetopic}\n            onChange={this.props.handleTopicChange}\n          >\n            {this.props.listOfTopic &&\n              this.props.listOfTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect4\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Sub-topic\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluesubtopic}\n            onChange={this.props.handleSubTopicChange}\n          >\n            {this.props.listOfSubTopic &&\n              this.props.listOfSubTopic.map((item, index) => {\n                return (\n                  <option key={index} value={item.title}>\n                    {item.title}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Tags\n          </Form.Label>\n          <TagsInput\n            value={this.props.tags}\n            onChange={this.props.handleChangeTags}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Difficulty\n          </Form.Label>\n          <br />\n          <Difficulty\n            difficulty={this.props.difficulty}\n            handleDifficultyRadio={this.props.handleDifficultyRadio}\n          />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\nclass RightpanelEnglish extends Component {\n  render() {\n    // console.log(this.props.questionData);\n    return (\n      <Form>\n        {this.props.questionData && (\n          <QuestionComp\n            // ClassicEditor={ClassicEditor}\n            handleQuestionEditor={this.props.handleQuestionEditor}\n            questionData={this.props.questionData}\n          />\n        )}\n        {this.props.listOfOptions &&\n          this.props.listOfOptions.map((item, index) => {\n            return (\n              <React.Fragment key={index}>\n                <Form.Group as={Row} style={{ marginTop: \"2em\" }}>\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"600\" }}>\n                    {\"Option \" + String.fromCharCode(65 + index)}\n                  </Form.Label>\n                  <Col sm=\"2\">\n                    <Form.Control\n                      disabled\n                      style={{ borderRadius: \"0\", background: \"lightgrey\" }}\n                      type=\"number\"\n                      value={item.weightage || 0}\n                      onChange={this.props.handleOptionWeightageChange.bind(\n                        this,\n                        index\n                      )}\n                      placeholder=\"weightage\"\n                    />\n                  </Col>\n                  {/* {this.props.listOfOptions.length === index + 1 && (\n                    <Col>\n                      <Button\n                        style={{ float: \"right\", color: \"grey\" }}\n                        variant=\"link\"\n                        onClick={this.props.deleteOption.bind(this, index)}\n                      >\n                        X Delete\n                      </Button>\n                    </Col>\n                  )} */}\n                </Form.Group>\n                <div style={{ margin: \"0.5em 0\" }}>\n                  <CKEditor\n                    onBeforeLoad={CKEDITOR =>\n                      (CKEDITOR.disableAutoInline = true)\n                    }\n                    config={{\n                      height: 80\n\n                      // placeholder: \"Test description and instruction in English\"\n                    }}\n                    data={item.content}\n                    onChange={event => {\n                      // const data = editor.getData();\n                      this.props.handleOptioncontentchange(\n                        index,\n                        event.editor.getData()\n                      );\n                    }}\n                  />\n                </div>\n              </React.Fragment>\n            );\n          })}\n        <Row>\n          <Col lg=\"10\"></Col>\n          <Col>\n            {/* <Button\n              onClick={this.props.addoptionfn}\n              varirant=\"info\"\n              style={{\n                fontSize: \"0.8em\",\n                fontWeight: \"700\",\n                background: \"#FF8976\",\n                borderColor: \"#FF8976\",\n                borderRadius: \"0\",\n                float: \"right\"\n              }}\n            >\n              {\" \"}\n              + Add Option\n            </Button> */}\n          </Col>\n        </Row>\n        <div style={{ margin: \"2em 0\" }}>\n          {this.props.explanationData && (\n            <ExplanationComp\n              handleExplanationEditor={this.props.handleExplanationEditor}\n              explanationData={this.props.explanationData}\n            />\n          )}\n        </div>\n\n        <div style={{ margin: \"1em 0\", textAlign: \"center\" }}>\n          <Button\n            style={{\n              borderRadius: \"0\",\n              background: \"#3F5FBB\",\n              borderColor: \"#3F5FBB\",\n              padding: \"0.6em 2.5em\",\n              fontSize: \"1.1em\",\n              fontWeight: \"600\"\n            }}\n            onClick={this.props.savedata}\n          >\n            Update data\n          </Button>\n        </div>\n      </Form>\n    );\n  }\n}\nfunction QuestionComp({ questionData, handleQuestionEditor }) {\n  return (\n    <Form.Group controlId=\"exampleForm.EControlInput3\">\n      <Form.Label\n        style={{\n          fontWeight: \"600\"\n        }}\n      >\n        Question\n      </Form.Label>\n      <div\n        style={{\n          margin: \"0.5em 0\"\n        }}\n      >\n        <CKEditor\n          onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n          config={{\n            height: 80,\n            // font_defaultLabel: \"lato\",\n            // fontSize_sizes: \"16/16px;24/24px;48/48px;\",\n            // font_style: {\n            //   element: \"p\",\n            //   styles: { \"font-size\": \"18px\" },\n            //   overrides: [{ element: \"font\", attributes: { face: null } }]\n            // }\n            // placeholder: \"Test description and instruction in English\"\n          }}\n          data={questionData}\n          //   config={{\n          //     plugins: [Pramukhime]\n          //   }}\n          onChange={event => {\n            const data = event.editor.getData();\n\n            handleQuestionEditor(data);\n          }}\n        />\n      </div>\n    </Form.Group>\n  );\n}\nfunction ExplanationComp({ explanationData, handleExplanationEditor }) {\n  //   console.log(explanationData);\n  return (\n    <Form.Group controlId=\"exampleForm.EControlInput1\">\n      <Form.Label\n        style={{\n          fontWeight: \"600\"\n        }}\n      >\n        Explanation\n      </Form.Label>\n      <div\n        style={{\n          margin: \"0.5em 0\"\n        }}\n      >\n        <CKEditor\n          onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n          config={{\n            height: 80\n            // placeholder: \"Test description and instruction in English\"\n          }}\n          data={explanationData}\n          onChange={event => {\n            const data = event.editor.getData();\n            handleExplanationEditor(data);\n          }}\n        />\n      </div>\n    </Form.Group>\n  );\n}\nexport default EditComponent;\n","import React, { Component } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport Header from \"../Header/index\";\nimport Back from \"@material-ui/icons/ArrowBack\";\nimport { styled } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport URL from \"../../Assets/url\";\nimport EditComponent from \"./editcomponent.js\";\nconst MyBack = styled(Back)({\n  color: \"dimgrey\",\n  marginTop: \"-0.2em\",\n  width: \"1em\"\n});\nclass Editques extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionId: this.props.match.params.id,\n      fetchedData: null,\n      // activetab: \"1\"\n    };\n  }\n  componentDidMount() {\n    axios({\n      method: \"POST\",\n      url: URL.geteditques + this.state.questionId,\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res.data.data.question);\n      if (res.status === 200) {\n        this.setState({ fetchedData: res.data.data.question });\n      }\n    });\n  }\n  // handleSelect = () => {\n  //   let activetab = this.state.activetab;\n  //   if (activetab === \"1\") {\n  //     this.setState({ activetab: \"2\" });\n  //   } else {\n  //     this.setState({ activetab: \"1\" });\n  //   }\n  // };\n  // handleChange = data => {\n  //   console.log(\"Id from english response\", data);\n  //   this.setState({ questionId: data });\n  // };\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div\n          style={{\n            boxShadow: \"0px 3px 5px lightgrey\",\n            width: \"auto\",\n            height: \"4.5em\",\n            padding: \"1em 3em\"\n          }}\n        >\n          <Link to=\"/\" target=\"_self\">\n            <Button\n              variant=\"light\"\n              style={{ background: \"transparent\", border: \"transparent\" }}\n            >\n              <MyBack />\n              <span\n                style={{\n                  marginLeft: \"1em\",\n                  fontSize: \"1.2em\",\n                  color: \"dimgrey\"\n                }}\n              >\n                Back to dashboard\n              </span>\n            </Button>\n          </Link>\n        </div>\n        <Container\n          fluid\n          style={{\n            width: \"auto\",\n            background: \"#EEEEEE\",\n            padding: \"0.5em 1.5em\"\n          }}\n        >\n          {this.state.fetchedData && (\n            <EditComponent fetchedData={this.state.fetchedData} />\n          )}\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Editques;\n","import React, { Component } from \"react\";\nimport \"./404.css\";\nexport default class Error404 extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <svg className=\"me404\" viewBox=\"0 0 1000 480\">\n          <path\n            id=\"cloud\"\n            className=\"st0\"\n            d=\"M658.4,345.2c-10.9,0-19.7-8.8-19.7-19.7c0-10.9,8.8-19.7,19.7-19.7h50.1c9.9-1.5,17.5-10,17.5-20.3\n\tc0-11.4-9.2-20.6-20.6-20.6v-0.2H633c-11.4,0-20.6-6.7-20.6-18.1c0-11.4,9.2-19.3,20.6-19.3h70.4l2-0.2c7.3-3.1,12.5-11,12.5-19.5\n\tc0-8.5-4.2-16.7-11.4-19.2l-2.5-0.3h-11.3c-11.9,0-21.6-8.9-21.6-19.9c0-11,9.7-19.9,21.6-19.9h15.8l1.4-0.3\n\tc8.6-2.5,14.8-10.1,14.8-19.5c0-11.4-9.2-20.6-20.6-20.6h-1.2h-69.2H382.5c-19.8-0.9-19.9-15.9-19.8-17.8c0-0.1,0-0.1,0-0.2\n\tc0-9.9-8.1-18-18-18h-93.5c-9.9,0-18,8.1-18,18c0,9.4,7.2,17.1,16.3,17.9h9.3c0.2,0,0,0,0.6,0l0.5,0l0.4,0l0.2,0\n\tc10.1,0.9,18,9.3,18,19.6c0,10.9-8.8,19.7-19.7,19.7h-70.7c-11.3,0-20.5,9.2-20.5,20.6c0,11.3,9.1,20.5,20.4,20.6h48.8\n\tc10.3,0,18.7,8.4,18.7,18.7c0,10.3-8.4,18.7-18.7,18.7h-23.2c-11.3,0.1-20.4,9.2-20.4,20.6c0,11.3,9.2,20.5,20.5,20.6h6.3\n\tc10.7,0,19.3,8.7,19.3,19.3c0,10.7-7.8,19.3-18.4,19.3l-1.5,0l-2.8,0.4c-7.3,3.1-11.8,11-11.5,18.9c0.3,8.5,4.2,16.5,11.7,19.6\n\tc1.1,0.7,3.4,0.9,4.4,0.9h4.5H296h19.7c3.9,0.5,8.2,4.2,7.4,10.4c0,0.4,0,0.8,0.1,1.1c0,0.5-0.1,1-0.1,1.5c0,9.7,7.9,17.5,17.5,17.5\n\th60.2c9.7,0,17.5-7.9,17.5-17.5c0-0.4,0-0.8-0.1-1.2c0.1-0.3,0-0.7,0.1-1.1c0.3-6.5,6.4-10.9,10.6-10.8h110.1\n\tc8.5,0,16.9,6.6,16.9,14.8c0,8.2,6.6,14.8,14.8,14.8h92.6c8.2,0,14.8-6.6,14.8-14.8c0-8.2-6.6-14.8-14.8-14.8 M332.8,187.1h-21.2\n\tc-11.4,0-20.6-9.2-20.6-20.6c0-11.4,9.2-20.6,20.6-20.6h21.2c11.4,0,20.6,9.2,20.6,20.6C353.3,177.9,344.1,187.1,332.8,187.1z\"\n          />\n          <g id=\"triforce\">\n            <path\n              id=\"zelda_stroke\"\n              className=\"st1\"\n              d=\"M138.4,59.5h36.9l-18.5,32L138.4,59.5z M193.8,91.5l18.5-32h-36.9L193.8,91.5z M175.4,123.5\n\t\tl18.5-32h-36.9L175.4,123.5z\"\n            />\n            <path\n              id=\"zelda_dark_shadow\"\n              className=\"st0\"\n              d=\"M156.9,91.5l-18.5-32l18.5,10.7L156.9,91.5z M193.8,70.2l-18.5-10.7l18.5,32\n\t\tL193.8,70.2z M175.4,102.2l-18.5-10.7l18.5,32L175.4,102.2z\"\n            />\n            <path\n              id=\"zelda_light_shadow\"\n              className=\"st2\"\n              d=\"M175.4,59.5l-18.5,10.7l-18.5-10.7H175.4z M175.4,59.5l18.5,10.7l18.5-10.7H175.4z\n\t\t M156.9,91.5l18.5,10.7l18.5-10.7H156.9z\"\n            />\n            <path\n              id=\"zelda_highlight\"\n              className=\"st3\"\n              d=\"M150.6,66.6h12.5l-6.3,10.8L150.6,66.6z M193.8,77.4l6.3-10.8h-12.5L193.8,77.4z\n\t\t M175.4,109.4l6.3-10.8h-12.5L175.4,109.4z\"\n            />\n          </g>\n          <g id=\"monkey\">\n            <path\n              id=\"foot_back\"\n              className=\"st4\"\n              d=\"M187.3,354.5c2.2-4.5,1.6-12.8-3.3-18.5l-9.3,2c2.2,3.5,8.3,7.7,2.3,20.8 c-1.9,4.2-0.8,8.7,4,8.7h22.3c6.5,0,5.3-7.9,2-10.5c-4.2-3.3-10.2-3.6-15.3-1C187.9,357.1,185.3,358.7,187.3,354.5z\"\n            />\n            <path\n              id=\"foot_front\"\n              className=\"st5\"\n              d=\"M166.3,354.5c2.2-4.5,1.6-12.8-3.3-18.5l-9.3,2c2.2,3.5,8.3,7.7,2.3,20.8 c-1.9,4.2-0.8,8.7,4,8.7h22.3c6.5,0,5.3-7.9,2-10.5c-4.2-3.3-10.2-3.6-15.3-1C166.9,357.1,164.3,358.7,166.3,354.5z\"\n            />\n            <path\n              id=\"body\"\n              className=\"st5\"\n              d=\"M199.8,299.3l9-55.5c0,0-2.1-3.6-7.2-7.1c1.4-1.2,2.2-3.1,1.8-5c-0.6-3.1-3.9-5.3-7.5-4.8 c-2.9,0.4-5,2.4-5.4,4.8l0,0c-7.2-1.9-16.5-1.9-29.5,1.6c-1.5-3.1-5.6-5.4-9.3-5.7c-5.5-0.4-9.3,3.7-9.7,9.3 c-0.3,4.4,2.2,8.3,6.1,9.9c-16,25.6-14.6,58.2-11,71.9c4.3,16.1,18.2,21.8,26.3,21.8c13,0,33.8-1.9,37.5-17.7 C202.9,315,202,303.9,199.8,299.3z\"\n            />\n            <path\n              id=\"rock\"\n              className=\"st6\"\n              d=\"M93.4,367.5H89 M104,367.5h144l-11,17.2c-0.9,1.4-2.5,2.3-4.2,2.3H203c-1.6,0-3,0.7-4,2l-40,52\"\n            />\n            <path\n              id=\"tail\"\n              className=\"st7\"\n              d=\"M89,315c2.2-15.2-23-13.2-21.6,4.8c1.7,22.3,24.4,22.1,42.5,9.1c10.8-7.8,15.3-1.8,19.1,1.1 c2.3,1.7,6.7,3.3,11-3\"\n            />\n            <path\n              id=\"face\"\n              className=\"st8\"\n              d=\"M213.7,245.2c0,0-6-2.9-11,0.2c-4.6,2.8-9.4,1.7-14,0c-4.6-1.7-16-5.1-19.2,2.6 c-2,3.8-2.3,9.7,3.8,16.3c-0.9,10.1-2.9,37.9,28.6,34.2c10.1-1.2,24.8-12.7,25.4-18.2s-1.7-7.4-6.5-6.5 c-1.3-6.5-2.3-12.9-10.7-11.8c-3.9,0.2,7.5,0,8.1-7.5C218.6,247.8,213.7,245.2,213.7,245.2z\"\n            />\n            <path\n              id=\"mouth\"\n              className=\"st9\"\n              d=\"M220.6,274.8c0,0-0.3,0.2-0.7,0.5c-0.2,0.2-0.6,0.3-1,0.5c-0.4,0.2-0.9,0.3-1.4,0.5 c-1,0.3-2.1,0.5-3.3,0.6c-1.2,0.2-2.4,0.3-3.7,0.5c-0.6,0.1-1.2,0.2-1.8,0.4c-0.6,0.1-1.1,0.3-1.7,0.5c-0.5,0.2-1,0.4-1.4,0.7 c-0.5,0.2-0.8,0.5-1.2,0.8c-0.4,0.2-0.6,0.6-0.9,0.9c-0.3,0.3-0.4,0.5-0.6,0.7c-0.3,0.4-0.5,0.7-0.5,0.7l0,0.1 c-0.2,0.2-0.5,0.3-0.7,0.1c-0.2-0.1-0.3-0.4-0.2-0.7c0,0,0.2-0.3,0.5-0.8c0.2-0.3,0.3-0.6,0.6-0.9c0.3-0.3,0.5-0.7,0.9-1 c0.4-0.3,0.8-0.7,1.3-1c0.5-0.3,1-0.6,1.6-0.9c0.6-0.2,1.2-0.5,1.8-0.7c0.6-0.2,1.3-0.3,1.9-0.5c1.3-0.3,2.5-0.5,3.7-0.7 c1.2-0.2,2.2-0.4,3-0.7c0.4-0.2,0.8-0.3,1.1-0.4c0.3-0.2,0.5-0.2,0.8-0.4c0.5-0.3,0.7-0.5,0.7-0.5c0.5-0.3,1.1-0.2,1.4,0.2 C221.2,273.9,221.1,274.5,220.6,274.8C220.6,274.8,220.6,274.8,220.6,274.8z\"\n            />\n            <path\n              id=\"nose_hole\"\n              className=\"st10\"\n              d=\"M213.2,266.3c0.6,0,1,0.5,0.9,1.1c0,0.6-0.5,1-1.1,0.9c-0.6,0-1-0.5-0.9-1.1\n\t\tC212.1,266.6,212.6,266.2,213.2,266.3z\"\n            />\n            <path\n              id=\"nose_hole_1_\"\n              className=\"st10\"\n              d=\"M208.1,266.9c0.6,0,1,0.5,0.9,1.1c0,0.6-0.5,1-1.1,0.9c-0.6,0-1-0.5-0.9-1.1\n\t\tC207.1,267.3,207.6,266.9,208.1,266.9z\"\n            />\n            <path\n              id=\"monkey-eye-r\"\n              className=\"st10\"\n              d=\"M205,253.5c1.1,0.1,1.9,1,1.9,2.1c-0.1,1.1-1,1.9-2.1,1.9c-1.1-0.1-1.9-1-1.9-2.1 C203,254.3,203.9,253.4,205,253.5z\"\n            />\n            <path\n              id=\"monkey-eye-l\"\n              className=\"st10\"\n              d=\"M191.5,254.6c1.4,0.1,2.4,1.3,2.3,2.7c-0.1,1.4-1.3,2.4-2.7,2.3c-1.4-0.1-2.4-1.3-2.3-2.7 C188.9,255.6,190.1,254.5,191.5,254.6z\"\n            />\n            <path\n              id=\"mongkey_shadow_1_\"\n              className=\"st0\"\n              d=\"M209.1,281c0.9-0.9,9.4-2.6,12-3c2.4-0.4-1.6,4.1-5,5S208.2,282,209.1,281z M143.6,237.1c-0.3,3.6,1.8,7,5.2,8.4c0.4,0.2,0.7,0.5,0.8,0.9c0.1,0.4,0.1,0.9-0.2,1.2c-15.1,24.2-14.7,56.3-10.8,70.8 c4,15.2,17.1,20.7,24.8,20.7c8.9,0,16.1-1,21.8-2.9c-67.5,2.2-35-81.7-33.3-87.3c0.2-0.8,1.2-4.4,1-5c-0.6-1.6-3.5-0.2-6-4 c-2.9-4.5,1.2-9.2,2.6-10.6C146.3,230.1,143.9,233,143.6,237.1z M201.7,297.5c7.8-0.9,17.9-8,22.3-13.3\n\t\tc-27.4,14.7-44.4,3.1-50.1-9.8c0.3,5.9,1.6,12.6,5.9,17.3C184.4,296.7,191.8,298.7,201.7,297.5z M208.6,261.2\n\t\tc-5.7,0.8-8.6-1.1-11.6,1.8c-2.8,2.7-7.7,4.6-3.8,4.1c3.9-0.6,10.1-3.4,16.8-4.1c0,0,0,0,0,0l-0.5,0c-0.2,0-0.3,0-0.4,0\n\t\tc-0.5,0-1-0.4-1-0.9C208.2,261.9,208.2,261.5,208.6,261.2z M198.4,300c0-0.1,0-0.1-0.1-0.2c-0.7,0-1.4,0.1-2,0.1\n\t\tc-7.8,0-13.9-2.3-18-6.8c-7.7-8.4-6.6-22.5-6.1-28.4c-5.6-6.2-5.6-11.5-4.6-15c-2,2.3-4.8,8.5,2.1,16.1c-3.9,6.4-5.4,26.5,9.2,36.2\n\t\tc7.2,4.8,16.6,5.3,20.8,2.8C199.5,302.9,199,301.2,198.4,300z\"\n            />\n            <path\n              id=\"belly\"\n              className=\"st11\"\n              d=\"M189.1,304c6.2,3,8.1,11.5,5.9,19c-2.3,7.4-9.8,10-16,7c-6.2-3-7.6-10.4-5.3-17.8\n\t\tS182.9,301.1,189.1,304z\"\n            />\n            <path\n              id=\"belly_button\"\n              className=\"st9\"\n              d=\"M191.2,322.3c0-0.1-0.1-0.2-0.2-0.2l-1.9-1.4l1-1.9c0.1-0.1,0.1-0.2,0-0.3\n\t\tc-0.1-0.2-0.4-0.4-0.7-0.3c-0.2,0-0.4,0.2-0.5,0.3l-0.9,1.7l-1.6-1.2c-0.2-0.1-0.3-0.1-0.5-0.1c-0.4,0.1-0.5,0.4-0.5,0.6\n\t\tc0,0.1,0.1,0.2,0.2,0.2l1.8,1.3l-1.1,2.1c-0.1,0.1-0.1,0.2,0,0.3c0.1,0.3,0.4,0.4,0.7,0.4c0.2,0,0.3-0.1,0.4-0.3l1-1.9l1.7,1.3\n\t\tc0.1,0.1,0.3,0.1,0.5,0.1C191.1,322.8,191.3,322.5,191.2,322.3z\"\n            />\n            <g id=\"monkey_arm\">\n              <path\n                id=\"monkey-arm\"\n                className=\"st5\"\n                d=\"M164.3,344.1c-0.9-0.3-1.8-0.2-2.5,0.2c-0.3-0.2-0.6-0.3-0.9-0.4c-0.8-0.3-1.5-0.5-2.3-0.5\n\t\t\tc-0.1,0-0.2-0.1-0.3-0.3c-2.4-11.4-1.1-27.6,0.3-43.8c0-0.1,1.2-5.7-2.6-7.2c-5.2-2.1-5.5,2.5-5.5,2.7c-0.5,4.8-3.6,39,1.1,51.4\n\t\t\tc0,0.1,0,0.2,0,0.3c-0.4,0.5-0.7,1-0.9,1.7c-1.5,3.9,0.7,8.3,4.8,9.9c4.1,1.6,8.7-0.3,10.1-4.2c0.5-1.3,0.6-2.7,0.3-4\n\t\t\tc0-0.1,0-0.2,0.1-0.2c0.5-0.7,0.9-1.6,0.5-2.9C166.2,345.5,165.4,344.4,164.3,344.1z\"\n              />\n              <g id=\"armpit\">\n                <path\n                  className=\"st12\"\n                  d=\"M165,296c0-4.3-1.8-10.8-6-12c-12.5-3.5-12.4,11.1-12.4,11.1s10.8-1.4,16.7,9.6\n\t\t\t\tC163.3,304.6,165,300.3,165,296z\"\n                />\n                <path className=\"st11\" d=\"M146.6,295.1c0,0,10.8-1.4,16.7,9.6\" />\n                <path className=\"st11\" d=\"M144.4,296c0,0,8.7-6.6,19.2,0\" />\n              </g>\n            </g>\n          </g>\n          <g id=\"tetris-path\">\n            <g id=\"tetris\">\n              <path\n                id=\"tetris_stroke\"\n                className=\"st13\"\n                d=\"M487.5,323.5h34v34h-34V323.5z M487.5,357.5h34v34h-34V357.5z M521.5,357.5h34v34h-34 V357.5z M555.5,357.5h34v34h-34V357.5z M555.5,391.5h34v34h-34V391.5z\"\n              />\n              <path\n                id=\"tetris_dark_shadow\"\n                className=\"st2\"\n                d=\"M489,356l6-6c0.9-0.9,2.2-1.5,3.5-1.5h13.9l7.5,7.5H489z M489,390l6-6 c0.9-0.9,2.2-1.5,3.5-1.5h13.9l7.5,7.5H489z M523,390l6-6c0.9-0.9,2.2-1.5,3.5-1.5h13.9l7.5,7.5H523z M557,390l6-6 c0.9-0.9,2.2-1.5,3.5-1.5h13.9l7.5,7.5H557z M557,424l6-6c0.9-0.9,2.2-1.5,3.5-1.5h13.9l7.5,7.5H557z\"\n              />\n              <path\n                id=\"tetris_light_shadow\"\n                className=\"st0\"\n                d=\"M520,356l-8-7.5v-13.9c0-1.4,0.6-2.7,1.6-3.6l6.4-6V356z M520,390l-8-7.5v-13.9 c0-1.4,0.6-2.7,1.6-3.6l6.4-6V390z M554,390l-8-7.5v-13.9c0-1.4,0.6-2.7,1.6-3.6l6.4-6V390z M588,390l-8-7.5v-13.9 c0-1.4,0.6-2.7,1.6-3.6l6.4-6V390z M588,424l-8-7.5v-13.9c0-1.4,0.6-2.7,1.6-3.6l6.4-6V424z\"\n              />\n            </g>\n          </g>\n          <g id=\"stars\">\n            <path\n              id=\"star1\"\n              className=\"st5\"\n              d=\"M652.6,332.5c-5.3,3.1-12.1,1.2-15.1-4.1l-1.4-2.4l1.4,2.4c3.1,5.3,1.2,12.1-4.1,15.1l-2.4,1.4 l2.4-1.4c5.3-3.1,12.1-1.2,15.1,4.1l1.4,2.4l-1.4-2.4C645.5,342.3,647.3,335.5,652.6,332.5l2.4-1.4L652.6,332.5z\"\n            />\n            <path\n              id=\"star2\"\n              className=\"st5\"\n              d=\"M503.4,73.7c-8,4.6-18.1,1.9-22.7-6.1l-2.1-3.6l2.1,3.6c4.6,8,1.9,18.1-6.1,22.7l-3.6,2.1l3.6-2.1 c8-4.6,18.1-1.9,22.7,6.1l2.1,3.6l-2.1-3.6C492.7,88.4,495.4,78.3,503.4,73.7l3.6-2.1L503.4,73.7z\"\n            />\n            <path\n              id=\"star3\"\n              className=\"st5\"\n              d=\"M330.4,335.7c-8,4.6-18.1,1.9-22.7-6.1l-2.1-3.6l2.1,3.6c4.6,8,1.9,18.1-6.1,22.7l-3.6,2.1 l3.6-2.1c8-4.6,18.1-1.9,22.7,6.1l2.1,3.6l-2.1-3.6C319.7,350.4,322.4,340.3,330.4,335.7l3.6-2.1L330.4,335.7z\"\n            />\n            <path\n              id=\"star4\"\n              className=\"st5\"\n              d=\"M135.6,176.5c-5.3,3.1-12.1,1.2-15.1-4.1l-1.4-2.4l1.4,2.4c3.1,5.3,1.2,12.1-4.1,15.1l-2.4,1.4 l2.4-1.4c5.3-3.1,12.1-1.2,15.1,4.1l1.4,2.4l-1.4-2.4C128.5,186.3,130.3,179.5,135.6,176.5l2.4-1.4L135.6,176.5z\"\n            />\n          </g>\n          <g id=\"moon\">\n            <path\n              id=\"moon_body\"\n              className=\"st5\"\n              d=\"M641,34c26,0,47,21,47,47s-21,47-47,47s-47-21-47-47S615,34,641,34z\"\n            />\n            <path\n              id=\"moon_shades\"\n              className=\"st0\"\n              d=\"M622.5,55.9c1.3,2.3,0,5.8-3.1,7.7c-3,2-6.6,1.7-7.9-0.6c-1.3-2.3,0-5.8,3.1-7.7\n\t\tC617.6,53.3,621.1,53.6,622.5,55.9z M628.8,94.1c-4.1-6.1-11.6-9-16.7-6.4c-5.1,2.6-5.9,9.6-1.7,15.7c4.1,6.1,11.6,9,16.7,6.4\n\t\tC632.2,107.2,632.9,100.2,628.8,94.1z M644.5,109c-3.6,0-6.5,2.2-6.5,5s2.9,5,6.5,5s6.5-2.2,6.5-5S648.1,109,644.5,109z\n\t\t M645.7,95.8c-2.3-1.2-5-0.5-6,1.4c-1,2,0,4.5,2.3,5.7c2.3,1.2,5,0.5,6-1.4C649,99.6,648,97,645.7,95.8z M686.5,81\n\t\tc0-25.1-20.4-45.5-45.5-45.5c-16.1,0-30.2,8.4-38.3,21c7.9-5.9,17.7-9.5,28.3-9.5c26,0,47,21,47,47c0,6.3-1.3,12.3-3.5,17.8\n\t\tC681.9,103.6,686.5,92.8,686.5,81z\"\n            />\n          </g>\n          <g id=\"number_4\">\n            <path\n              id=\"number_4_outline\"\n              className=\"st1\"\n              d=\"M379.5,235.5c0-4.9-3.9-9.1-8.7-9.1h-11.4v-72.5c0-9.1-8.5-15.7-17.6-15\n\t\tc-6,0-11.8,3.1-15.1,8l-52.7,79.8c-1.2,2.1-2.1,4.5-2.1,6.6c0,6.6,5,11.1,10.3,11.1H339v24.3c0,5.6,4.3,10.1,9.9,10.1\n\t\tc6,0,10.5-4.5,10.5-10.1v-24.3h11.4C375.6,244.3,379.5,240.4,379.5,235.5z M339,226.4h-45.5l45.5-67.8V226.4z\"\n            />\n            <path\n              id=\"number_4_inner_lines\"\n              className=\"st14\"\n              d=\"M349,158v109.2 M345.9,147c-5.6,0-10.9,2.8-14,7.2l-47.1,69.5\n\t\tc-1.2,1.9-3.3,4.3-3.6,5.8c-0.8,4.6,2.3,5.5,7.3,5.5H340 M359.5,235H379 M342,232l-4,7 M345,232l-4,7 M358,232l-4,7 M361,232l-4,7\"\n            />\n            <path\n              id=\"number_4_dots\"\n              className=\"st10\"\n              d=\"M349,266c1.6,0,2.9,1.3,2.9,2.9c0,1.6-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9\n\t\tC346.1,267.3,347.4,266,349,266z M349,155.1c1.6,0,2.9,1.3,2.9,2.9s-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9S347.4,155.1,349,155.1\n\t\tz M344.4,144.6c1.6,0,2.9,1.3,2.9,2.9c0,1.6-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9C341.4,145.9,342.7,144.6,344.4,144.6z\"\n            />\n          </g>\n          <g id=\"number_4_2\">\n            <path\n              id=\"number_4_outline_2\"\n              className=\"st1\"\n              d=\"M627,235.5c0-4.9-3.9-9.1-8.7-9.1h-11.4v-72.5c0-9.1-8.5-15.7-17.6-15\n\t\tc-6,0-11.8,3.1-15.1,8l-52.7,79.8c-1.2,2.1-2.1,4.5-2.1,6.6c0,6.6,5,11.1,10.3,11.1h56.7v24.3c0,5.6,4.3,10.1,9.9,10.1\n\t\tc6,0,10.5-4.5,10.5-10.1v-24.3h11.4C623.1,244.3,627,240.4,627,235.5z M586.5,226.4H541l45.5-67.8V226.4z\"\n            />\n            <path\n              id=\"number_4_inner_lines_2\"\n              className=\"st14\"\n              d=\"M596.5,158v109.2 M593.3,147c-5.6,0-10.9,2.8-14,7.2l-47.1,69.5\n\t\tc-1.2,1.9-3.3,4.3-3.6,5.8c-0.8,4.6,2.3,5.5,7.3,5.5h51.5 M607,235h19.5 M589.5,232l-4,7 M592.5,232l-4,7 M605.5,232l-4,7\n\t\t M608.5,232l-4,7\"\n            />\n            <path\n              id=\"number_4_dots_2\"\n              className=\"st10\"\n              d=\"M596.5,266c1.6,0,2.9,1.3,2.9,2.9c0,1.6-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9\n\t\tC593.6,267.3,594.9,266,596.5,266z M596.5,155.1c1.6,0,2.9,1.3,2.9,2.9s-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9\n\t\tS594.9,155.1,596.5,155.1z M591.8,144.6c1.6,0,2.9,1.3,2.9,2.9c0,1.6-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9\n\t\tC588.9,145.9,590.2,144.6,591.8,144.6z\"\n            />\n          </g>\n          <g id=\"number_0\">\n            <path\n              id=\"number_0_outline\"\n              className=\"st1\"\n              d=\"M502,208.9c0-34-15.9-70.9-54-70.9c-38.3,0-54,36.9-54,70.9s15.7,71.1,54,71.1\n\t\tC486.1,280,502,242.9,502,208.9z M481.1,208.9c0,26.8-8.7,53-33.1,53c-24.6,0-33.1-26.2-33.1-53c0-26.8,8.5-52.8,33.1-52.8\n\t\tC472.4,156.1,481.1,182.1,481.1,208.9z\"\n            />\n            <path\n              id=\"number_0_inner_lines\"\n              className=\"st15\"\n              d=\"M487.2,175.7c-6.7-16.8-19.3-29.4-39.2-29.4c-32,0-45.1,32.5-45.1,62.4\n\t\ts13.1,62.6,45.1,62.6c31.8,0,44.1-32.6,44.1-62.6 M487.5,172c3,0,5.5,2.5,5.5,5.5c0,3-2.5,5.5-5.5,5.5c-3,0-5.5-2.5-5.5-5.5\n\t\tC482,174.5,484.5,172,487.5,172z M492.5,202c3,0,5.5,2.5,5.5,5.5c0,3-2.5,5.5-5.5,5.5c-3,0-5.5-2.5-5.5-5.5\n\t\tC487,204.5,489.5,202,492.5,202z\"\n            />\n            <path\n              id=\"number_0_dots\"\n              className=\"st10\"\n              d=\"M492.5,205c1.4,0,2.5,1.1,2.5,2.5c0,1.4-1.1,2.5-2.5,2.5c-1.4,0-2.5-1.1-2.5-2.5\n\t\tC490,206.1,491.1,205,492.5,205z M487.5,175c1.4,0,2.5,1.1,2.5,2.5c0,1.4-1.1,2.5-2.5,2.5c-1.4,0-2.5-1.1-2.5-2.5\n\t\tC485,176.1,486.1,175,487.5,175z M448.1,143.4c1.6,0,2.9,1.3,2.9,2.9c0,1.6-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9\n\t\tC445.1,144.7,446.4,143.4,448.1,143.4z M448.1,268.3c1.6,0,2.9,1.3,2.9,2.9c0,1.6-1.3,2.9-2.9,2.9c-1.6,0-2.9-1.3-2.9-2.9\n\t\tC445.1,269.6,446.4,268.3,448.1,268.3z\"\n            />\n          </g>\n          <g id=\"sword-path\">\n            <g id=\"sword\">\n              <path\n                id=\"sword_handle\"\n                className=\"st5\"\n                d=\"M444.6,196.6l0.6-0.8c1.5-2,1.8-4.3,3.8-2.8l8.9,6.8c2,1.5,2.4,4.3,0.9,6.3l-0.6,0.8 c-1.5,2-4.3,2.4-6.3,0.9L443,201C441,199.5,443.1,198.5,444.6,196.6z\"\n              />\n              <path\n                id=\"sword_handle_line\"\n                className=\"st14\"\n                d=\"M453.9,197c2,1.5,2.4,4.3,0.9,6.3l-0.6,0.8c-1.5,2-4.3,2.4-6.3,0.9\"\n              />\n              <path\n                id=\"sword_hilt\"\n                className=\"st5\"\n                d=\"M432.5,197.1l10.6-13.9c1.6-2.2,4.7-2.6,6.9-0.9c2.2,1.6,2.6,4.7,0.9,6.9l-10.6,13.9 c-1.6,2.2-4.7,2.6-6.9,0.9C431.2,202.4,430.8,199.3,432.5,197.1z\"\n              />\n              <polygon\n                id=\"sword_blade\"\n                className=\"st1\"\n                points=\"437,199 446,187.3 387.3,138.9 366.3,136.7 372.2,154 \t\"\n              />\n              <polygon\n                id=\"sword_blade_shadow\"\n                className=\"st0\"\n                points=\"436.7,197 440.3,192.3 369,138.5 368.5,138.4 373.5,153 \t\"\n              />\n            </g>\n          </g>\n        </svg>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport default (props) => {\n  const bodyRef = React.createRef();\n  const createPdf = () => props.createPdf(bodyRef.current);\n  return (\n    <section className=\"pdf-container\" >\n      <section className=\"pdf-toolbar\" >\n       <center> <button style={{margin:'0.9em 1.5em',background:'blue',color:'white',padding:'0.2em 0.5em',fontSize:'1em'}} onClick={createPdf}>Create PDF</button></center>\n      </section>\n      <section className=\"pdf-body\" ref={bodyRef}>\n        {props.children}\n      </section>\n    </section>\n  )\n}","import { savePDF } from '@progress/kendo-react-pdf';\n\nclass DocService {\n  createPdf = (html) => {\n    savePDF(html, { \n      paperSize: 'Letter',\n      fileName: 'form.pdf',\n      margin: 3\n    })\n  }\n}\n\nconst Doc = new DocService();\nexport default Doc;","import React, { Component } from \"react\";\nimport Error404 from \"./404.js\";\nimport { Button, Container, Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Back from \"@material-ui/icons/ArrowBack\";\nimport { styled } from \"@material-ui/styles\";\nimport Header from \"../Header/index\";\nimport \"./index.css\";\nimport PdfContainer from \"./pdf.js\";\nimport Doc from \"./doc\";\n\nconst MyBack = styled(Back)({\n  color: \"dimgrey\",\n  marginTop: \"-0.2em\",\n  width: \"1em\"\n});\nclass PreviewQues extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isData: false, data: [] };\n  }\n  componentDidMount() {\n    if (\n      this.props.location.state !== undefined &&\n      this.props.location.state.data.length > 0\n    ) {\n      this.setState({ isData: true, data: this.props.location.state.data });\n    } else {\n      if (\n        localStorage.getItem(\"Previewdata\") !== null &&\n        JSON.parse(localStorage.getItem(\"Previewdata\")).length > 0\n      ) {\n        this.setState({\n          isData: true,\n          data: JSON.parse(localStorage.getItem(\"Previewdata\"))\n        });\n      } else {\n        var path = document.getElementById(\"tail\");\n        path.setAttribute(\n          \"d\",\n          \"M89,315c2.2-15.2-23-13.2-21.6,4.8c1.7,22.3,24.4,22.1,42.5,9.1c10.8-7.8,15.3-1.8,19.1,1.1 c2.3,1.7,6.7,3.3,11-3\"\n        );\n      }\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div\n          className=\"backbuttonprint\"\n          style={{\n            boxShadow: \"0px 3px 5px lightgrey\",\n            width: \"auto\",\n            height: \"4.5em\",\n            padding: \"1em 3em\"\n          }}\n        >\n          <Link to=\"/\">\n            <Button\n              variant=\"light\"\n              style={{ background: \"transparent\", border: \"transparent\" }}\n            >\n              <MyBack />\n              <span\n                style={{\n                  marginLeft: \"1em\",\n                  fontSize: \"1.2em\",\n                  color: \"dimgrey\"\n                }}\n              >\n                Back to dashboard\n              </span>\n            </Button>\n          </Link>\n        </div>\n        {this.state.isData && localStorage.getItem(\"previewLanguage\") ? (\n          <ShowData data={this.state.data} />\n        ) : (\n          <Error404 />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nclass ShowData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editabledata: [],\n      selectedLanguage: localStorage.getItem(\"previewLanguage\")\n    };\n  }\n  componentDidMount() {\n    this.setState({ editabledata: this.props.data });\n  }\n  createPdf = html => Doc.createPdf(html);\n  deleteQuestion = index => {\n    let templist = this.state.editabledata;\n    templist.splice(index, 1);\n    this.setState({ editabledata: templist });\n    // console.log(templist);\n    localStorage.setItem('Previewdata',JSON.stringify(templist))\n  };\n  render() {\n    return (\n      <Container>\n        <PdfContainer createPdf={this.createPdf}>\n          <div\n            style={{\n              padding: \"0.5em 1.5em\"\n            }}\n          >\n            {this.state.editabledata &&\n              this.state.editabledata.map((item, index) => {\n                return (\n                  <Row\n                    noGutters={true}\n                    key={item.questionId}\n                    style={{\n                      margin: \"0.5em 0em\"\n                      // borderBottom: \"1px #c2c2c2 solid\"\n                    }}\n                  >\n                    <Col\n                      style={{\n                        paddingLeft: \"0em\",\n                        paddingRight: \"0em\"\n                      }}\n                    >\n                      <Card\n                        style={{\n                          background: \"transparent\",\n                          borderColor: \"transparent\"\n                        }}\n                      >\n                        <Card.Body style={{ padding: \"0\", margin: \"0.5em 0\" }}>\n                          <Card.Title style={{ fontSize: \"medium\" }}>\n                            <Row noGutters={true}>\n                              <Col lg=\"1\">\n                                <span>\n                                  <small>\n                                    <b>#</b>{\" \"}\n                                  </small>\n                                  <span style={{ color: \"dimgrey\" }}>\n                                    {item.questionId}\n                                  </span>\n                                </span>\n                              </Col>\n\n                              <Col>\n                                <span\n                                  style={{\n                                    // float: \"right\",\n                                    fontSize: \"15px\",\n                                    fontWeight: \"600\"\n                                  }}\n                                >\n                                  <b>Tags: </b>\n                                  <span style={{ color: \"#1D4B7F\" }}>\n                                    Difficulty:{\" \"}\n                                    {item.level === \"EASY\"\n                                      ? item.level === \"MILD\"\n                                        ? \"++\"\n                                        : \"+\"\n                                      :  item.level === \"MILD\"\n                                        ? \"++\"\n                                        : \"+++\"}\n                                  </span>\n                                  ,\n                                  <span\n                                    style={{\n                                      color: \"darkgreen\",\n                                      textTransform: \"lowercase\"\n                                    }}\n                                  >\n                                    {\" \"}\n                                    {item.type}\n                                  </span>\n                                </span>\n                              </Col>\n                              <Col lg=\"3\">\n                                <Button\n                                  className=\"backbuttonprint\"\n                                  style={{\n                                    float: \"right\",\n                                    color: \"grey\",\n                                    fontSize: \"0.8em\"\n                                  }}\n                                  variant=\"link\"\n                                  onClick={this.deleteQuestion.bind(\n                                    this,\n                                    index\n                                  )}\n                                >\n                                  X Delete\n                                </Button>\n                              </Col>\n                            </Row>\n                          </Card.Title>\n\n                          <Card.Text style={{ marginBottom: \"0.5em\" }}>\n                            <b>{\"Q. \"}</b>\n                            {item.questionVersions\n                              .filter(\n                                obbj =>\n                                  obbj.language === this.state.selectedLanguage\n                              )[0]\n                              .content.replace(/<\\/?[^>]+(>|$)/g, \"\")}\n                          </Card.Text>\n                          <Row>\n                            {item.questionVersions\n                              .filter(\n                                obbj =>\n                                  obbj.language === this.state.selectedLanguage\n                              )[0]\n                              .options.map((optionitem, optionindex) => {\n                                return (\n                                  <React.Fragment key={optionindex}>\n                                    <Col lg=\"6\" style={{ margin: \"0.5em 0\" }}>\n                                      {optionindex + 1}\n                                      {\") \"}{\" \"}\n                                      {optionitem.content.replace(\n                                        /<\\/?[^>]+(>|$)/g,\n                                        \"\"\n                                      )}{\" \"}\n                                      <sub\n                                      // style={{border:' dimgrey solid',padding:'0.1em'}}\n                                      >\n                                        -<b> {optionitem.weightage}</b>\n                                      </sub>\n                                    </Col>\n                                  </React.Fragment>\n                                );\n                              })}{\" \"}\n                          </Row>\n                          <Row style={{ margin: \"0.2em 0.1em\" }}>\n                            <b> Sol- </b>\n                            {item.questionVersions\n                              .filter(\n                                obbj =>\n                                  obbj.language === this.state.selectedLanguage\n                              )[0]\n                              .solution.replace(/<\\/?[^>]+(>|$)/g, \"\")}\n                          </Row>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  </Row>\n                );\n              })}\n          </div>\n        </PdfContainer>\n      </Container>\n    );\n  }\n}\nexport default PreviewQues;\n","import React, { Component } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport \"./index.css\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nclass LeftPanelExam extends Component {\n  render() {\n    let currentvalueexam = this.props.listOfExam.filter(\n      item => item.exam.examId === this.props.selectedExamID\n    )[0];\n    currentvalueexam = currentvalueexam ? currentvalueexam.name : \"\";\n    let currentvaluesubject = this.props.listOfSubject.filter(\n      item => item.subject.subjectId === this.props.selectedSubjectID\n    )[0];\n    currentvaluesubject = currentvaluesubject\n      ? currentvaluesubject.subjectName\n      : \"\";\n    let currentvaluechapter = this.props.listOfChapter.filter(\n      item => item.subjectSection.sectionId === this.props.selectedChapterID\n    )[0];\n    currentvaluechapter = currentvaluechapter\n      ? currentvaluechapter.sectionName\n      : \"\";\n\n    // let currentvaluetopic = this.props.listOfTopic.filter(\n    //   item => item.subjectTopic.topicId === this.props.selectedTopicID\n    // )[0];\n    // currentvaluetopic = currentvaluetopic ? currentvaluetopic.title : \"\";\n    // let currentvaluesubtopic = this.props.listOfSubTopic.filter(\n    //   item => item.subjectSubtopic.subtopicId === this.props.selectedSubTopicID\n    // )[0];\n    // currentvaluesubtopic = currentvaluesubtopic\n    //   ? currentvaluesubtopic.title\n    //   : \"\";\n    return (\n      <Form>\n        <Form.Group controlId=\"exampleForm.ControlSelect1111\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Exam\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleExamChange}\n            value={currentvalueexam}\n          >\n            {this.props.listOfExam &&\n              this.props.listOfExam.map((item, index) => {\n                return (\n                  <option key={index} value={item.name}>\n                    {item.name}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect111\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Subject\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            // defaultValue=\"\"\n            onChange={this.props.handleSubjectChange}\n            value={currentvaluesubject}\n          >\n            {this.props.listOfSubject &&\n              this.props.listOfSubject.map((item, index) => {\n                return (\n                  <option key={index} value={item.subjectName}>\n                    {item.subjectName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Chapter\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={currentvaluechapter}\n            onChange={this.props.handleChapterChange}\n          >\n            {this.props.listOfChapter &&\n              this.props.listOfChapter.map((item, index) => {\n                return (\n                  <option key={index} value={item.sectionName}>\n                    {item.sectionName}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"exampleForm.ControlSelect2222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Type\n          </Form.Label>\n          <Form.Control\n            style={{ borderRadius: \"0\" }}\n            size=\"sm\"\n            as=\"select\"\n            value={this.props.selectedType}\n            onChange={this.props.handleTypeChange}\n          >\n            {this.props.listOfType &&\n              this.props.listOfType.map((item, index) => {\n                return (\n                  <option key={index} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n          </Form.Control>\n        </Form.Group>\n        {this.props.selectedType === \"Previous year paper\" && (\n          <Form.Group controlId=\"exampleForm.ControlSelect22222\">\n            <Form.Label\n              style={{\n                fontWeight: \"600\"\n              }}\n            >\n              Year\n            </Form.Label>\n            <Form.Control\n              style={{ borderRadius: \"0\" }}\n              size=\"sm\"\n              //   as=\"select\"\n              value={this.props.selectedTypeYear}\n              onChange={this.props.handleTypeYearChange}\n            ></Form.Control>\n          </Form.Group>\n        )}\n        <Form.Group controlId=\"exampleForm.ControlSelect22221\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Stating date of test\n          </Form.Label>\n          <DatePicker\n            selected={this.props.startDate}\n            onChange={this.props.handleStartDateChange}\n            dateFormat=\"dd/MM/yyyy\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect222222\">\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Ending date of test\n          </Form.Label>\n          <DatePicker\n            selected={this.props.endDate}\n            onChange={this.props.handleEndDateChange}\n            dateFormat=\"dd/MM/yyyy\"\n          />\n        </Form.Group>\n        <Form.Group >\n          <Form.Label\n            style={{\n              fontWeight: \"600\"\n            }}\n          >\n            Total time for test (Hr : Min)\n          </Form.Label>\n          <Row noGutters={true}>\n            <Col sm=\"5\">\n              <Form.Control\n              type=\"number\"\n                placeholder=\"Hours\"\n                value={this.props.hour?this.props.hour:0}\n                onChange={this.props.onHourChange.bind(this)}\n              ></Form.Control>\n            </Col>\n            <Col sm=\"2\">\n              <Form.Control\n                style={{\n                  textAlign: \"center\",\n                  fontWeight: \"600\",\n                  fontSize: \"1em\"\n                }}\n                plaintext\n                readOnly\n                defaultValue=\":\"\n              />\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n              type=\"number\"\n                placeholder=\"Minutes\"\n                value={this.props.minute?this.props.minute:0}\n                onChange={this.props.onMinuteChange.bind(this)}\n              ></Form.Control>\n              {/* <TimePickerWrapper\n          \n            timeFormat=\"HH:MM\"\n            // timeMode=\"12\"\n            onTimeChange={this.props.onTimeChange}\n            withoutIcon\n            time={`${this.props.hour}:${this.props.minute}`}\n          /> */}\n            </Col>\n          </Row>\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nexport default LeftPanelExam;\n","import React, { Component } from \"react\";\nimport { Button, Row, Col, Form, Container } from \"react-bootstrap\";\n// import CKEditor from \"@ckeditor/ckeditor5-react\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CKEditor from \"ckeditor4-react\";\nclass RightExamPanel extends Component {\n  render() {\n    return (\n      <div>\n        <Row style={{ height: \"auto\" }}>\n          <Container fluid style={{ padding: \"0\" }}>\n            <Form.Control\n              style={{\n                fontWeight: \"600\",\n                margin: \" 0 0.5em\"\n              }}\n              plaintext\n              readOnly\n              defaultValue=\"Name\"\n            />\n            <Row style={{ margin: \"0em 0\" }}>\n              <Col lg=\"4\" style={{ padding: \"0\" }}>\n                <Form.Control\n                  value={this.props.testnameEnglish}\n                  onChange={this.props.handleEnglishTestNameChange}\n                  placeholder=\"Test name in English\"\n                  style={{ borderRadius: \"0\" }}\n                />\n              </Col>\n              <Col></Col>\n              <Col lg=\"4\" style={{ padding: \"0\" }}>\n                <Form.Control\n                  value={this.props.testnameHindi}\n                  onChange={this.props.handleHindiTestNameChange}\n                  placeholder=\"Test name in Hindi\"\n                  style={{ borderRadius: \"0\", float: \"right\" }}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <div style={{ margin: \"1.7em 0\", width: \"100%\" }}>\n            {/* <Form.Control\n              style={{\n                fontWeight: \"600\",\n                margin: \" 0 0.5em\"\n              }}\n              plaintext\n              readOnly\n              defaultValue=\"Description and Instruction\"\n            /> */}\n            <div style={{ margin: \"0em 0em\", width: \"100%\" }}>\n              <small>Test description and instruction in English</small>\n              <CKEditor\n                onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                // editor={ClassicEditor}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in English\"\n                }}\n                data={this.props.testInstructionEnglish}\n                onChange={event => {\n                  // const data = editor.getData();\n                  this.props.handleEnglishInstructionChange(\n                    event.editor.getData()\n                  );\n                }}\n              />\n            </div>\n            <div style={{ margin: \"1em 0em\", width: \"100%\" }}>\n              <small>Test description and instruction in Hindi</small>\n              <CKEditor\n                onBeforeLoad={CKEDITOR => (CKEDITOR.disableAutoInline = true)}\n                // editor={ClassicEditor}\n                config={{\n                  height: 80\n                  // placeholder: \"Test description and instruction in Hindi\"\n                }}\n                data={this.props.testInstructionHindi}\n                onChange={event => {\n                  // const data = editor.getData();\n                  this.props.handleHindiInstructionChange(\n                    event.editor.getData()\n                  );\n                }}\n              />\n            </div>\n          </div>\n          {this.props.listOfSection.length > 0 && (\n            <Form.Control\n              style={{\n                fontWeight: \"600\",\n                margin: \" 0 0.5em\"\n              }}\n              plaintext\n              readOnly\n              defaultValue=\"Section(s)\"\n            />\n          )}\n          {this.props.listOfSection &&\n            this.props.listOfSection.map((item, index) => {\n              return (\n                <div\n                  key={index}\n                  style={{\n                    border: \"1px solid lightgrey\",\n                    width: \"100%\",\n                    padding: \"1em\",\n                    margin: \"1em 0\"\n                  }}\n                >\n                  <Row noGutters={true} style={{ margin: \"0em 0em\" }}>\n                    <Col lg=\"4\">\n                      {/* <Form.Control\n                        style={{\n                          fontWeight: \"600\"\n                          // margin: \" 0 0.5em\"\n                        }}\n                        plaintext\n                        readOnly\n                        defaultValue=\"Section A\"\n                      /> */}\n                    </Col>\n\n                    {this.props.listOfSection.length === index + 1 && (\n                      <Col>\n                        {/* <Button\n                          style={{ float: \"right\", color: \"grey\" }}\n                          variant=\"link\"\n                          onClick={this.props.deleteSection}\n                        >\n                          X Delete\n                        </Button> */}\n                      </Col>\n                    )}\n                  </Row>\n                  <Row noGutters={true} style={{ margin: \"0em 0em\" }}>\n                    <Col lg=\"5\">\n                      <small>Section Name in English</small>\n                      <Form.Control\n                        value={\n                          item.testSectionVersions.filter(\n                            object => object.language === \"ENGLISH\"\n                          )[0].name\n                        }\n                        onChange={this.props.handleSectionnameChange.bind(\n                          this,\n                          index,\n                          \"ENGLISH\"\n                        )}\n                        placeholder=\"Section name in English\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                    <Col lg=\"2\"></Col>\n                    <Col lg=\"5\">\n                      <small>Section Name in Hindi</small>\n                      <Form.Control\n                        value={\n                          item.testSectionVersions.filter(\n                            object => object.language === \"HINDI\"\n                          )[0].name\n                        }\n                        onChange={this.props.handleSectionnameChange.bind(\n                          this,\n                          index,\n                          \"HINDI\"\n                        )}\n                        placeholder=\"Section name in Hindi\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row noGutters={true} style={{ margin: \"1em 0em\" }}>\n                    {/* <Col lg=\"2\"></Col> */}\n                    <Col lg=\"5\">\n                      <small>Marks/ ques</small>\n                      <Form.Control\n                        disabled\n                        type=\"number\"\n                        value={item.marksPerQuestion}\n                        onChange={this.props.handleMarksperQuesChange.bind(\n                          this,\n                          index\n                        )}\n                        placeholder=\"Marks/ ques\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                    <Col lg=\"2\"></Col>\n                    <Col lg=\"5\">\n                      <small>Negative marks / ques</small>\n                      <Form.Control\n                        disabled\n                        type=\"number\"\n                        value={item.negativeMarksPerQuestion}\n                        onChange={this.props.handleNegativeMarksPerQuesChange.bind(\n                          this,\n                          index\n                        )}\n                        placeholder=\"-ve/ wrong ques\"\n                        style={{ borderRadius: \"0\" }}\n                      />\n                    </Col>\n                  </Row>\n                  <div style={{ margin: \"1.7em 0\", width: \"100%\" }}>\n                    <div style={{ margin: \"0em 0em\", width: \"100%\" }}>\n                      <small>\n                        Section description and instruction in English\n                      </small>\n                      <CKEditor\n                        onBeforeLoad={CKEDITOR =>\n                          (CKEDITOR.disableAutoInline = true)\n                        }\n                        // editor={ClassicEditor}\n                        data={\n                          item.testSectionVersions.filter(\n                            object => object.language === \"ENGLISH\"\n                          )[0].content\n                        }\n                        config={{\n                          height: 80\n                          // placeholder:\n                          //   \"Section description and instruction in English\"\n                        }}\n                        onChange={event => {\n                          // const data = editor.getData();\n                          this.props.handleSectionDescriptionChange(\n                            index,\n                            \"ENGLISH\",\n                            event.editor.getData()\n                          );\n                        }}\n                      />\n                    </div>\n                    <div style={{ margin: \"1em 0em\", width: \"100%\" }}>\n                      <small>\n                        Section description and instruction in Hindi\n                      </small>\n                      <CKEditor\n                        onBeforeLoad={CKEDITOR =>\n                          (CKEDITOR.disableAutoInline = true)\n                        }\n                        // editor={ClassicEditor}\n                        data={\n                          item.testSectionVersions.filter(\n                            object => object.language === \"HINDI\"\n                          )[0].content\n                        }\n                        config={{\n                          height: 80,\n                          placeholder:\n                            \"Section description and instruction in Hindi\"\n                        }}\n                        onChange={event => {\n                          // const data = editor.getData();\n                          this.props.handleSectionDescriptionChange(\n                            index,\n                            \"HINDI\",\n                            event.editor.getData()\n                          );\n                        }}\n                      />\n                    </div>\n                  </div>\n                  {item.questions &&\n                    item.questions.map((itemquestion, indexquestion) => {\n                      return (\n                        <Row style={{ marginTop: \"0.5em\" }}>\n                          {/* <Col lg=\"2\"></Col> */}\n                          <Col lg=\"1\">\n                            <Form.Control\n                              style={{\n                                fontWeight: \"500\",\n                                margin: \" 0 0.5em\",\n                                textAlign: \"right\"\n                                // paddingRight:'0'\n                              }}\n                              plaintext\n                              readOnly\n                              defaultValue={`Q ${indexquestion + 1}`}\n                            />\n                          </Col>\n                          <Col lg=\"3\" style={{}}>\n                            <Form.Control\n                              type=\"number\"\n                              value={itemquestion}\n                              onChange={this.props.handlSectionQuestionValueChange.bind(\n                                this,\n                                index,\n                                indexquestion\n                              )}\n                              placeholder=\"Question ID#\"\n                              style={{ borderRadius: \"0\" }}\n                            />\n                          </Col>\n                          {item.questions.length === indexquestion + 1 && (\n                            <Col>\n                              <Button\n                                style={{ float: \"left\", color: \"grey\" }}\n                                variant=\"link\"\n                                onClick={this.props.deleteSectionQuestion.bind(\n                                  this,\n                                  index\n                                )}\n                              >\n                                X Delete\n                              </Button>\n                            </Col>\n                          )}\n                        </Row>\n                      );\n                    })}\n                  <Row style={{ marginTop: \"0.5em\" }}>\n                    <Col lg=\"1\"></Col>\n                    <Col>\n                      {/* <Button\n                        onClick={this.props.addSectionQuestions.bind(\n                          this,\n                          index\n                        )}\n                        varirant=\"info\"\n                        style={{\n                          fontSize: \"0.8em\",\n                          fontWeight: \"700\",\n                          background: \"#6992EF\",\n                          borderColor: \"#6992EF\",\n                          borderRadius: \"0\",\n                          float: \"left\"\n                        }}\n                      >\n                        {\" \"}\n                        + Add question\n                      </Button> */}\n                    </Col>\n                  </Row>\n                </div>\n              );\n            })}\n\n          <Container fluid style={{ paddingRight: \"0\" }}>\n            <Row noGutters={true} style={{ margin: \"1em 0em\" }}>\n              <Col lg=\"10\"> </Col>\n              <Col>\n                {/* <Button\n                  onClick={this.props.addSection}\n                  varirant=\"info\"\n                  style={{\n                    fontSize: \"0.8em\",\n                    fontWeight: \"700\",\n                    background: \"#FF8976\",\n                    borderColor: \"#FF8976\",\n                    borderRadius: \"0\",\n                    float: \"right\"\n                  }}\n                >\n                  {\" \"}\n                  + Add Section\n                </Button> */}\n              </Col>\n            </Row>\n          </Container>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default RightExamPanel;\n","import React, { Component } from \"react\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport LeftPanelexam from \"./leftpanelexam.js\";\nimport axios from \"axios\";\nimport URL from \"../../Assets/url\";\nimport RightExamPanel from \"./rightpanelexam.js\";\n\nclass ExamEditComponent extends Component {\n  constructor(props) {\n    super(props);\n    let minutes =\n      Number(\"0.\" + this.props.fetchedData.time.toString().split(\".\")[1]) * 60;\n    let hours = this.props.fetchedData.time.toString().split(\".\")[0];\n    this.state = {\n      listOfExam: [],\n      selectedExamID: \"\",\n      listOfSubject: [],\n      selectedSubjectID: \"\",\n      listOfChapter: [],\n      selectedChapterID: \"\",\n      listOfType: [\"Free\", \"Weekly\", \"Practise test\", \"Previous year paper\"],\n      startDate: new Date(),\n      endDate: new Date(),\n      testnameEnglish: this.props.fetchedData.testVersions.filter(\n        item => item.language === \"ENGLISH\"\n      )[0].name,\n      testnameHindi: this.props.fetchedData.testVersions.filter(\n        item => item.language === \"HINDI\"\n      )[0].name,\n      testInstructionEnglish: this.props.fetchedData.testVersions.filter(\n        item => item.language === \"ENGLISH\"\n      )[0].instructions,\n      testInstructionHindi: this.props.fetchedData.testVersions.filter(\n        item => item.language === \"HINDI\"\n      )[0].instructions,\n      hour: hours,\n      minute: minutes,\n      selectedType: this.props.fetchedData.type,\n      selectedTypeYear: this.props.fetchedData.year?this.props.fetchedData.year:null,\n      listOfSection: this.props.fetchedData.testSections,\n      englishtestVersionId:this.props.fetchedData.testVersions.filter(\n        item => item.language === \"ENGLISH\"\n      )[0].testVersionId,\n      hinditestVersionId:this.props.fetchedData.testVersions.filter(\n        item => item.language === \"HINDI\"\n      )[0].testVersionId,\n      \n    };\n  }\n  addSectionQuestions = index => {\n    let tempsectionlist = this.state.listOfSection;\n    if(tempsectionlist[index].questions){\n\n      tempsectionlist[index].questions.push(\"\");\n    }else{\n      tempsectionlist[index].questions=[\"\"]\n    }\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  deleteSectionQuestion = index => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].questions.pop();\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handlSectionQuestionValueChange = (index, indexquestion, e) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].questions[indexquestion] = parseInt(e.target.value);\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleSectionDescriptionChange = (index, language, data) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].testSectionVersions.filter(\n      item => item.language === language\n    )[0].content = data;\n\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleNegativeMarksPerQuesChange = (index, e) => {\n    // console.log(index,e)\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].negativeMarksPerQuestion = e.target.value;\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleMarksperQuesChange = (index, e) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].marksPerQuestion = e.target.value;\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  addSection = () => {\n    // console.log('add section');\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist.push({\n      marksPerQuestion: '',\n      negativeMarksPerQuestion: '',\n      questions: [],\n\n      testSectionVersions: [\n        {\n          content: \"\",\n          language: \"ENGLISH\",\n          name: \"string\",\n          sectionName: \"\"\n        },\n        {\n          content: \"\",\n          language: \"HINDI\",\n          name: \"string\",\n          sectionName: \"\"\n        }\n      ]\n    });\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  deleteSection = () => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist.pop();\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleSectionnameChange = (index, language, e) => {\n    let tempsectionlist = this.state.listOfSection;\n    tempsectionlist[index].testSectionVersions.filter(\n      item => item.language === language\n    )[0].name = e.target.value;\n    this.setState({ listOfSection: tempsectionlist });\n  };\n  handleEnglishTestNameChange = e => {\n    this.setState({ testnameEnglish: e.target.value });\n  };\n  handleHindiTestNameChange = e => {\n    this.setState({ testnameHindi: e.target.value });\n  };\n  handleEnglishInstructionChange = data => {\n    this.setState({ testInstructionEnglish: data });\n  };\n  handleHindiInstructionChange = data => {\n    this.setState({ testInstructionHindi: data });\n  };\n  onHourChange = e => {\n    this.setState({ hour: e.target.value });\n  };\n\n  onMinuteChange = e => {\n    this.setState({ minute: e.target.value });\n  };\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: date\n    });\n  };\n  handleTypeYearChange = e => {\n    this.setState({ selectedTypeYear: e.target.value });\n  };\n  componentDidMount() {\n    // let minutes =\n    //   Number(\"0.\" + this.props.fetchedData.time.toString().split(\".\")[1]) * 60;\n    // let hours = this.props.fetchedData.time.toString().split(\".\")[0];\n\n    // this.setState({\n    //   // endDate: this.props.fetchedData.endDate,\n    //   // startDate: this.props.fetchedData.startDate,\n    //   testnameEnglish: this.props.fetchedData.testVersions.filter(\n    //     item => item.language === \"ENGLISH\"\n    //   )[0].name,\n    //   testnameHindi: this.props.fetchedData.testVersions.filter(\n    //     item => item.language === \"HINDI\"\n    //   )[0].name,\n    //   testInstructionEnglish: this.props.fetchedData.testVersions.filter(\n    //     item => item.language === \"ENGLISH\"\n    //   )[0].instructions,\n    //   testInstructionHindi: this.props.fetchedData.testVersions.filter(\n    //     item => item.language === \"HINDI\"\n    //   )[0].instructions,\n    //   hour: hours,\n    //   minute: minutes,\n    //   selectedType: this.props.fetchedData.type,\n    //   selectedTypeYear: this.props.fetchedData.year\n    // });\n    axios({\n      method: \"POST\",\n      url: URL.fetchExam + \"ENGLISH\",\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // console.log(res.data.data);\n        if (res.status === 200) {\n          let templist = res.data.data.list.filter(\n            item => item.exam.examId === this.props.fetchedData.examId\n          );\n          if (templist.length > 0) {\n            this.setState(\n              {\n                listOfExam: res.data.data.list,\n                selectedExamID:\n                  res.data.data.list.length > 0\n                    ? this.props.fetchedData.examId\n                    : \"\"\n              },\n              () => {\n                this.callApiForSubject();\n              }\n            );\n          } else {\n            this.setState(\n              {\n                listOfExam: res.data.data.list,\n                selectedExamID:\n                  res.data.data.list.length > 0\n                    ? res.data.data.list[0].exam.examId\n                    : \"\"\n              },\n              () => {\n                this.callApiForSubject();\n              }\n            );\n          }\n        } else {\n          alert(\"Unexpected code\");\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  callApiForSubject = () => {\n    if (this.state.selectedExamID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchSubjectForExam + this.state.selectedExamID,\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            axios({\n              method: \"POST\",\n              url: URL.fetchSubject + \"ENGLISH\",\n              data: { authToken: \"string\" },\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(response => {\n              if (response.status === 200) {\n                let tempsubjectlist = [];\n                for (let i = 0; i < res.data.data.list.length; i++) {\n                  for (let j = 0; j < response.data.data.list.length; j++) {\n                    if (\n                      response.data.data.list[j].subject.subjectId ===\n                      res.data.data.list[i].subjectId\n                    ) {\n                      tempsubjectlist.push(response.data.data.list[j]);\n                    }\n                  }\n                }\n                let templist = tempsubjectlist.filter(\n                  item =>\n                    item.subject.subjectId === this.props.fetchedData.subjectId\n                );\n                if (templist.length > 0) {\n                  this.setState(\n                    {\n                      listOfSubject: tempsubjectlist,\n                      selectedSubjectID:\n                        tempsubjectlist.length > 0\n                          ? this.props.fetchedData.subjectId\n                          : \"\"\n                    },\n                    () => {\n                      this.callApiForChapter();\n                    }\n                  );\n                } else {\n                  this.setState(\n                    {\n                      listOfSubject: tempsubjectlist,\n                      selectedSubjectID:\n                        tempsubjectlist.length > 0\n                          ? tempsubjectlist[0].subject.subjectId\n                          : \"\"\n                    },\n                    () => {\n                      this.callApiForChapter();\n                    }\n                  );\n                }\n              }\n            });\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\"(English)examid is blank. API not called. exam list\");\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\",\n\n        listOfSubject: [],\n        selectedSubjectId: \"\"\n      });\n    }\n  };\n  callApiForChapter = () => {\n    if (this.state.selectedSubjectID !== \"\") {\n      axios({\n        method: \"POST\",\n        url: URL.fetchChapter + this.state.selectedSubjectID + \"/ENGLISH\",\n        data: { authToken: \"string\" },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.status === 200) {\n            let templist = res.data.data.list.filter(\n              item =>\n                item.subjectSection.sectionId ===\n                this.props.fetchedData.sectionId\n            );\n            if (templist.length > 0) {\n              this.setState(\n                {\n                  listOfChapter: res.data.data.list,\n                  selectedChapterID:\n                    res.data.data.list.length > 0\n                      ? this.props.fetchedData.sectionId\n                      : \"\"\n                },\n                () => {\n                  // this.callApiForTopic();\n                }\n              );\n            } else {\n              this.setState(\n                {\n                  listOfChapter: res.data.data.list,\n                  selectedChapterID:\n                    res.data.data.list.length > 0\n                      ? res.data.data.list[0].subjectSection.sectionId\n                      : \"\"\n                },\n                () => {\n                  // this.callApiForTopic();\n                }\n              );\n            }\n          } else {\n            alert(\"Unexpected code\");\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      console.log(\n        \"(English)subjectid is blank. API not called. checksubject list\"\n      );\n      this.setState({\n        listOfChapter: [],\n        selectedChapterID: \"\"\n      });\n    }\n  };\n  handleExamChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedExamID: this.state.listOfExam[e.target.options.selectedIndex]\n          .exam.examId\n      },\n      () => {\n        this.callApiForSubject();\n      }\n    );\n  };\n  handleSubjectChange = e => {\n    e.preventDefault();\n\n    this.setState(\n      {\n        selectedSubjectID: this.state.listOfSubject[\n          e.target.options.selectedIndex\n        ].subject.subjectId\n      },\n      () => {\n        this.callApiForChapter();\n      }\n    );\n  };\n  handleChapterChange = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        selectedChapterID: this.state.listOfChapter[\n          e.target.options.selectedIndex\n        ].subjectSection.sectionId\n      },\n      () => {}\n    );\n  };\n  handleTypeChange = e => {\n    e.preventDefault();\n    this.setState({ selectedType: e.target.value }, () => {\n      // this.componentDidMount();\n    });\n  };\n  saveExamdata = () => {\n    axios({\n      method: \"POST\",\n      url: URL.updatetest,\n      data: {\n        authToken: \"string\",\n        endDate: this.state.endDate.toISOString(),\n        examId: this.state.selectedExamID,\n        sectionId: this.state.selectedChapterID,\n        sections: this.state.listOfSection,\n        startDate: this.state.startDate.toISOString(),\n        subjectId: this.state.selectedSubjectID,\n        testId: this.props.fetchedData.testId,\n        testInstructions: [\n          {\n            instructions: this.state.testInstructionEnglish,\n            language: \"ENGLISH\",\n            name: this.state.testnameEnglish,\n            testVersionId: this.state.englishtestVersionId,\n            \n          },\n          {\n            instructions: this.state.testInstructionHindi,\n            language: \"HINDI\",\n            name: this.state.testnameHindi,\n            testVersionId: this.state.hinditestVersionId\n          }\n        ],\n        time:\n          parseFloat(this.state.hour) +\n          parseFloat(Number(parseInt(this.state.minute) / 60)),\n        type: this.state.selectedType,\n        year: this.state.selectedTypeYear\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.data.data);\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n  render() {\n    return (\n      <Container\n        fluid\n        style={{\n          width: \"auto\",\n          background: \"#EEEEEE\",\n          padding: \"0.5em 1.5em\"\n        }}\n      >\n        <div style={{ padding: \"20px 0\", margin: \"0 1em\" }}>\n          <Row>\n            <Col\n              lg=\"3\"\n              style={{\n                padding: \"0em 1em\"\n                // background: \"#EEE\"\n              }}\n            >\n              <div>\n                <LeftPanelexam\n                  startDate={this.state.startDate}\n                  endDate={this.state.endDate}\n                  handleEndDateChange={this.handleEndDateChange}\n                  handleStartDateChange={this.handleStartDateChange}\n                  hour={this.state.hour}\n                  minute={this.state.minute}\n                  onHourChange={this.onHourChange}\n                  onMinuteChange={this.onMinuteChange}\n                  listOfSubject={this.state.listOfSubject}\n                  listOfChapter={this.state.listOfChapter}\n                  listOfExam={this.state.listOfExam}\n                  handleSubjectChange={this.handleSubjectChange}\n                  handleChapterChange={this.handleChapterChange}\n                  handleExamChange={this.handleExamChange}\n                  selectedSubjectID={this.state.selectedSubjectID}\n                  selectedChapterID={this.state.selectedChapterID}\n                  selectedExamID={this.state.selectedExamID}\n                  listOfType={this.state.listOfType}\n                  selectedType={this.state.selectedType}\n                  handleTypeChange={this.handleTypeChange}\n                  handleTypeYearChange={this.handleTypeYearChange}\n                  selectedTypeYear={this.state.selectedTypeYear}\n                />\n              </div>\n            </Col>\n            <Col lg=\"1\"></Col>\n            <Col\n              style={{\n                background: \"#EEEEEE\"\n              }}\n            >\n              <RightExamPanel\n                testnameEnglish={this.state.testnameEnglish}\n                testnameHindi={this.state.testnameHindi}\n                testInstructionEnglish={this.state.testInstructionEnglish}\n                testInstructionHindi={this.state.testInstructionHindi}\n                handleHindiInstructionChange={this.handleHindiInstructionChange}\n                handleEnglishInstructionChange={\n                  this.handleEnglishInstructionChange\n                }\n                handleHindiTestNameChange={this.handleHindiTestNameChange}\n                handleEnglishTestNameChange={this.handleEnglishTestNameChange}\n                listOfSection={this.state.listOfSection}\n                deleteSection={this.deleteSection}\n                handleSectionnameChange={this.handleSectionnameChange}\n                handleNegativeMarksPerQuesChange={\n                  this.handleNegativeMarksPerQuesChange\n                }\n                handleMarksperQuesChange={this.handleMarksperQuesChange}\n                handleSectionDescriptionChange={\n                  this.handleSectionDescriptionChange\n                }\n                addSectionQuestions={this.addSectionQuestions}\n                deleteSectionQuestion={this.deleteSectionQuestion}\n                addSection={this.addSection}\n                handlSectionQuestionValueChange={\n                  this.handlSectionQuestionValueChange\n                }\n              />\n              <div style={{ margin: \"1em 0\", textAlign: \"center\" }}>\n                <Button\n                  style={{\n                    borderRadius: \"0\",\n                    background: \"#3F5FBB\",\n                    borderColor: \"#3F5FBB\",\n                    padding: \"0.6em 2.5em\",\n                    fontSize: \"1.1em\",\n                    fontWeight: \"600\"\n                  }}\n                  onClick={this.saveExamdata}\n                >\n                  Update data\n                </Button>\n              </div>\n            </Col>\n            <Col lg=\"1\"></Col>\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default ExamEditComponent;\n","import React, { Component } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport Header from \"../Header/index\";\nimport Back from \"@material-ui/icons/ArrowBack\";\nimport { styled } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport URL from \"../../Assets/url\";\nimport EditComponentExam from \"./editcomponentexam.js\";\nconst MyBack = styled(Back)({\n  color: \"dimgrey\",\n  marginTop: \"-0.2em\",\n  width: \"1em\"\n});\nclass EditExam extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testId: this.props.match.params.id,\n      fetchedData: null\n      // activetab: \"1\"\n    };\n  }\n  componentDidMount() {\n    axios({\n      method: \"POST\",\n      url: URL.getexamcontent + this.state.testId,\n      data: { authToken: \"string\" },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res.data.data.test);\n      if (res.status === 200) {\n        this.setState({ fetchedData: res.data.data.test });\n      }\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div\n          style={{\n            boxShadow: \"0px 3px 5px lightgrey\",\n            width: \"auto\",\n            height: \"4.5em\",\n            padding: \"1em 3em\"\n          }}\n        >\n          <Link to=\"/\" target=\"_self\">\n            <Button\n              variant=\"light\"\n              style={{ background: \"transparent\", border: \"transparent\" }}\n            >\n              <MyBack />\n              <span\n                style={{\n                  marginLeft: \"1em\",\n                  fontSize: \"1.2em\",\n                  color: \"dimgrey\"\n                }}\n              >\n                Back to dashboard\n              </span>\n            </Button>\n          </Link>\n        </div>\n        <Container\n          fluid\n          style={{\n            width: \"auto\",\n            // height:'90vh',\n            background: \"#EEEEEE\",\n            padding: \"0.5em 1.5em\"\n          }}\n        >\n          {this.state.fetchedData && (\n            <EditComponentExam fetchedData={this.state.fetchedData} />\n          )}\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default EditExam;\n","import Login from \"./UI/Login/index.js\";\nimport Ques from \"./UI/Ques/index.js\";\nimport Dashboard from \"./UI/Dashboard/index.js\";\nimport Exam from \"./UI/Exam/index.js\";\nimport Editques from \"./UI/Editques/index.js\";\nimport React, { Component } from \"react\";\nimport PreviewQues from \"./UI/QuesPreview/index.js\";\nimport EditExam from \"./UI/Editexam/index.js\";\nimport { createBrowserHistory } from \"history\";\nimport {\n  Route,\n  Redirect,\n  HashRouter as Router,\n  // Switch\n} from \"react-router-dom\";\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nconst ProtectedRoute = ({ component: Component, authenticated, path }) => {\n  // console.log(path,authenticated)\n  return (\n    <Route\n      exact\n      render={props =>\n        authenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n      path={path}\n    />\n  );\n};\nclass Navigation extends Component {\n  render() {\n    return (\n      <Router basename={'/'}>\n        {/* <Switch> */}\n        <Route\n          exact\n          authenticated={this.props.authenticated}\n          path=\"/login\"\n          component={Login}\n        />\n        <ProtectedRoute\n          authenticated={this.props.authenticated}\n          path=\"/\"\n          component={Dashboard}\n        />\n\n        <ProtectedRoute\n          authenticated={this.props.authenticated}\n          path=\"/addques\"\n          component={Ques}\n        />\n        <ProtectedRoute\n          authenticated={this.props.authenticated}\n          path=\"/addexam\"\n          component={Exam}\n        />\n        <ProtectedRoute\n          authenticated={this.props.authenticated}\n          path=\"/editques/:id\"\n          component={Editques}\n        />\n        <ProtectedRoute\n          authenticated={this.props.authenticated}\n          path=\"/quespreview\"\n          component={PreviewQues}\n        />\n        <ProtectedRoute\n          authenticated={this.props.authenticated}\n          path=\"/editexam/:id\"\n          component={EditExam}\n        />\n        {/* </Switch> */}\n      </Router>\n    );\n  }\n}\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport Navigation from \"./Navigation\";\nimport firebase from \"./firebaseApp\";\nimport axios from \"axios\";\n\nimport \"./index.css\";\nclass App extends Component {\n  state = {\n    authenticated: undefined\n  };\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(authenticated => {\n      if (authenticated) {\n        firebase\n          .auth()\n          .currentUser.getIdToken()\n          .then(idToken => {\n            // console.log(idToken)\n            // localStorage.setItem(\"idToken\", idToken);\n            axios.interceptors.request.use(config => {\n              if (config.data && config.data.authToken) {\n                config.data.authToken = idToken;\n              }\n              return Promise.resolve(config);\n            });\n            this.setState({\n              authenticated: true\n            });\n          });\n      } else {\n        // console.log(\"authenticated\", authenticated);\n        this.setState({\n          authenticated: false\n        });\n      }\n    });\n  }\n  render() {\n    // console.log(this.state.authenticated);\n    // return  <Navigation authenticated={this.state.authenticated} />\n    return this.state.authenticated !== undefined &&\n      this.state.authenticated !== null ? (\n      <Navigation authenticated={this.state.authenticated} />\n    ) : (\n      <div className=\"loader\"></div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.4d22582e.png\";"],"sourceRoot":""}